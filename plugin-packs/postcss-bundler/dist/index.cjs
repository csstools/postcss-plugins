"use strict";var e=require("@csstools/css-parser-algorithms"),t=require("@csstools/css-tokenizer"),r=require("path"),o=require("module"),n=require("fs/promises"),s=require("@csstools/postcss-rebase-url");function isWarning(e){return"warning"===e.type}function isCharsetStatement(e){return"charset"===e.type}function isImportStatement(e){return"import"===e.type}const i=/^data:text\/css(?:;(base64|plain))?,/i,a=/^data:text\/css;base64,/i,u=/^data:text\/css;plain,/i;function isValidDataURL(e){return!!e&&i.test(e)}const l=/^charset$/i,p=/^import$/i,c=/^url$/i,d=/^layer$/i,m=/^supports$/i;function parseAtImport(r){const o=e.parseListOfComponentValues(t.tokenize({css:r}));let n,s,i,a="",u="";e:for(let r=0;r<o.length;r++){const l=o[r];if(!e.isWhitespaceNode(l)&&!e.isCommentNode(l))if(!e.isTokenNode(l)||l.value[0]!==t.TokenType.String&&l.value[0]!==t.TokenType.URL){if(e.isFunctionNode(l)&&c.test(l.getName())){if(a)return!1;for(let r=0;r<l.value.length;r++){const o=l.value[r];if(!e.isWhitespaceNode(o)&&!e.isCommentNode(o)){if(e.isTokenNode(o)&&o.value[0]===t.TokenType.String){a=o.value[4].value,u=e.stringify([[l]]);continue e}return!1}}}if(!a)return!1;if(e.isTokenNode(l)&&l.value[0]===t.TokenType.Ident&&d.test(l.value[4].value)){if(void 0!==n||void 0!==i)return!1;n=""}else if(e.isFunctionNode(l)&&d.test(l.getName())){if(void 0!==n||void 0!==i)return!1;n=e.stringify([l.value]).trim()}else{if(!e.isFunctionNode(l)||!m.test(l.getName())){s=e.stringify([o.slice(r)]).trim();break}if(void 0!==i)return!1;i=e.stringify([l.value]).trim()}}else{if(a)return!1;a=l.value[4].value,u=l.value[1]}}return a=stripHash(a),!!a&&{uri:a,fullUri:u,layer:n,media:s,supports:i}}function stripHash(e){if(e.startsWith("#"))return"";if(!e.includes("#"))return e;try{const t=new URL(e,"http://example.com");return t.hash?e.slice(0,e.length-t.hash.length):e}catch{return e}}function parseStatements(e,t,r,o,n){const s=[];if("document"===t.type)return t.each((t=>{s.push(...parseStatements(e,t,r,o,n))})),s;let i=[];return t.each((t=>{let a;"atrule"===t.type&&(p.test(t.name)?a=parseImport(e,t,r,o,n):l.test(t.name)&&(a=parseCharset(e,t,r,o,n))),a?(i.length&&(s.push({type:"nodes",nodes:i,conditions:[...o],from:n,importingNode:r}),i=[]),s.push(a)):i.push(t)})),i.length&&s.push({type:"nodes",nodes:i,conditions:[...o],from:n,importingNode:r}),s}function parseCharset(e,t,r,o,n){return t.prev()?e.warn("@charset must precede all other statements",{node:t}):{type:"charset",node:t,conditions:[...o],from:n,importingNode:r}}function parseImport(e,t,r,o,n){let s=t.prev(),i=!1;for(;s;){if("comment"!==s.type){if("atrule"===s.type&&p.test(s.name)){i=!0;break}break}s=s.prev()}if(!i)for(;s;){if(!("comment"===s.type||"atrule"===s.type&&l.test(s.name)||"atrule"===s.type&&d.test(s.name)&&!s.nodes))return e.warn("@import must precede all other statements (besides @charset or empty @layer)",{node:t});s=s.prev()}if(t.nodes)return e.warn("It looks like you didn't end your @import statement correctly. Child nodes are attached to it.",{node:t});const a={type:"import",uri:"",fullUri:"",node:t,conditions:[...o],from:n,importingNode:r},u=parseAtImport(t.params);if(!u)return e.warn(`Invalid @import statement in '${t.toString()}'`,{node:t});const{layer:c,media:m,supports:f,uri:h,fullUri:y}=u;return a.uri=h,a.fullUri=y,void 0===c&&void 0===m&&void 0===f||a.conditions.push({layer:c,media:m,supports:f}),a}function resolveId(e,t,o,n){let s="";if(o.startsWith("node_modules:"))try{s=t.resolve(o.slice(13))}catch(t){throw e.error(`Failed to find '${o}'`)}else s=r.resolve(n,o);return s}function createRequire(e,t){var n;let s;if(null==(n=e.source)||null==(n=n.input)||!n.file)return t.warn("The current PostCSS AST Node is lacking a source file reference. This is most likely a bug in a PostCSS plugin.",{node:e}),[];s=e.source.input.file;const i=r.dirname(s);return[o.createRequire(i),s,i]}async function loadContent(e){return isValidDataURL(e)?(t=e,a.test(t)?Buffer.from(t.slice(21),"base64").toString():u.test(t)?decodeURIComponent(t.slice(20)):decodeURIComponent(t.slice(14))):n.readFile(e,"utf-8");var t}const noopPlugin=()=>({postcssPlugin:"noop-plugin",Once(){}});async function parseStyles(e,t,r,o,n,s){const i=parseStatements(e,t,r,o,n);{let t,r,o;const n=[];for(const a of i)isImportStatement(a)&&isProcessableURL(a.uri)&&(t&&r&&o||([t,r,o]=createRequire(a.node,e),t&&r&&o))&&n.push(resolveImportId(e,a,s,t,r,o));await Promise.all(n)}let a=null;const u=[],l=[];return i.forEach((e=>{isCharsetStatement(e)?a=handleCharset(e,a):isImportStatement(e)?e.children?e.children.forEach((e=>{isImportStatement(e)?u.push(e):isCharsetStatement(e)?a=handleCharset(e,a):l.push(e)})):u.push(e):"nodes"===e.type&&l.push(e)})),a?[a,...u.concat(l)]:u.concat(l)}async function resolveImportId(e,t,r,o,n,s){if(isValidDataURL(t.uri))return void(t.children=await loadImportContent(e,t,t.uri,r));if(isValidDataURL(t.from[t.from.length-1]))return t.children=[],void e.warn(`Unable to import '${t.uri}' from a stylesheet that is embedded in a data url`,{node:t.node});const i=resolveId(t.node,o,t.uri,s);e.messages.push({type:"dependency",plugin:"postcss-bundler",file:i,parent:n});const a=await loadImportContent(e,t,i,r);t.children=a??[]}async function loadImportContent(e,t,r,o){var n,s;const{conditions:i,from:a,node:u}=t;if(a.includes(r))return;let p;try{p=await loadContent(r)}catch{throw u.error(`Failed to find '${t.uri}'`)}const c=await o([noopPlugin()]).process(p,{from:r,parser:(null==(n=e.opts.syntax)?void 0:n.parse)??e.opts.parser??void 0}),d=c.root;return e.messages=e.messages.concat(c.messages),"atrule"===(null==(s=d.first)?void 0:s.type)&&l.test(d.first.name)?d.first.after(o.comment({text:`${t.uri}`,source:u.source})):d.prepend(o.comment({text:`${t.uri}`,source:u.source})),parseStyles(e,d,u,i,[...a,r],o)}function isProcessableURL(e){if(/^(?:[a-z]+:)?\/\//i.test(e))return!1;try{if(new URL(e,"https://example.com").search)return!1}catch{}return!0}function handleCharset(e,t=null){if(!t)return e;var r,o;if(e.node.params.toLowerCase()!==t.node.params.toLowerCase())throw e.node.error(`Incompatible @charset statements:\n  ${e.node.params} specified in ${null==(r=e.node.source)?void 0:r.input.file}\n  ${t.node.params} specified in ${null==(o=t.node.source)?void 0:o.input.file}`);return t}function formatImportPrelude(e,t,r){const o=[];if(void 0!==e){let t="layer";e&&(t="layer("+e+")"),o.push(t)}return void 0!==r&&o.push("supports("+r+")"),void 0!==t&&o.push(t),o.join(" ")}function applyConditions(e,t){e.forEach(((r,o)=>{var n;if(isWarning(r)||isCharsetStatement(r)||null==(n=r.conditions)||!n.length)return;if(isImportStatement(r)){if(1===r.conditions.length)r.node.params=`${r.fullUri} ${formatImportPrelude(r.conditions[0].layer,r.conditions[0].media,r.conditions[0].supports)}`;else{r.conditions.reverse();const e=r.conditions.pop();let t=`${r.fullUri} ${formatImportPrelude(e.layer,e.media,e.supports)}`;for(const e of r.conditions)t=`'data:text/css;base64,${Buffer.from(`@import ${t}`).toString("base64")}' ${formatImportPrelude(e.layer,e.media,e.supports)}`;r.node.params=t}return}const s=r.nodes;if(!s.length)return;const i=s[0].parent;if(!i)return;const a=[];for(const e of r.conditions){if(void 0!==e.media){var u;const o=t({name:"media",params:e.media,source:(null==(u=r.importingNode)?void 0:u.source)??i.source});a.push(o)}if(void 0!==e.supports){var l;const o=t({name:"supports",params:"("+e.supports+")",source:(null==(l=r.importingNode)?void 0:l.source)??i.source});a.push(o)}if(void 0!==e.layer){var p;const o=t({name:"layer",params:e.layer,source:(null==(p=r.importingNode)?void 0:p.source)??i.source});a.push(o)}}const c=a[0];if(!c)return;for(let e=0;e<a.length-1;e++)a[e].append(a[e+1]);const d=a[a.length-1];i.insertBefore(s[0],c),s.forEach((e=>{e.parent=void 0})),s[0].raws.before=s[0].raws.before||"\n",d.append(s),e[o]={type:"nodes",nodes:[c],conditions:r.conditions,from:r.from,importingNode:r.importingNode}}))}function applyStyles(e,t){t.nodes=[],e.forEach((e=>{isCharsetStatement(e)||isImportStatement(e)?(e.node.parent=void 0,t.append(e.node)):"nodes"===e.type&&e.nodes.forEach((e=>{e.parent=void 0,t.append(e)}))}))}noopPlugin.postcss=!0;const creator$1=()=>({postcssPlugin:"postcss-bundler",async Once(e,{result:t,atRule:r,postcss:o}){const n=await parseStyles(t,e,null,[],[],o);applyConditions(n,r),applyStyles(n,e)}});creator$1.postcss=!0;const creator=()=>({postcssPlugin:"postcss-bundler",plugins:[creator$1(),s()]});creator.postcss=!0,module.exports=creator;
