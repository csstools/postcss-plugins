import{parseListOfComponentValues as e,isWhitespaceNode as t,isCommentNode as r,isTokenNode as o,isFunctionNode as s,stringify as n}from"@csstools/css-parser-algorithms";import{tokenize as i,TokenType as a}from"@csstools/css-tokenizer";import u from"path";import l from"module";import p from"fs/promises";import c from"@csstools/postcss-rebase-url";function isWarning(e){return"warning"===e.type}function isCharsetStatement(e){return"charset"===e.type}function isImportStatement(e){return"import"===e.type}const d=/^data:text\/css(?:;(base64|plain))?,/i,m=/^data:text\/css;base64,/i,f=/^data:text\/css;plain,/i;function isValidDataURL(e){return!!e&&d.test(e)}const h=/^charset$/i,v=/^import$/i,y=/^url$/i,g=/^layer$/i,S=/^supports$/i;function parseAtImport(u){const l=i({css:u});if(2===l.length&&(l[0][0]===a.String||l[0][0]===a.URL)){let e=l[0][4].value;return e=stripHash(e),!!e&&{uri:e,fullUri:l[0][1]}}const p=e(l);let c,d,m,f="",h="";for(let e=0;e<p.length;e++){const i=p[e];if(!t(i)&&!r(i))if(!o(i)||i.value[0]!==a.String&&i.value[0]!==a.URL)if(s(i)&&y.test(i.getName())){if(f)return!1;for(let e=0;e<i.value.length;e++){const s=i.value[e];if(!t(s)&&!r(s)){if(!o(s)||s.value[0]!==a.String)return!1;f=s.value[4].value,h=n([[i]])}}}else{if(!f)return!1;if(o(i)&&i.value[0]===a.Ident&&g.test(i.value[4].value)){if(void 0!==c||void 0!==m)return!1;c=""}else if(s(i)&&g.test(i.getName())){if(void 0!==c||void 0!==m)return!1;c=n([i.value])}else{if(!s(i)||!S.test(i.getName())){d=n([p.slice(e)]);break}if(void 0!==m)return!1;m=n([i.value])}}else{if(f)return!1;f=i.value[4].value,h=i.value[1]}}return f=stripHash(f),!!f&&{uri:f,fullUri:h,layer:c,media:d,supports:m}}function stripHash(e){if(e.startsWith("#"))return"";if(!e.includes("#"))return e;try{const t=new URL(e,"http://example.com");return t.hash?e.slice(0,e.length-t.hash.length):e}catch{return e}}function parseStatements(e,t,r,o,s){const n=[];if("document"===t.type)return t.each((t=>{n.push(...parseStatements(e,t,r,o,s))})),n;let i=[];return t.each((t=>{let a;"atrule"===t.type&&(v.test(t.name)?a=parseImport(e,t,r,o,s):h.test(t.name)&&(a=parseCharset(e,t,r,o,s))),a?(i.length&&(n.push({type:"nodes",nodes:i,conditions:[...o],from:s,importingNode:r}),i=[]),n.push(a)):i.push(t)})),i.length&&n.push({type:"nodes",nodes:i,conditions:[...o],from:s,importingNode:r}),n}function parseCharset(e,t,r,o,s){return t.prev()?e.warn("@charset must precede all other statements",{node:t}):{type:"charset",node:t,conditions:[...o],from:s,importingNode:r}}function parseImport(e,t,r,o,s){let n=t.prev(),i=!1;for(;n;){if("comment"!==n.type){if("atrule"===n.type&&v.test(n.name)){i=!0;break}break}n=n.prev()}if(!i)for(;n;){if(!("comment"===n.type||"atrule"===n.type&&h.test(n.name)||"atrule"===n.type&&g.test(n.name)&&!n.nodes))return e.warn("@import must precede all other statements (besides @charset or empty @layer)",{node:t});n=n.prev()}if(t.nodes)return e.warn("It looks like you didn't end your @import statement correctly. Child nodes are attached to it.",{node:t});const a={type:"import",uri:"",fullUri:"",node:t,conditions:[...o],from:s,importingNode:r},u=parseAtImport(t.params);if(!u)return e.warn(`Invalid @import statement in '${t.toString()}'`,{node:t});const{layer:l,media:p,supports:c,uri:d,fullUri:m}=u;return a.uri=d,a.fullUri=m,void 0===l&&void 0===p&&void 0===c||a.conditions.push({layer:l,media:p,supports:c}),a}function resolveId(e,t,r,o){let s="";if(r.startsWith("node_modules:"))try{s=t.resolve(r.slice(13))}catch(t){throw e.error(`Failed to find '${r}'`)}else s=u.resolve(o,r);return s}function createRequire(e,t){var r;let o;if(null==(r=e.source)||null==(r=r.input)||!r.file)return t.warn("The current PostCSS AST Node is lacking a source file reference. This is most likely a bug in a PostCSS plugin.",{node:e}),[];o=e.source.input.file;const s=u.dirname(o);return[l.createRequire(s),o,s]}async function loadContent(e){return isValidDataURL(e)?(t=e,m.test(t)?Buffer.from(t.slice(21),"base64").toString():f.test(t)?decodeURIComponent(t.slice(20)):decodeURIComponent(t.slice(14))):p.readFile(e,"utf-8");var t}const noopPlugin=()=>({postcssPlugin:"noop-plugin",Once(){}});async function parseStyles(e,t,r,o,s,n){const i=parseStatements(e,t,r,o,s);{let t,r,o;const s=[];for(const a of i)isImportStatement(a)&&isProcessableURL(a.uri)&&(t&&r&&o||([t,r,o]=createRequire(a.node,e),t&&r&&o))&&s.push(resolveImportId(e,a,n,t,r,o));await Promise.all(s)}let a=null;const u=[],l=[];return i.forEach((e=>{isCharsetStatement(e)?a=handleCharset(e,a):isImportStatement(e)?e.children?e.children.forEach((e=>{isImportStatement(e)?u.push(e):isCharsetStatement(e)?a=handleCharset(e,a):l.push(e)})):u.push(e):"nodes"===e.type&&l.push(e)})),a?[a,...u.concat(l)]:u.concat(l)}async function resolveImportId(e,t,r,o,s,n){if(isValidDataURL(t.uri))return void(t.children=await loadImportContent(e,t,t.uri,r));if(isValidDataURL(t.from[t.from.length-1]))return t.children=[],void e.warn(`Unable to import '${t.uri}' from a stylesheet that is embedded in a data url`,{node:t.node});const i=resolveId(t.node,o,t.uri,n);e.messages.push({type:"dependency",plugin:"postcss-bundler",file:i,parent:s});const a=await loadImportContent(e,t,i,r);t.children=a??[]}async function loadImportContent(e,t,r,o){var s,n;const{conditions:i,from:a,node:u}=t;if(a.includes(r))return;let l;try{l=await loadContent(r)}catch{throw u.error(`Failed to find '${t.uri}'`)}const p=await o([noopPlugin()]).process(l,{from:r,parser:(null==(s=e.opts.syntax)?void 0:s.parse)??e.opts.parser??void 0}),c=p.root;return e.messages=e.messages.concat(p.messages),"atrule"===(null==(n=c.first)?void 0:n.type)&&h.test(c.first.name)?c.first.after(o.comment({text:`${t.uri}`,source:u.source})):c.prepend(o.comment({text:`${t.uri}`,source:u.source})),parseStyles(e,c,u,i,[...a,r],o)}function isProcessableURL(e){if(/^(?:[a-z]+:)?\/\//i.test(e))return!1;try{if(new URL(e,"https://example.com").search)return!1}catch{}return!0}function handleCharset(e,t=null){if(!t)return e;var r,o;if(e.node.params.toLowerCase()!==t.node.params.toLowerCase())throw e.node.error(`Incompatible @charset statements:\n  ${e.node.params} specified in ${null==(r=e.node.source)?void 0:r.input.file}\n  ${t.node.params} specified in ${null==(o=t.node.source)?void 0:o.input.file}`);return t}function formatImportPrelude(e,t,r){const o=[];if(void 0!==e){let t="layer";e&&(t="layer("+e+")"),o.push(t)}return void 0!==r&&o.push("supports("+r+")"),void 0!==t&&o.push(t),o.join(" ")}function applyConditions(e,t){e.forEach(((r,o)=>{var s;if(isWarning(r)||isCharsetStatement(r)||null==(s=r.conditions)||!s.length)return;if(isImportStatement(r)){r.conditions.reverse();const e=r.conditions.pop();let t=`${r.fullUri} ${formatImportPrelude(e.layer,e.media,e.supports)}`;for(const e of r.conditions)t=`'data:text/css;base64,${Buffer.from(`@import ${t}`).toString("base64")}' ${formatImportPrelude(e.layer,e.media,e.supports)}`;return void(r.node.params=t)}const n=r.nodes;if(!n.length)return;const i=n[0].parent;if(!i)return;const a=[];for(const e of r.conditions){if(void 0!==e.media){var u;const o=t({name:"media",params:e.media,source:(null==(u=r.importingNode)?void 0:u.source)??i.source});a.push(o)}if(void 0!==e.supports){var l;const o=t({name:"supports",params:"("+e.supports+")",source:(null==(l=r.importingNode)?void 0:l.source)??i.source});a.push(o)}if(void 0!==e.layer){var p;const o=t({name:"layer",params:e.layer,source:(null==(p=r.importingNode)?void 0:p.source)??i.source});a.push(o)}}const c=a[0];if(!c)return;for(let e=0;e<a.length-1;e++)a[e].append(a[e+1]);const d=a[a.length-1];i.insertBefore(n[0],c),n.forEach((e=>{e.parent=void 0})),d.append(n),e[o]={type:"nodes",nodes:[c],conditions:r.conditions,from:r.from,importingNode:r.importingNode}}))}function applyStyles(e,t){t.nodes=[],e.forEach((e=>{isCharsetStatement(e)||isImportStatement(e)?(e.node.parent=void 0,t.append(e.node)):"nodes"===e.type&&e.nodes.forEach((e=>{e.parent=void 0,t.append(e)}))}))}noopPlugin.postcss=!0;const creator$1=()=>({postcssPlugin:"postcss-bundler",async Once(e,{result:t,atRule:r,postcss:o}){const s=await parseStyles(t,e,null,[],[],o);applyConditions(s,r),applyStyles(s,e)}});creator$1.postcss=!0;const creator=()=>({postcssPlugin:"postcss-bundler",plugins:[creator$1(),c()]});creator.postcss=!0;export{creator as default};
