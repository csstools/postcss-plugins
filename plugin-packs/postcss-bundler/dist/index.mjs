import{parseListOfComponentValues as e,isWhitespaceNode as t,isCommentNode as r,isTokenNode as n,isFunctionNode as o,stringify as s,parseCommaSeparatedListOfComponentValues as i}from"@csstools/css-parser-algorithms";import{tokenize as a,TokenType as l}from"@csstools/css-tokenizer";import u from"path";import p from"module";import c from"fs/promises";import d from"@csstools/postcss-rebase-url";function isWarning(e){return"warning"===e.type}function isCharsetStatement(e){return"charset"===e.type}function isImportStatement(e){return"import"===e.type}const m=/^data:text\/css(?:;(base64|plain))?,/i,f=/^data:text\/css;base64,/i,h=/^data:text\/css;plain,/i;function isValidDataURL(e){return!!e&&m.test(e)}const g=/^charset$/i,y=/^import$/i,v=/^url$/i,I=/^layer$/i,S=/^supports$/i;function parseAtImport(u){const p=e(a({css:u}));let c="",d="";const m=[],f=[],h=[];e:for(let e=0;e<p.length;e++){const a=p[e];if(t(a)||r(a))continue;if(n(a)&&(a.value[0]===l.String||a.value[0]===l.URL)){if(c)return!1;c=a.value[4].value,d=a.value[1];continue}if(o(a)&&v.test(a.getName())){if(c)return!1;for(let e=0;e<a.value.length;e++){const o=a.value[e];if(!t(o)&&!r(o)){if(n(o)&&o.value[0]===l.String){c=o.value[4].value,d=s([[a]]);continue e}return!1}}}if(n(a)&&a.value[0]===l.Ident&&I.test(a.value[4].value)){if(m.length>0||h.length>0)return!1;m.push("");continue}if(o(a)&&I.test(a.getName())){if(m.length>0||h.length>0)return!1;m.push(s([trim(a.value)]));continue}if(o(a)&&S.test(a.getName())){if(h.length>0)return!1;h.push(s([trim(a.value)]));continue}const u=trim(p.slice(e)).flatMap((e=>e.tokens())),g=i(u).map((e=>s([trim(e)])));f.push(...g);break}return c=stripHash(c),!!c&&{uri:c,fullUri:d,layer:m,media:f,supports:h}}function trim(e){let n=0,o=e.length;for(let o=0;o<e.length;o++){const s=e[o];if(!t(s)&&!r(s)){n=o;break}}for(let n=e.length-1;n>=0;n--){const s=e[n];if(!t(s)&&!r(s)){o=n+1;break}}return e.slice(n,o)}function stripHash(e){if(e.startsWith("#"))return"";try{const t=new URL(e,"http://example.com");return t.hash?e.slice(0,e.length-t.hash.length):e}catch{return e}}function parseStatements(e,t,r,n,o){const s=[];if("document"===t.type)return t.each((t=>{s.push(...parseStatements(e,t,r,n,o))})),s;let i=[];return t.each((t=>{let a;"atrule"===t.type&&(y.test(t.name)?a=parseImport(e,t,r,n,o):g.test(t.name)&&(a=parseCharset(e,t,r,n,o))),a?(i.length&&(s.push({type:"nodes",nodes:i,conditions:[...n],from:o,importingNode:r}),i=[]),s.push(a)):i.push(t)})),i.length&&s.push({type:"nodes",nodes:i,conditions:[...n],from:o,importingNode:r}),s}function parseCharset(e,t,r,n,o){return t.prev()?e.warn("@charset must precede all other statements",{node:t}):{type:"charset",node:t,conditions:[...n],from:o,importingNode:r}}function parseImport(e,t,r,n,o){let s=t.prev(),i=!1;for(;s;){if("comment"!==s.type){if("atrule"===s.type&&y.test(s.name)){i=!0;break}break}s=s.prev()}if(!i)for(;s;){if(!("comment"===s.type||"atrule"===s.type&&g.test(s.name)||"atrule"===s.type&&I.test(s.name)&&!s.nodes))return e.warn("@import must precede all other statements (besides @charset or empty @layer)",{node:t});s=s.prev()}if(t.nodes)return e.warn("It looks like you didn't end your @import statement correctly. Child nodes are attached to it.",{node:t});const a={type:"import",uri:"",fullUri:"",node:t,conditions:[...n],from:o,importingNode:r},l=parseAtImport(t.params);if(!l)return e.warn(`Invalid @import statement in '${t.toString()}'`,{node:t});const{layer:u,media:p,supports:c,uri:d,fullUri:m}=l;return a.uri=d,a.fullUri=m,(p.length>0||u.length>0||c.length>0)&&a.conditions.push({layer:u,media:p,supports:c}),a}function resolveId(e,t,r,n){let o="";if(r.startsWith("node_modules:"))try{o=t.resolve(r.slice(13))}catch(t){throw e.error(`Failed to find '${r}'`)}else o=u.resolve(n,r);return o}function createRequire(e,t){var r;let n;if(null==(r=e.source)||null==(r=r.input)||!r.file)return t.warn("The current PostCSS AST Node is lacking a source file reference. This is most likely a bug in a PostCSS plugin.",{node:e}),[];n=e.source.input.file;const o=u.dirname(n);return[p.createRequire(o),n,o]}async function loadContent(e){return isValidDataURL(e)?(t=e,f.test(t)?Buffer.from(t.slice(21),"base64").toString():h.test(t)?decodeURIComponent(t.slice(20)):decodeURIComponent(t.slice(14))):c.readFile(e,"utf-8");var t}const noopPlugin=()=>({postcssPlugin:"noop-plugin",Once(){}});async function parseStyles(e,t,r,n,o,s){const i=parseStatements(e,t,r,n,o);{let t,r,n;const o=[];for(const a of i)isImportStatement(a)&&isProcessableURL(a.uri)&&(t&&r&&n||([t,r,n]=createRequire(a.node,e),t&&r&&n))&&o.push(resolveImportId(e,a,s,t,r,n));await Promise.all(o)}let a=null;const l=[],u=[];return i.forEach((e=>{isCharsetStatement(e)?a=handleCharset(e,a):isImportStatement(e)?e.children?e.children.forEach((e=>{isImportStatement(e)?l.push(e):isCharsetStatement(e)?a=handleCharset(e,a):u.push(e)})):l.push(e):"nodes"===e.type&&u.push(e)})),a?[a,...l.concat(u)]:l.concat(u)}async function resolveImportId(e,t,r,n,o,s){if(isValidDataURL(t.uri))return void(t.children=await loadImportContent(e,t,t.uri,r));if(isValidDataURL(t.from[t.from.length-1]))return t.children=[],void e.warn(`Unable to import '${t.uri}' from a stylesheet that is embedded in a data url`,{node:t.node});const i=resolveId(t.node,n,t.uri,s);e.messages.push({type:"dependency",plugin:"postcss-bundler",file:i,parent:o});const a=await loadImportContent(e,t,i,r);t.children=a??[]}async function loadImportContent(e,t,r,n){var o,s;const{conditions:i,from:a,node:l}=t;if(a.includes(r))return;let u;try{u=await loadContent(r)}catch{throw l.error(`Failed to find '${t.uri}'`)}const p=await n([noopPlugin()]).process(u,{from:r,parser:(null==(o=e.opts.syntax)?void 0:o.parse)??e.opts.parser??void 0}),c=p.root;return e.messages=e.messages.concat(p.messages),"atrule"===(null==(s=c.first)?void 0:s.type)&&g.test(c.first.name)?c.first.after(n.comment({text:`${t.uri}`,source:l.source})):c.prepend(n.comment({text:`${t.uri}`,source:l.source})),parseStyles(e,c,l,i,[...a,r],n)}function isProcessableURL(e){if(/^(?:[a-z]+:)?\/\//i.test(e))return!1;try{if(new URL(e,"https://example.com").search)return!1}catch{}return!0}function handleCharset(e,t=null){if(!t)return e;var r,n;if(e.node.params.toLowerCase()!==t.node.params.toLowerCase())throw e.node.error(`Incompatible @charset statements:\n  ${e.node.params} specified in ${null==(r=e.node.source)?void 0:r.input.file}\n  ${t.node.params} specified in ${null==(n=t.node.source)?void 0:n.input.file}`);return t}function formatImportPrelude(e,t,r){const n=[];if(e.length){const t=e.join(".");let r="layer";t&&(r=`layer(${t})`),n.push(r)}return 1===r.length?n.push(`supports(${r[0]})`):r.length>0&&n.push(`supports(${r.map((e=>`(${e})`)).join(" and ")})`),t.length&&n.push(t.join(", ")),n.join(" ")}function applyConditions(e,t){e.forEach(((r,n)=>{if(isWarning(r))return;if(!r.conditions.length||isCharsetStatement(r))return;if(isImportStatement(r)){if(1===r.conditions.length)r.node.params=`${r.fullUri} ${formatImportPrelude(r.conditions[0].layer,r.conditions[0].media,r.conditions[0].supports)}`;else if(r.conditions.length>1){const e=r.conditions.slice().reverse(),t=e.pop();let n=`${r.fullUri} ${formatImportPrelude(t.layer,t.media,t.supports)}`;for(const t of e)n=`'data:text/css;base64,${Buffer.from(`@import ${n}`).toString("base64")}' ${formatImportPrelude(t.layer,t.media,t.supports)}`;r.node.params=n}return}const{nodes:o}=r;if(!o.length)return;const{parent:s}=o[0];if(!s)return;const i=[];for(const e of r.conditions){if(e.media.length>0){var a;const n=t({name:"media",params:e.media.join(", "),source:(null==(a=r.importingNode)?void 0:a.source)??s.source});i.push(n)}if(e.supports.length>0){var l;const n=t({name:"supports",params:1===e.supports.length?`(${e.supports[0]})`:e.supports.map((e=>`(${e})`)).join(" and "),source:(null==(l=r.importingNode)?void 0:l.source)??s.source});i.push(n)}if(e.layer.length>0){var u;const n=t({name:"layer",params:e.layer.join("."),source:(null==(u=r.importingNode)?void 0:u.source)??s.source});i.push(n)}}const p=i[0];if(!p)return;for(let e=0;e<i.length-1;e++)i[e].append(i[e+1]);const c=i[i.length-1];s.insertBefore(o[0],p),o.forEach((e=>{e.parent=void 0})),o[0].raws.before=o[0].raws.before||"\n",c.append(o),e[n]={type:"nodes",nodes:[p],conditions:r.conditions,from:r.from,importingNode:r.importingNode}}))}function applyStyles(e,t){t.nodes=[],e.forEach((e=>{isCharsetStatement(e)||isImportStatement(e)?(e.node.parent=void 0,t.append(e.node)):"nodes"===e.type&&e.nodes.forEach((e=>{e.parent=void 0,t.append(e)}))}))}noopPlugin.postcss=!0;const creator$1=()=>({postcssPlugin:"postcss-bundler",async Once(e,{result:t,atRule:r,postcss:n}){const o=await parseStyles(t,e,null,[],[],n);applyConditions(o,r),applyStyles(o,e)}});creator$1.postcss=!0;const creator=()=>({postcssPlugin:"postcss-bundler",plugins:[creator$1(),d()]});creator.postcss=!0;export{creator as default};
