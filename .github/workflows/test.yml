name: test
on:
  push:
    branches:
    - 'main'
  pull_request:

concurrency:
  group: branch-node-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # Test node 16/18 on ubuntu
      # Test node 16 on macos/windows
      # Enable annotations only for node 16 + ubuntu
      matrix:
        os: [ubuntu-latest]
        node: [16, 18]
        include:
        - os: macos-latest
          node: 16
        - os: windows-latest
          node: 16
        - node: 16
          is_base_node_version: true
        - os: ubuntu-latest
          is_base_os_version: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: env
        run: |
          echo 'dist-restore-keys<<EOF' >> $GITHUB_ENV
          echo "$(git --no-pager log -9 --skip 1 --pretty=format:'test-dist-${{ matrix.node }}-${{ matrix.os }}--%H')" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo "commit-sha=$(echo ${GITHUB_SHA})" >> $GITHUB_ENV

      - name: fetch previous build artifacts
        uses: actions/cache@v3.0.3
        with:
          path: |
            .cached-commit
            cli/*/dist/**
            experimental/*/dist/**
            packages/*/dist/**
            plugin-packs/*/dist/**
            plugins/*/dist/**
          key: test-dist-${{ matrix.node }}-${{ matrix.os }}--${{ env.commit-sha }}
          restore-keys: ${{ env.dist-restore-keys }}

        # Build, lint and PostCSS Tape tests must all work and pass :
        # - with exact dependencies from package-lock.json
        # - without requiring postinstall scripts from dependencies to run
      - name: build
        run: |
          npm ci --ignore-scripts
          npm run build --if-present $(node './.github/bin/modified-workspaces/log-modified-workspaces.mjs')

      - name: lint
        run: npm run lint --if-present $(node './.github/bin/modified-workspaces/log-modified-workspaces.mjs')
        if: matrix.is_base_node_version && matrix.is_base_os_version

        # Basic tests
      - name: test
        run: npm run test --if-present $(node './.github/bin/modified-workspaces/log-modified-workspaces.mjs')
        env:
          ENABLE_ANNOTATIONS_FOR_NODE: ${{ matrix.is_base_node_version }}
          ENABLE_ANNOTATIONS_FOR_OS: ${{ matrix.is_base_os_version }}

        # CLI Tests
        # running "npm install" places the cli in node_modules/bin
      - name: test:cli
        run: |
          npm install --ignore-scripts
          npm run test:cli --workspace="@csstools/postcss-base-plugin"

        # Browser Tests
        # running "npm ci" again, but allowing scripts so that Chrome is installed
      - name: test:browser
        run: |
          npm ci
          npm run test:browser --if-present $(node './.github/bin/modified-workspaces/log-modified-workspaces.mjs')
        if: matrix.is_base_node_version && matrix.is_base_os_version

        # record the current commit for the cache at the end of the job
        # must be the last step
      - name: record current commit
        run: |
          echo "${GITHUB_SHA}" > .cached-commit

  # Run e2e tests
  test_e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm ci --ignore-scripts
      - run: npm run build

      # Webpack compatibility
      - run: |
            cd e2e/webpack/bundle-through
            npm install
            npm run build
            npm run test
      - run: |
            cd e2e/webpack/postcss-loader
            npm install
            npm run build

      # Deno compatibility
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x.x
      - run: npm run test:deno --workspaces --if-present
