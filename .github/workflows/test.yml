name: test
on:
  push:
    branches:
    - 'main'
  pull_request:
  workflow_dispatch:
    inputs:
      build_and_test_all_packages:
        type: boolean
        description: Build and test all packages
        required: true

concurrency:
  group: branch-node-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # Test node 16/18 on ubuntu
      # Test node 16 on macos/windows
      # Enable annotations only for node 16 + ubuntu
      matrix:
        os: [ubuntu-latest]
        node: [16, 18]
        include:
        - os: macos-latest
          node: 16
        - os: windows-latest
          node: 16
        - node: 16
          is_base_node_version: true
        - os: ubuntu-latest
          is_base_os_version: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 30
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: env
        run: |
          echo 'DIST_RESTORE_KEYS<<EOF' >> $GITHUB_ENV
          echo "$(git --no-pager log -9 --skip 1 --no-merges --pretty=format:'%H--test-dist-${{ matrix.node }}-${{ matrix.os }}')" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo "COMMIT_SHA=$(git --no-pager log -1 --no-merges --pretty=format:'%H')" >> $GITHUB_ENV
          echo "BUILD_AND_TEST_ALL_PACKAGES=$(echo ${{ github.event.inputs.run_index }})" >> $GITHUB_ENV

      - name: previous build artifacts cache
        uses: actions/cache@v3.0.10
        with:
          path: |
            .cached-commit
            cli/*/dist/**
            experimental/*/dist/**
            packages/*/dist/**
            plugin-packs/*/dist/**
            plugins/*/dist/**
          key: ${{ env.COMMIT_SHA }}--test-dist-${{ matrix.node }}-${{ matrix.os }}
          restore-keys: ${{ env.DIST_RESTORE_KEYS }}

      - name: npm ci
        run: |
          npm ci --ignore-scripts

      - name: determine modified workspaces
        run: |
          echo "MODIFIED_WORKSPACES=$(node './.github/bin/modified-workspaces/log-modified-workspaces.mjs')" >> $GITHUB_ENV

        # Build, lint and PostCSS Tape tests must all work and pass :
        # - with exact dependencies from package-lock.json
        # - without requiring postinstall scripts from dependencies to run
      - name: build
        run: |
          npm run build --if-present $MODIFIED_WORKSPACES

      - name: lint
        run: npm run lint --if-present $MODIFIED_WORKSPACES
        if: matrix.is_base_node_version && matrix.is_base_os_version

        # Basic tests
      - name: test
        run: npm run test --if-present $MODIFIED_WORKSPACES
        env:
          ENABLE_ANNOTATIONS_FOR_NODE: ${{ matrix.is_base_node_version }}
          ENABLE_ANNOTATIONS_FOR_OS: ${{ matrix.is_base_os_version }}

        # CLI Tests
        # running "npm install" places the cli in node_modules/bin
      - name: test:cli
        run: |
          npm install --ignore-scripts
          npm run test:cli --if-present $MODIFIED_WORKSPACES

        # Browser Tests
        # running "npm ci" again, but allowing scripts so that Chrome is installed
      - name: test:browser
        run: |
          npm ci
          npm run test:browser --if-present $MODIFIED_WORKSPACES
        if: matrix.is_base_node_version && matrix.is_base_os_version

        # E2E Tests
      - name: test:e2e
        run: |
          cd e2e
          npm install
          npm run build
          npm run test
        if: matrix.is_base_node_version && matrix.is_base_os_version

      # Deno compatibility
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x.x
        if: matrix.is_base_node_version && matrix.is_base_os_version

      - name: test:deno
        run: npm run test:deno --if-present $MODIFIED_WORKSPACES
        if: matrix.is_base_node_version && matrix.is_base_os_version

        # record the current commit for the cache at the end of the job
        # must be the last step
      - name: record current commit
        run: |
          echo "$(git --no-pager log -1 --no-merges --pretty=format:'%H')" > .cached-commit
