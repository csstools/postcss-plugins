name: test
on:
  push:

concurrency:
  group: branch-node-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # Test node 16/17 on ubuntu
      # Test node 16 on macos/windows
      # Enable annotations only for node 16 + ubuntu
      matrix:
        os: [ubuntu-latest]
        node: [16, 17]
        include:
        - os: macos-latest
          node: 16
        - os: windows-latest
          node: 16
        - node: 16
          enable_annotations_for_node: true
        - os: ubuntu-latest
          enable_annotations_for_os: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

        # Build, lint and PostCSS Tape tests must all work and pass :
        # - with exact dependencies from package-lock.json
        # - without requiring postinstall scripts from dependencies to run
      - run: npm ci --ignore-scripts
      - run: npm run build --workspaces --if-present
      - run: npm run lint --workspaces --if-present

        # PostCSS Tape tests
      - run: npm run test --workspaces --if-present
        env:
          ENABLE_ANNOTATIONS_FOR_NODE: ${{ matrix.enable_annotations_for_node }}
          ENABLE_ANNOTATIONS_FOR_OS: ${{ matrix.enable_annotations_for_os }}

        # CLI Tests
        # running "npm install" places the cli in node_modules/bin
      - run: npm install --ignore-scripts
      - run: npm run --silent test:cli --workspace="@csstools/postcss-base-plugin"

  # Run e2e tests
  test_e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm ci --ignore-scripts
      - run: npm run build --workspaces --if-present

      # Webpack compatibility
      - run: |
            cd e2e/webpack/bundle-through
            npm install
            npm run build
            npm run --silent test

      # Deno compatibility
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x.x
      - run: npm run --silent test:deno --workspaces --if-present
