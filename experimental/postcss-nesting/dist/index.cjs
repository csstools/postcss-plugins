"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=e(require("postcss-selector-parser"));function n(e){if(!e.nodes.length)return void e.remove();const t=e.nodes.filter((e=>"comment"===e.type));t.length===e.nodes.length&&e.replaceWith(...t)}function r(e,t){const r=t.index(e);if(r){const e=t.cloneBefore().removeAll().append(t.nodes.slice(0,r));e.raws.semicolon=!0,n(e)}t.before(e),t.raws.semicolon=!0}function o(e){let t=-1;e.each(((n,r)=>{if("decl"===n.type){if(-1===t)return void(t=r);if(t===r-1)return void(t=r);n.remove(),e.insertAfter(t,n),t=e.index(n)}}))}function s(e,s,c){let i=[];try{i=function(e,n,r,o){const s=[];if(0===o.length)return;const c=t.default().astSync(`:is(${r.join(",")})`);for(let r=0;r<o.length;r++){const i=t.default().astSync(o[r]);if(!i)continue;let l=!1;if(i.walk((e=>{"nesting"===e.type&&(l=!0)})),!l){const s=i.nodes[0];let c=!1;if(s.each((e=>"combinator"===e.type&&(c=!0,!1))),0===r){let t=!1;s.each((e=>"tag"===e.type&&(t=!0,!1))),t&&e.warn(n,`Invalid nested rule : "${o[r]}"`)}c||s.insertBefore(s.at(0),t.default.combinator({value:" "})),s.insertBefore(s.at(0),t.default.nesting({}))}i.walk((e=>{"nesting"===e.type&&e.replaceWith(c.clone({}))})),s.push(i.toString())}return s}(e,c,s.selectors,e.selectors)}catch(t){return void e.warn(c,`Failed to transform selectors : "${s.selector}" / "${e.selector}" with message: "${t.message}"`)}o(s),r(e,s),e.selectors=i;"rule"===e.type&&"rule"===s.type&&e.selector===s.selector&&e.append(...s.nodes),n(s)}var c=["container","document","media","supports","layer"];function i(e){const t=[];let n="",r=!1,o=0,s=!1,c=!1;for(const i of e)c?c=!1:"\\"===i?c=!0:s?i===s&&(s=!1):'"'===i||"'"===i?s=i:"("===i?o+=1:")"===i?o>0&&(o-=1):0===o&&","===i&&(r=!0),r?(""!==n&&t.push(n.trim()),n="",r=!1):n+=i;return t.push(n.trim()),t}function l(e,t){var s,c;o(t),r(e,t),e.params=(s=t.params,c=e.params,i(s).map((e=>i(c).map((t=>`${e} and ${t}`)).join(", "))).join(", ")),n(t)}function a(e){return e&&"atrule"===e.type}function u(e){return e&&"rule"===e.type}function f(e,t){e.each((e=>{const i=e.parent;u(e)&&e.selector.trim()&&u(i)&&i.selector.trim()?s(e,i,t):a(e)&&u(i)&&i.selector.trim()&&function(e){return c.includes(e.name)}(e)?function(e,t,s,c){if(o(t),r(e,t),e.nodes){const r=t.clone().removeAll().append(e.nodes);e.append(r),n(t),c(r,s)}}(e,i,t,f):a(e)&&a(i)&&function(e,t){return c.includes(e.name)&&e.name===t.name}(e,i)&&l(e,i),"nodes"in e&&e.nodes.length&&f(e,t)}))}const p=()=>({postcssPlugin:"postcss-nesting",Rule(e,{result:n}){f(e,n),e.selector.trim().includes("&")&&function(e,n){let r,o=e.parent;for(;o;){if("rule"===o.type)return;o=o.parent}try{r=t.default().astSync(e.selector)}catch(t){return void e.warn(n,`Failed to parse selector : "${e.selector}" with message: "${t.message}"`)}r&&(r.walkNesting((e=>{e.replaceWith(t.default.pseudo({value:":scope"}))})),e.selector=r.toString())}(e,n)}});p.postcss=!0,module.exports=p;
