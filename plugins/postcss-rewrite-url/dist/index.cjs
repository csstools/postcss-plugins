"use strict";var e=require("@csstools/css-tokenizer"),r=require("@csstools/css-parser-algorithms");function serializeString(e){let r="";for(const t of e){const e=t.codePointAt(0);if(void 0!==e)switch(e){case 0:r+=String.fromCodePoint(65533);break;case 127:r+=`\\${e.toString(16)}`;break;case 34:case 39:case 92:r+=`\\${t}`;break;default:if(1<=e&&e<=31){r+=`\\${e.toString(16)} `;break}r+=t}else r+=String.fromCodePoint(65533)}return r}const t=/url\(/i,o=/^url$/i,creator=s=>{const i=s?.rewriter??(e=>e);return{postcssPlugin:"postcss-rewrite-url",prepare(){const s=new WeakSet;return{Declaration(u,{result:a}){if(s.has(u))return;if(!t.test(u.value))return;const n={rootFrom:a.opts.from,from:u.source?.input.from},l=r.parseCommaSeparatedListOfComponentValues(e.tokenize({css:u.value})),c=r.replaceComponentValues(l,(t=>{if(r.isTokenNode(t)&&t.value[0]===e.TokenType.URL){const e=t.value[4].value.trim(),r=i({url:e},n);if(r.url===e)return;return t.value[4].value=r.url,t.value[1]=`url(${serializeString(r.url)})`,t}if(r.isFunctionNode(t)&&o.test(t.getName()))for(const o of t.value)if(!r.isWhitespaceNode(o)&&!r.isCommentNode(o)&&r.isTokenNode(o)&&o.value[0]===e.TokenType.String){const e=o.value[4].value.trim(),r=i({url:e},n);if(r.url===e)break;return o.value[4].value=r.url,o.value[1]=`"${serializeString(r.url)}"`,t}})),f=r.stringify(c);f!==u.value&&(u.value=f,s.add(u))}}}}};creator.postcss=!0,module.exports=creator;
