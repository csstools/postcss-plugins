import{tokenize as e,TokenType as t,stringify as r}from"@csstools/css-tokenizer";const s=/(?:license|copyright)/i,o=/sourceMappingURL/i,n=/(?:[\s]|\/\*)/,i=/^layer$/i;function minify(s,o){if(!o)return o;if(s.has(o))return s.get(o);const i=o.trim();if(""===i)return s.set(o,""),"";if(!n.test(i))return s.set(o,i),i;const a=e({css:i});for(let e=0;e<a.length;e++){const r=a[e];if(r[0]===t.Comment||r[0]===t.Whitespace){r[1]=" ";let s=a[e+1];for(;s&&(s[0]===t.Comment||s[0]===t.Whitespace);)s[1]="",e++,s=a[e+1]}}const m=r(...a);return s.set(o,m),m}function removeEmptyNodes(e){var t;if("rule"===e.type){if(0===(null==(t=e.nodes)?void 0:t.length)){const t=e.parent;return!!t&&(e.remove(),removeEmptyNodes(t),!0)}}else if("atrule"===e.type){var r;if(0===(null==(r=e.nodes)?void 0:r.length)&&!i.test(e.name)){const t=e.parent;return!!t&&(e.remove(),removeEmptyNodes(t),!0)}}return!1}function setSemicolon(e){if(e.raws.semicolon){const t=e.last;"decl"===(null==t?void 0:t.type)&&t.variable||(e.raws.semicolon=!1)}}const creator=()=>{const e=new Map;return{postcssPlugin:"postcss-minify",OnceExit(t){t.raws.before="",t.raws.after="\n",t.walk((t=>{if("comment"!==t.type){if("atrule"===t.type){if(removeEmptyNodes(t))return;return t.raws.after="",t.raws.afterName=" ",t.raws.before="",t.raws.between="",t.raws.params=void 0,setSemicolon(t),void(t.params=minify(e,t.params))}if("rule"===t.type){if(removeEmptyNodes(t))return;return t.raws.after="",t.raws.before="",t.raws.between="",t.raws.selector=void 0,setSemicolon(t),void(t.selector=minify(e,t.selector))}if("decl"===t.type){if(t.variable)return void(t.raws.before="");t.raws.before="",t.raws.between=":",t.raws.important=t.important?"!important":"",t.raws.value=void 0,t.value=minify(e,t.value)}}else{if(s.test(t.text)||o.test(t.text))return;t.remove()}}))}}};creator.postcss=!0;export{creator as default};
