"use strict";var e=require("browserslist"),o=require("@csstools/css-tokenizer"),n=require("@csstools/css-parser-algorithms");function died(e){return"string"==typeof e}function matchBeforeDateCondition(e,o,n){const t=new Date;t.setUTCFullYear(e),t.setUTCMonth(o),t.setUTCDate(n);return(new Date).getTime()<t.getTime()||`Died because ${e}-${o}-${n} is in the past`}function matchBrowserslistCondition(o,n){const t=e(o);for(let e=0;e<t.length;e++){const o=t[e];if(n.has(o))return!0}return`Died because the browsers matching "${o}" do not have any overlap with your project browserslist`}function matchIfCondition(e){const n=e.a,t=e.b;if(n[0]===t[0]&&(n[0]!==o.TokenType.Dimension||t[0]!==o.TokenType.Dimension||n[4].unit.toLowerCase()===t[4].unit.toLowerCase())){switch(e.operator){case"<":if(n[4].value>=t[4].value)return`Died because A (${n[1]}) is no longer less than B (${t[1]})`;break;case">":if(n[4].value<=t[4].value)return`Died because A (${n[1]}) is no longer greater than B (${t[1]})`;break;case"=":if(n[4].value!==t[4].value)return`Died because A (${n[1]}) is no longer equal to B (${t[1]})`}return!0}}function matchNotCondition(e){const n=e.a,t=e.b;if(n[0]===t[0]&&(n[0]!==o.TokenType.Dimension||t[0]!==o.TokenType.Dimension||n[4].unit.toLowerCase()===t[4].unit.toLowerCase())){switch(e.operator){case"<":if(n[4].value<t[4].value)return`Died because A (${n[1]}) is less than B (${t[1]})`;break;case">":if(n[4].value>t[4].value)return`Died because A (${n[1]}) is greater than B (${t[1]})`;break;case"=":if(n[4].value===t[4].value)return`Died because A (${n[1]}) equals B (${t[1]})`}return!0}}function parseBeforeDateCondition(e){const t=e.value.filter((e=>!n.isWhitespaceNode(e)&&!n.isCommentNode(e)));if(t.length>3)return!1;const r=t[0],s=t[1],i=t[2];if(!r||!s||!i)return!1;if(!n.isTokenNode(r)||!n.isTokenNode(s)||!n.isTokenNode(i))return!1;const a=r.value,u=s.value,c=i.value;return a[0]===o.TokenType.Number&&a[4].type===o.NumberType.Integer&&(u[0]===o.TokenType.Number&&u[4].type===o.NumberType.Integer&&(c[0]===o.TokenType.Number&&c[4].type===o.NumberType.Integer&&{year:a[4].value,month:u[4].value,day:c[4].value}))}function parseBrowserslistCondition(e){const t=e.value.filter((e=>!n.isWhitespaceNode(e)&&!n.isCommentNode(e)));if(t.length>1)return!1;const r=t[0];if(!r)return!1;if(!n.isTokenNode(r))return!1;const s=r.value;return s[0]===o.TokenType.String&&s[4].value}const t=[o.TokenType.Ident,o.TokenType.Number,o.TokenType.Percentage,o.TokenType.Dimension],r=["<",">","="];function parseIfCondition(e){const s=e.value.filter((e=>!n.isWhitespaceNode(e)&&!n.isCommentNode(e)));if(s.length>3)return!1;const i=s[0],a=s[1],u=s[2];if(!i||!a||!u)return!1;if(!n.isTokenNode(i)||!n.isTokenNode(a)||!n.isTokenNode(u))return!1;const c=i.value,d=a.value,l=u.value;return d[0]===o.TokenType.Delim&&(!!r.includes(d[4].value)&&(!!t.includes(c[0])&&(!!t.includes(l[0])&&{a:c,b:l,operator:d[4].value})))}function parseNotCondition(e){const o=parseIfCondition(e);return!!o&&{a:o.a,b:o.b,operator:o.operator}}const creator=()=>{const t=new Set(e());return{postcssPlugin:"postcss-todo-or-die",async Once(e,{result:r}){const s=[];e.walkAtRules((e=>{if("todo-or-die"===e.name.toLowerCase()){if(!e.params.trim())throw e.error("Rule must have valid params");s.push(e)}}));for(const e of s){const errorHandler=o=>{throw e.error(o.message)},s=o.tokenizer({css:e.params},{onParseError:errorHandler}),i=[];for(;!s.endOfFile();)i.push(s.nextToken());i.push(s.nextToken());const a=n.parseCommaSeparatedListOfComponentValues(i,{onParseError:errorHandler});if(!a.length)return void e.warn(r,"Rule must have some valid params.");for(let o=0;o<a.length;o++){const s=a[o].filter((e=>!n.isWhitespaceNode(e)&&!n.isCommentNode(e)));if(1!==s.length)return void e.warn(r,"Conditions must be split by commas when adding multiple in a list.");if(!n.isFunctionNode(s[0]))return void e.warn(r,"Conditions must be one of the supported functions.");switch(s[0].name[4].value.toLowerCase()){case"if":{const o=parseIfCondition(s[0]);if(!o)return void e.warn(r,"Incorrect arguments in `if()` function.");const n=matchIfCondition(o);if(died(n))throw e.error(n);break}case"not":{const o=parseNotCondition(s[0]);if(!o)return void e.warn(r,"Incorrect arguments in `not()` function.");const n=matchNotCondition(o);if(died(n))throw e.error(n);break}case"browserslist":{const o=parseBrowserslistCondition(s[0]);if(!o)return void e.warn(r,"Incorrect arguments in `browserslist()` function.");const n=matchBrowserslistCondition(o,t);if(died(n))throw e.error(n);break}case"before-date":{const o=parseBeforeDateCondition(s[0]);if(!o)return void e.warn(r,"Incorrect arguments in `before-date()` function.");const n=matchBeforeDateCondition(o.year,o.month,o.day);if(died(n))throw e.error(n);break}}}e.nodes?e.replaceWith(e.nodes):e.remove()}}}};creator.postcss=!0,module.exports=creator;
