import e from"postcss-value-parser";import t from"path";import{promises as n}from"fs";import r from"module";function o(e,t){let n=e.length;const r=new Array(n),o={};let i=n;const s=function(e){const t=new Map;for(let n=0,r=e.length;n<r;n++){const r=e[n];t.has(r[0])||t.set(r[0],new Set),t.has(r[1])||t.set(r[1],new Set),t.get(r[0]).add(r[1])}return t}(t),a=function(e){const t=new Map;for(let n=0,r=e.length;n<r;n++)t.set(e[n],n);return t}(e);for(t.forEach((function(e){if(!a.has(e[0])||!a.has(e[1]))throw new Error("Unknown token. Make sure to provide all tokens used in aliases.")}));i--;)o[i]||u(e[i],i,new Set);return r;function u(e,t,i){if(i.has(e)){let t;try{t=", token was: "+JSON.stringify(e)}catch(e){t=""}throw new Error("Cyclic dependency"+t)}if(!a.has(e))throw new Error("Found unknown token. Make sure to provided all involved tokens. Unknown token: "+JSON.stringify(e));if(o[t])return;o[t]=!0;let l=s.get(e)||new Set;if(l=Array.from(l),t=l.length){i.add(e);do{const e=l[--t];u(e,a.get(e),i)}while(t);i.delete(e)}r[--n]=e}}function i(e,t,n,r){var o,i,s;if(void 0===e.value)throw new Error('Token value is undefined for "'+[...n,t].join(".")+'"');switch(typeof e.value){case"string":case"number":break;default:throw new Error('Token value is not a string or a number for "'+[...n,t].join(".")+'"')}const u=String(e.value);return{value:u,cssValue:e=>a(u,e),name:String(null!=(o=e.name)?o:"")||t,comment:String(null!=(i=e.comment)?i:"")||void 0,metadata:{name:String(null!=(s=e.name)?s:"")?t:void 0,path:[...n,t],filePath:r,isSource:!0}}}const s=new Map;function a(t,n){if(!t)return"";if(!n)return t;if(!n.toUnit)return t;const r=e.unit(null!=t?t:"");if(!r||r.unit===n.toUnit)return t;if(!r.unit){if(s.has(n.toUnit)){if(s.get(n.toUnit))return`${t}${n.toUnit}`;throw new Error(`Invalid unit "${n.toUnit}" for "${t}"`)}try{const r=e.unit(`${t}${n.toUnit}`);if(r&&r.unit===n.toUnit)return s.set(n.toUnit,!0),`${t}${n.toUnit}`;s.set(n.toUnit,!1)}catch(e){s.set(n.toUnit,!1)}throw new Error(`Invalid unit "${n.toUnit}" for "${t}"`)}var o,i,a,l;return"rem"===r.unit&&"px"===n.toUnit?function(e,t){return`${u(e*t)}px`}(parseFloat(r.number),null!=(o=null==(i=n.pluginOptions)?void 0:i.rootFontSize)?o:16):"px"===r.unit&&"rem"===n.toUnit?function(e,t){return`${u(e/t)}rem`}(parseFloat(r.number),null!=(a=null==(l=n.pluginOptions)?void 0:l.rootFontSize)?a:16):t}function u(e){if(Number.isInteger(e))return e.toString();let t=e.toFixed(5);for(let e=t.length;e>0&&"."!==t[e];e--)"0"===t[e]||(t=t.slice(0,e+1));return t}function l(e){if("string"!=typeof e)return[];if(-1===e.indexOf("{"))return[];const t=[];let n=!1,r=!1,o="";for(let i=0;i<e.length;i++){const s=e[i];switch(s){case"{":if(r)throw new Error('Unexpected "{" in "'+e+'" at '+i);o.length>0&&(t.push({type:"value-non-reference",value:o}),o=""),r=!0;break;case"}":if(!r)throw new Error('Unexpected "}" in "'+e+'" at '+i);if(0===o.length)throw new Error('Empty alias "{}" in "'+e+'" at '+i);{let e=o.trim();".value"===e.slice(-6)&&(e=e.slice(0,-6)),t.push({type:"value-reference",raw:e}),o=""}n=!0,r=!1;break;default:o+=s}}if(r)throw new Error('Unexpected end of alias in "'+e+'"');return o.length>0&&t.push({type:"value-non-reference",value:o}),n?t:[]}function c(e,t,n){const r=new Map;for(const o in e)if(Object.hasOwnProperty.call(e,o)){if(null===e[o]||"object"!=typeof e[o]||Array.isArray(e[o]))throw new Error(`Parsing error at "${[...t,o].join(".")}"`);const s=Object(e[o]);if(!s)throw new Error(`Parsing error at "${[...t,o].join(".")}"`);if(void 0!==s.value){const e=i(s,o,t,n);r.set(e.metadata.path.join("."),e);continue}for(const[e,i]of c(s,[...t,o],n).entries())r.set(e,i)}return r}function f(e,t){return function(e){const t=new Set,n=new Map;for(const[r,o]of e.entries()){const e=l(o.value);e.length&&(t.add(r),n.set(r,e))}for(const[r,o]of n.entries()){for(let n=0;n<o.length;n++){const r=o[n];if("value-reference"!==r.type)continue;if(t.has(r.raw))continue;if(!e.has(r.raw))throw new Error('Alias "'+r.raw+'" not found');const i=e.get(r.raw);o[n]={type:"value-resolved",raw:r.raw,value:i.cssValue()}}if(o.some((e=>"value-reference"===e.type)))continue;const i=o.map((e=>e.value)).join(""),s=e.get(r);s.value=i,s.cssValue=e=>a(i,e),e.set(r,s),t.delete(r),n.delete(r)}if(0===t.size)return e;{const r=Array.from(e.keys()),i=[];for(const[e,t]of n.entries())for(let n=0;n<t.length;n++){const r=t[n];"value-reference"===r.type&&i.push([r.raw,e])}const s=o(r,i);if(!s)throw new Error("Circular reference detected");for(const r of s){if(!n.has(r))continue;const o=n.get(r);for(let n=0;n<o.length;n++){const r=o[n];if("value-reference"!==r.type)continue;if(t.has(r.raw))throw new Error('Alias "'+r.raw+'" can not be resolved');if(!e.has(r.raw))throw new Error('Alias "'+r.raw+'" not found');const i=e.get(r.raw);o[n]={type:"value-resolved",raw:r.raw,value:i.cssValue()}}if(o.some((e=>"value-reference"===e.type)))throw new Error('Token "'+r+'" can not be fully resolved');const i=o.map((e=>e.value)).join(""),s=e.get(r);s.value=i,s.cssValue=e=>a(i,e),e.set(r,s),t.delete(r),n.delete(r)}if(0===t.size)return e}return e}(c(e,[],t))}function d(e,t,n){if("3"===e)return f(t,n);throw new Error("Unsupported version: "+e)}const p="6b4e71e7-4787-42f7-a092-8684961895db",w=r.createRequire(import.meta.url);async function h(r,o,i,s){const{filePath:a,format:u,conditions:l}=function(t){const n=e(t),r={filePath:"",format:"standard",conditions:[p]};return n.walk((e=>{"function"===e.type&&"url"===e.value&&(r.filePath=e.nodes[0].value),"function"===e.type&&"format"===e.value&&(r.format=e.nodes[0].value),"function"===e.type&&"when"===e.value&&(r.conditions=e.nodes.filter((e=>"string"===e.type)).map((e=>e.value)))})),r.conditions.length||(r.conditions=[p]),r}(i);if(!l.every((e=>r.includes(e))))return!1;let c="";if(a.startsWith("node_modules://"))try{c=w.resolve(a.slice(15),{paths:[t.dirname(o)]})}catch(e){throw new Error(`Failed to read ${a} with error ${e.message}`)}else c=t.resolve(t.dirname(o),a);if(s.has(c))return!1;s.add(c);const f=await n.readFile(c,"utf8"),h=JSON.parse(f);if("style-dictionary3"===u)return{filePath:t.resolve(a),tokens:d("3",h,c)};throw new Error("Unsupported format: "+u)}function v(e,t){const n=new Map(e);for(const[e,r]of t)n.set(e,r);return n}function m(e){const t={importAtRuleName:"design-tokens",is:[p],unitsAndValues:{rootFontSize:16},valueFunctionName:"design-token"};return e?("object"!=typeof e||(Array.isArray(e.is)&&(t.is=e.is.filter((e=>"string"==typeof e))),0===t.is.length&&(t.is=[p]),"object"==typeof e.unitsAndValues&&"number"==typeof e.unitsAndValues.rootFontSize&&((n=e.unitsAndValues.rootFontSize)>0&&n!==1/0)&&(t.unitsAndValues.rootFontSize=e.unitsAndValues.rootFontSize),"string"==typeof e.valueFunctionName&&(t.valueFunctionName=e.valueFunctionName),"string"==typeof e.importAtRuleName&&(t.importAtRuleName=e.importAtRuleName)),t):t;var n}const g=t=>{const n=m(t);return{postcssPlugin:"postcss-design-tokens",prepare(){let t=new Map,r=new Set;return{OnceExit(){t=new Map,r=new Set},Once:async(e,{result:o})=>{const i=[];e.walkAtRules((e=>{var t,r;if(e.name.toLowerCase()!==n.importAtRuleName)return;if(null==e||null==(t=e.source)||null==(r=t.input)||!r.file)return;const o=e.source.input.file,s=e.params;e.remove(),i.push({filePath:o,params:s,node:e})}));for(const e of i.values()){let i;try{if(i=await h(n.is,e.filePath,e.params,r),!i)continue}catch(t){e.node.warn(o,`Failed to import design tokens from "${e.params}" with error:\n\t`+t.message);continue}o.messages.push({type:"dependency",plugin:"postcss-design-tokens",file:i.filePath,parent:e.filePath}),t=v(t,i.tokens)}},Declaration(r,{result:o}){if(!r.value.toLowerCase().includes(n.valueFunctionName))return;const i=function(t,n,r,o){const i=e(r.value);return i.walk((e=>{if("function"!==e.type||e.value.toLowerCase()!==o.valueFunctionName)return;if(!e.nodes||0===e.nodes.length)return void r.warn(n,"Expected at least a single string literal for the design-token function.");if("string"!==e.nodes[0].type)return void r.warn(n,"Expected at least a single string literal for the design-token function.");const i=e.nodes[0].value,s=t.get(i);if(!s)return void r.warn(n,`design-token: "${i}" is not configured.`);const a=e.nodes.slice(1).filter((e=>"word"===e.type));if(!a.length)return e.value=s.cssValue(),void(e.nodes=void 0);const u={pluginOptions:o.unitsAndValues};for(let e=0;e<a.length;e++)"word"===a[e].type&&"to"===a[e].value.toLowerCase()&&a[e+1]&&"word"===a[e+1].type&&(u.toUnit=a[e+1].value,e++);try{e.value=s.cssValue(u)}catch(e){return void r.warn(n,e.message)}e.nodes=void 0})),String(i)}(t,o,r,n);i!==r.value&&(r.value=i)}}}}};g.postcss=!0;export{g as default};
