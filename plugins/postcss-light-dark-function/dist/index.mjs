import e from"@csstools/postcss-progressive-custom-properties";import{tokenize as r,TokenType as o}from"@csstools/css-tokenizer";import{isFunctionNode as t,isWhitespaceNode as s,isCommentNode as n,isSimpleBlockNode as a,walk as c,isTokenNode as i,replaceComponentValues as p,parseCommaSeparatedListOfComponentValues as l,FunctionNode as u,TokenNode as f,WhitespaceNode as v,stringify as m}from"@csstools/css-parser-algorithms";const d="--csstools-color-scheme--light",h="--csstools-color-scheme--dark",g="initial",k=" ",C=/dark/i,w=/light/i;function colorSchemes(e){const t=r({css:e});let s=!1,n=!1;return t.forEach((e=>{e[0]===o.Ident&&(w.test(e[4].value)?s=!0:C.test(e[4].value)&&(n=!0))})),[s,n]}function hasFallback(e){const r=e.parent;if(!r)return!1;const o=e.prop.toLowerCase(),t=r.index(e);for(let e=0;e<t;e++){const t=r.nodes[e];if("decl"===t.type&&t.prop.toLowerCase()===o)return!0}return!1}function hasSupportsAtRuleAncestor(e){let r=e.parent;for(;r;)if("atrule"===r.type){if("supports"===r.name.toLowerCase()&&-1!==r.params.toLowerCase().indexOf("light-dark("))return!0;r=r.parent}else r=r.parent;return!1}const L=/^light-dark$/i;function isComma(e){return i(e)&&e.value[0]===o.Comma}function parseLightDark(e){if(!t(e)||!L.test(e.getName()))return!1;const r=e.value.filter((e=>!s(e)&&!n(e)&&!a(e)));if(3!==r.length)return!1;let o=r[0];const i=r[1];let p=r[2];if(!o||!i||!p)return!1;if(!isComma(i))return!1;if(isComma(o)||isComma(p))return!1;if(t(o)){const e=[o];c(e,(({node:e,parent:r},o)=>{recurseLightDark(e,r,o,!0)})),[o]=e}if(t(p)){const e=[p];c(e,(({node:e,parent:r},o)=>{recurseLightDark(e,r,o,!1)})),[p]=e}return[o,p]}function recurseLightDark(e,r,o,s){if("number"!=typeof o)return;const n=parseLightDark(e);if(!n)return;let a=n[s?0:1];if(t(a)){const e=[a];c(e,(({node:e,parent:r},o)=>{recurseLightDark(e,r,o,s)})),[a]=e}r.value[o]=a}function transformLightDark(e){const t=p(l(r({css:e})),(e=>{const r=parseLightDark(e);if(!r)return;const[t,s]=r;return[new u([o.Function,"var(",-1,-1,{value:"var"}],[o.CloseParen,")",-1,-1,void 0],[new f([o.Ident,d,-1,-1,{value:d}]),new f([o.Comma,",",-1,-1,void 0]),new v([[o.Whitespace," ",-1,-1,void 0]]),t]),new v([[o.Whitespace," ",-1,-1,void 0]]),new u([o.Function,"var(",-1,-1,{value:"var"}],[o.CloseParen,")",-1,-1,void 0],[new f([o.Ident,h,-1,-1,{value:h}]),new f([o.Comma,",",-1,-1,void 0]),new v([[o.Whitespace," ",-1,-1,void 0]]),s])]}));return m(t)}const D=/color-scheme/i,b=/light-dark\(/i,basePlugin=e=>{const r=Object.assign({preserve:!0},e);return{postcssPlugin:"postcss-light-dark-function",prepare(){let e,o=!1;return{Declaration(t,{atRule:s,rule:n}){const a=t.parent;if(a){if(D.test(t.prop)){const[e,r]=colorSchemes(t.value);if(e&&r){t.cloneBefore({prop:d,value:g}),t.cloneBefore({prop:h,value:k});const e=a.clone();e.removeAll(),e.append(t.clone({prop:d,value:k})),e.append(t.clone({prop:h,value:g}));const r=s({name:"media",params:"(prefers-color-scheme: dark)",source:a.source});return r.append(e),void a.after(r)}return r?(t.cloneBefore({prop:d,value:k}),void t.cloneBefore({prop:h,value:g})):e?(t.cloneBefore({prop:d,value:g}),void t.cloneBefore({prop:h,value:k})):void 0}if(b.test(t.value)){if(hasFallback(t))return;if(hasSupportsAtRuleAncestor(t))return;const s=transformLightDark(t.value);if(s===t.value)return;if(o=!0,e||(e=t.source),t.cloneBefore({value:s}),t.variable&&t.parent){const e=n({selector:"& *",source:t.source});e.append(t.clone({value:s})),t.parent.append(e)}r.preserve||t.remove()}}},OnceExit(r,{atRule:t,rule:s,decl:n}){if(!o||!e)return;const a=n({prop:d,value:g}),c=n({prop:h,value:k});a.source=e,c.source=e;{const o=s({selector:":root",source:e});o.append(a,c),r.append(o)}{const o=s({selector:":root",source:e});o.append(a.clone({value:k}),c.clone({value:g}));const n=t({name:"media",params:"(prefers-color-scheme: dark)",source:e});n.append(o),r.append(n)}}}}}};basePlugin.postcss=!0;const postcssPlugin=r=>{const o=Object.assign({enableProgressiveCustomProperties:!0,preserve:!0},r);return o.enableProgressiveCustomProperties&&o.preserve?{postcssPlugin:"postcss-light-dark-function",plugins:[e(),basePlugin(o)]}:basePlugin(o)};postcssPlugin.postcss=!0;export{postcssPlugin as default};
