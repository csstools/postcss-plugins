import e from"postcss-selector-parser";import{selectorSpecificity as t}from"@csstools/selector-specificity";const n=e.pseudo({value:":is"});function sortCompoundSelectorsInsideComplexSelector(t){if(!t||!t.nodes)return;const o=[];let r=[];for(let s=0;s<t.nodes.length;s++)if("combinator"!==t.nodes[s].type)if(e.isPseudoElement(t.nodes[s]))o.push(r),r=[t.nodes[s]];else{if("tag"===t.nodes[s].type&&r.find((e=>"tag"===e.type))){const o=n.clone({}),r=t.nodes[s];r.replaceWith(o),o.append(e.selector({nodes:[r],value:void 0}))}r.push(t.nodes[s])}else o.push(r),o.push([t.nodes[s]]),r=[];o.push(r);const s=[];for(let e=0;e<o.length;e++){const t=o[e];t.sort(((e,t)=>"selector"===e.type&&"selector"===t.type&&e.nodes.length&&t.nodes.length?selectorTypeOrder(e.nodes[0])-selectorTypeOrder(t.nodes[0]):"selector"===e.type&&e.nodes.length?selectorTypeOrder(e.nodes[0])-selectorTypeOrder(t):"selector"===t.type&&t.nodes.length?selectorTypeOrder(e)-selectorTypeOrder(t.nodes[0]):selectorTypeOrder(e)-selectorTypeOrder(t)));for(let e=0;e<t.length;e++)s.push(t[e])}for(let e=s.length-1;e>=0;e--)s[e].remove(),t.prepend(s[e])}function selectorTypeOrder(t){return e.isPseudoElement(t)?o.pseudoElement:o[t.type]}const o={universal:0,tag:1,pseudoElement:2,id:3,class:4,attribute:5,pseudo:6,selector:7,string:8,root:9,comment:10};function ampersandToScope(t,n){let o,r=t.parent;for(;r;){if("rule"===r.type)return;r=r.parent}try{o=e().astSync(t.selector)}catch(e){return void t.warn(n,`Failed to parse selector : "${t.selector}" with message: "${e instanceof Error?e.message:e}"`)}o&&(o.walkNesting((t=>{const n=t.parent;t.replaceWith(e.pseudo({value:":scope"})),n&&sortCompoundSelectorsInsideComplexSelector(n)})),t.selector=o.toString())}function cleanupParent(e){if(!e.nodes.length)return void e.remove();const t=e.nodes.filter((e=>"comment"===e.type));t.length===e.nodes.length&&e.replaceWith(...t)}function shiftNodesBeforeParent(e,t){const n=t.index(e);if(n){const e=t.cloneBefore().removeAll().append(t.nodes.slice(0,n));e.raws.semicolon=!0,cleanupParent(e)}t.before(e),t.raws.semicolon=!0}function combinationsWithSizeN(e,t){if(t<2)throw new Error("n must be greater than 1");if(e.length<2)throw new Error("s must be greater than 1");if(Math.pow(e.length,t)>1e4)throw new Error("Too many combinations when trying to resolve a nested selector with lists, reduce the complexity of your selectors");const n=[];for(let e=0;e<t;e++)n[e]=0;const o=[];for(;;){const r=[];for(let s=t-1;s>=0;s--){let t=n[s];if(t>=e.length){if(t=0,n[s]=0,0===s)return o;n[s-1]+=1}r[s]=e[t]}o.push(r),n[n.length-1]++}}function nodesAreEquallySpecific(n){const o=n.map((t=>e().astSync(t))).map((e=>t(e))),r=o[0];for(let e=1;e<o.length;e++)if(r.a!==o[e].a||r.b!==o[e].b||r.c!==o[e].c)return!1;return!0}function mergeSelectors(t,n,o){let r=[];r=nodesAreEquallySpecific(t)||o.noIsPseudoSelector?t.map((t=>e().astSync(t))):[e().astSync(`:is(${t.join(",")})`)];const s=[];for(let t=0;t<n.length;t++){let l,i=n[t];{const t=e().astSync(i);let n=!1;t.walk((e=>{"nesting"===e.type&&(n=!0)}));const o=t.nodes[0];let r=!1;o.each((e=>"combinator"===e.type&&(r=!0,!1))),n?r&&o.insertBefore(o.at(0),e.nesting({})):(o.insertBefore(o.at(0),e.combinator({value:" "})),o.insertBefore(o.at(0),e.nesting({}))),i=t.toString()}let c=[],a=0;if(e().astSync(i).walkNesting((()=>{a++})),a>1&&r.length>1)c=combinationsWithSizeN(r,a),l=c.length;else{l=r.length;for(let e=0;e<r.length;e++){c.push([]);for(let t=0;t<a;t++)c[e].push(r[e])}}for(let t=0;t<l;t++){let n=0;const r=e().astSync(i);r.walk((r=>{if("nesting"!==r.type)return;let s=c[t][n];n++,"root"===s.type&&1===s.nodes.length&&(s=s.nodes[0]);const l=e().astSync(`:is(${s.toString()})`),i=isSimpleSelector(s.nodes[0]),a=isCompoundSelector(s.nodes[0]),p=isSimpleSelector(r),u=isCompoundSelector(r);if(i&&p)return void r.replaceWith(s.clone());if((i||a)&&(p||u)){const e=r.parent;return i&&"selector"===s.type?r.replaceWith(s.clone().nodes[0]):r.replaceWith(...s.clone().nodes),void(e&&e.nodes.length>1&&sortCompoundSelectorsInsideComplexSelector(e))}if(i){const e=r.parent;return r.replaceWith(s.clone().nodes[0]),void(e&&sortCompoundSelectorsInsideComplexSelector(e))}if(a){const e=r.parent;return r.replaceWith(...s.clone().nodes),void(e&&sortCompoundSelectorsInsideComplexSelector(e))}if(nestingIsFirstAndOnlyInSelectorWithEitherSpaceOrChildCombinator(r)){const e=r.parent;return r.replaceWith(...s.clone().nodes),void(e&&sortCompoundSelectorsInsideComplexSelector(e))}if(nestingIsNotInsideCompoundSelector(r)){const e=r.parent;return r.replaceWith(...s.clone().nodes),void(e&&sortCompoundSelectorsInsideComplexSelector(e))}const d=r.parent;o.noIsPseudoSelector?r.replaceWith(...s.clone().nodes):r.replaceWith(...l.clone({}).nodes),d&&sortCompoundSelectorsInsideComplexSelector(d)})),s.push(r.toString())}}return s}function isSimpleSelector(e){return"combinator"!==e.type&&!(e.parent&&e.parent.nodes.length>1)}function isCompoundSelector(e,t=null){if(isSimpleSelector(e))return!1;if(!e.parent)return!1;if(!!e.parent.nodes.find((e=>"combinator"===e.type)))return!1;return!(!!e.parent.nodes.find((e=>"nesting"===e.type))&&t&&!isCompoundSelector(t))}function nestingIsFirstAndOnlyInSelectorWithEitherSpaceOrChildCombinator(e){if(!e.parent)return!1;if(0!==e.parent.nodes.indexOf(e))return!1;for(let t=1;t<e.parent.nodes.length;t++)if("combinator"===e.parent.nodes[t].type&&" "!==e.parent.nodes[t].value&&">"!==e.parent.nodes[t].value)return!1;return!0}function nestingIsNotInsideCompoundSelector(e){if(isSimpleSelector(e))return!0;if(!e.parent)return!1;for(let t=0;t<e.parent.nodes.length;t++)if("nesting"!==e.parent.nodes[t].type&&(e.parent.nodes[t].prev()||e.parent.nodes[t].next())){if(e.parent.nodes[t].prev()&&"combinator"!==e.parent.nodes[t].prev().type)return!1;if(e.parent.nodes[t].next()&&"combinator"!==e.parent.nodes[t].next().type)return!1}return!0}function groupDeclarations(e){const t=[],n=[];e.each((e=>{if(isDeclarationLike(e,n.length>0))t.push(e);else{if("comment"===e.type){let o=e.next();for(;o&&"comment"===o.type;)o=o.next();if(isDeclarationLike(o,n.length>0))return void t.push(e)}n.push(e)}})),e.removeAll(),t.forEach((t=>{e.append(t)})),n.forEach((t=>{e.append(t)}))}function isDeclarationLike(e,t){return!!e&&("decl"===e.type||"atrule"===e.type&&"mixin"===e.name.toLowerCase()&&!t)}function transformRuleWithinRule(e,t,n,o){let r=[];try{r=mergeSelectors(t.selectors,e.selectors,o)}catch(o){return void e.warn(n,`Failed to parse selectors : "${t.selector}" / "${e.selector}" with message: "${o instanceof Error?o.message:o}"`)}if(!r.length)return;groupDeclarations(t),shiftNodesBeforeParent(e,t),e.selectors=r;"rule"===e.type&&"rule"===t.type&&e.selector===t.selector&&e.append(...t.nodes),cleanupParent(t)}function isValidRuleWithinRule(e){return e.selectors.every((e=>-1===e.indexOf("|")))}function comma(e){const t=[];let n="",o=!1,r=0,s=!1,l=!1;for(const i of e)l?l=!1:"\\"===i?l=!0:s?i===s&&(s=!1):'"'===i||"'"===i?s=i:"("===i?r+=1:")"===i?r>0&&(r-=1):0===r&&","===i&&(o=!0),o?(""!==n&&t.push(n.trim()),n="",o=!1):n+=i;return t.push(n.trim()),t}function transformNestRuleWithinRule(e,t,n,o,r){let s=[];try{s=mergeSelectors(t.selectors,comma(e.params),r)}catch(o){return void e.warn(n,`Failed to parse selectors : "${t.selector}" / "${e.params}" with message: "${o instanceof Error?o.message:o}"`)}if(!s.length)return;shiftNodesBeforeParent(e,t);const l=t.clone().removeAll().append(e.nodes);l.raws.semicolon=!0,l.selectors=s,e.replaceWith(l),cleanupParent(t),o(l,n,r)}function isValidNestRuleWithinRule(e){return comma(e.params).every((e=>e.split("&").length>=2&&-1===e.indexOf("|")))}var r=["container","document","media","supports","layer","starting-style"];function atruleWithinRule(e,t,n,o,r){if(groupDeclarations(t),shiftNodesBeforeParent(e,t),e.nodes){const s=t.clone().removeAll().append(e.nodes);e.append(s),cleanupParent(t),o(s,n,r)}else cleanupParent(t)}function isAtruleWithinRule(e){return r.includes(e.name)}function transformAtruleWithinAtrule(e,t){var n,o;groupDeclarations(t),shiftNodesBeforeParent(e,t),e.params=(n=t.params,o=e.params,comma(n).map((e=>comma(o).map((t=>`${e} and ${t}`)).join(", "))).join(", ")),cleanupParent(t)}function isAtruleWithinAtrule(e,t){return r.includes(e.name)&&e.name===t.name}function isAtRule(e){return e&&"atrule"===e.type}function isNestRule(e){return e&&isAtRule(e)&&"nest"===e.name}function isRule(e){return e&&"rule"===e.type}function walk(e,t,n){e.each((o=>{const r=o.parent;isNestRule(o)&&!n.silenceAtNestWarning&&e.warn(t,`\`@nest\` was removed from the CSS Nesting specification and will be removed from PostCSS Nesting in the next major version.\nChange \`@nest ${o.params} {}\` to \`${o.params} {}\` to migrate to the latest standard.`),isRule(o)&&isRule(r)&&isValidRuleWithinRule(o)?transformRuleWithinRule(o,r,t,n):isNestRule(o)&&isRule(r)&&isValidNestRuleWithinRule(o)?transformNestRuleWithinRule(o,r,t,walk,n):isAtRule(o)&&isRule(r)&&isAtruleWithinRule(o)?atruleWithinRule(o,r,t,walk,n):isAtRule(o)&&isAtRule(r)&&isAtruleWithinAtrule(o,r)&&transformAtruleWithinAtrule(o,r),"nodes"in o&&o.nodes.length&&walk(o,t,n)}))}const creator=e=>{const t=Object.assign({noIsPseudoSelector:!1,silenceAtNestWarning:!1},e);return{postcssPlugin:"postcss-nesting",Rule(e,{result:n}){walk(e,n,t),e.selector.includes("&")&&ampersandToScope(e,n)}}};creator.postcss=!0;export{creator as default};
