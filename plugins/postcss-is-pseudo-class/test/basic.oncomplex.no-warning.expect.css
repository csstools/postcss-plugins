input[active]:hover > b {
	order: 1;
}

input[active]:focus > b {
	order: 1;
}

button[active]:hover > b {
	order: 1;
}

button[active]:focus > b {
	order: 1;
}

input.a[active]:hover > b {
	order: 2;
}

input.b[active]:hover > b {
	order: 2;
}

input.c[active]:hover > b {
	order: 2;
}

input.d[active]:hover > b {
	order: 2;
}

input.a[active]:focus > b {
	order: 2;
}

input.b[active]:focus > b {
	order: 2;
}

input.c[active]:focus > b {
	order: 2;
}

input.d[active]:focus > b {
	order: 2;
}

input.a[active]:focus-within > b {
	order: 2;
}

input.b[active]:focus-within > b {
	order: 2;
}

input.c[active]:focus-within > b {
	order: 2;
}

input.d[active]:focus-within > b {
	order: 2;
}

button.a[active]:hover > b {
	order: 2;
}

button.b[active]:hover > b {
	order: 2;
}

button.c[active]:hover > b {
	order: 2;
}

button.d[active]:hover > b {
	order: 2;
}

button.a[active]:focus > b {
	order: 2;
}

button.b[active]:focus > b {
	order: 2;
}

button.c[active]:focus > b {
	order: 2;
}

button.d[active]:focus > b {
	order: 2;
}

button.a[active]:focus-within > b {
	order: 2;
}

button.b[active]:focus-within > b {
	order: 2;
}

button.c[active]:focus-within > b {
	order: 2;
}

button.d[active]:focus-within > b {
	order: 2;
}

a:hover {
	order: 3;
}

a:focus {
	order: 3;
}

button:hover {
	order: 3;
}

button:focus {
	order: 3;
}

a:hover {
	order: 4;
}

button:hover {
	order: 4;
}

a:focus {
	order: 4;
}

button:focus {
	order: 4;
}

button:hover {
	order: 5;
}

button:focus {
	order: 5;
}

button:focus-within {
	order: 5;
}

:not(.some) {
	order: 6;
}

:not(.other) {
	order: 6;
}

.button:hover {
	order: 7;
}

button:hover:not(.does-not-exist) {
	order: 7;
}

.button:focus {
	order: 7;
}

button:focus:not(.does-not-exist) {
	order: 7;
}

button:hover {
	order: 8;
}

button:focus {
	order: 8;
}

input {
	order: 8;
}

foo[baz=":is(.some, .other)"], .ok {
	order: 9;
}

.alpha:focus > .beta + .beta {
	order: 10;
}

.pre:is(.alpha > .beta) + :is(:focus > .beta) {
	order: 11;
}

.pre :is(.alpha > .beta)+ :is(:focus > .beta) {
	order: 12;
}

.post:is(.alpha > .beta) + :is(:focus > .beta) {
	order: 13;
}

:is(.alpha > .beta) .post + :is(:focus > .beta) {
	order: 14;
}

:is(.alpha ~ .delta):focus > .beta + .beta {
	order: 15;
}

.alpha:focus > .beta + .beta {
	order: 16;
}

.alpha:focus > .beta + .two {
	order: 16;
}

.one:focus > .two + .beta {
	order: 16;
}

.one:focus > .two + .two {
	order: 16;
}

:is(.alpha > .beta) ~ :is(:focus > .beta) {
	order: 17;
}

.alpha .beta > h1:not([attr*="foo-"]) {
	order: 18;
}

.alpha .beta > h2:not([attr*="foo-"]) {
	order: 18;
}

.alpha .beta > h3:not([attr*="foo-"]) {
	order: 18;
}

.alpha .beta > h4:not([attr*="foo-"]) {
	order: 18;
}

.alpha .beta > h5:not([attr*="foo-"]) {
	order: 18;
}

.alpha .beta > h6:not([attr*="foo-"]) {
	order: 18;
}

.one > .two.alpha {
	order: 19;
}

.pre.alpha:is(.one > .two) {
	order: 20;
}

.pre .alpha:is(.one > .two) {
	order: 21;
}

a:not(.does-not-exist) {
	order: 22;
}

.e a {
	order: 22;
}

.e b {
	order: 22;
}

.empty-is:not(*) {
	order: 23;
}

.invalid-is:is {
	order: 24;
}

a:hover {
	order: 25;
}

a:focus {
	order: 25;
}

button:hover {
	order: 25;
}

button:focus {
	order: 25;
}

a:hover::before {
	order: 26;
}

a:focus::before {
	order: 26;
}

button:hover::before {
	order: 26;
}

button:focus::before {
	order: 26;
}

a:hover {
	order: 27;
}

a:focus {
	order: 27;
}

button:hover {
	order: 27;
}

button:focus {
	order: 27;
}

a:hover:before {
	order: 28;
}

a:focus:before {
	order: 28;
}

button:hover:before {
	order: 28;
}

button:focus:before {
	order: 28;
}

.bar:not(.does-not-exist) {
	order: 29;
}

.foo:lang(ae, ar, arc, bcc, bqi, ckb, dv, fa, glk, he, ku, mzn, nqo, pnb, ps, sd, ug, ur, yi) {
	order: 29;
}

::before:hover {
	order: 30;
}

::before:focus {
	order: 30;
}

:hover::after {
	order: 31;
}

:focus::after {
	order: 31;
}

ol:hover > li.foo {
	order: 32
}

ol:hover > li.bar {
	order: 32
}

ol:focus > li.foo {
	order: 32
}

ol:focus-visible > li.foo {
	order: 32
}

ol:focus > li.bar {
	order: 32
}

ol:focus-visible > li.bar {
	order: 32
}

ul:hover > li.foo {
	order: 32
}

ul:hover > li.bar {
	order: 32
}

ul:focus > li.foo {
	order: 32
}

ul:focus-visible > li.foo {
	order: 32
}

ul:focus > li.bar {
	order: 32
}

ul:focus-visible > li.bar {
	order: 32
}

.all.mixed:not(.does-not-exist):not(.does-not-exist) {
	order: 33;
}

.all.caps.nested:focus {
	order: 33;
}

.caps.mixed:not(.does-not-exist):not(.does-not-exist) {
	order: 33;
}

.caps.caps.nested:focus {
	order: 33;
}
