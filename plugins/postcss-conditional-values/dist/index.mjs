import e from"postcss-value-parser";const t=t=>{const o=Object.assign({functionName:"csstools-if"},t);return{postcssPlugin:"postcss-conditional-values",prepare(){const t=new Map,r=new Set,s=new Set;return{Declaration(n,{postcss:a}){if(!n.value.toLowerCase().includes(o.functionName))return;const u=e(n.value);let l="";const i=[];let c=!1;const p=[];if(u.walk((t=>{if("function"===t.type&&t.nodes&&t.value.toLowerCase()===o.functionName)return t.nodes.forEach((t=>{l||"word"!==t.type||"--"!==t.value.slice(0,2)?l&&("word"!==t.type||"else"!==t.value?c?c&&p.push(t):i.push(t):c=!0):l=e.stringify(t).trim()})),!1})),!l)return;if(i.some((e=>"div"===e.type&&","===e.value)))return;if(p.some((e=>"div"===e.type&&","===e.value)))return;const f=e.stringify(i).trim(),d=e.stringify(p).trim();if(f&&d){{const r=t.get(l)||0;t.set(l,r+1);const s=`${l}--${r}`;n.cloneBefore({prop:s,value:`var(${l}) ${d}`}),u.walk((t=>{if("function"===t.type&&t.nodes&&t.value.toLowerCase()===o.functionName)return t.value="var",t.nodes=[...e(s).nodes,{sourceIndex:0,sourceEndIndex:1,value:",",type:"div",before:"",after:""},...e(f).nodes],!1})),n.cloneBefore({value:u.toString()})}if(!r.has(l)&&(n.root().walkDecls(l,(e=>{e.prop===l&&(""!==e.value.trim()?"true"===e.value.trim().toLowerCase()?e.value="initial":"false"===e.value.trim().toLowerCase()&&(e.value=" ",s.add(l)):s.add(l))})),r.add(l),!s.has(l))){let e;s.add(l),n.root().each((t=>{if("rule"===t.type&&":root"===t.selector)return e=t,!1})),e||(e=a.rule({selector:":root",source:n.source,raws:{before:"",after:"\n",between:" "}}),n.root().prepend(e));const t=a.decl({value:" ",prop:l,raws:{before:"\n\t"}});t.source=n.source,e.append(t)}n.remove()}}}}}};t.postcss=!0;export{t as default};
