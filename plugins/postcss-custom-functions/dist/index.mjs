import{parse as e,addLayerToModel as t}from"@csstools/cascade-layer-name-parser";import{parse as n}from"@csstools/custom-function-parser";import{replaceComponentValues as r,parseListOfComponentValues as s,isFunctionNode as o,FunctionNode as a,TokenNode as i,stringify as u,parseCommaSeparatedListOfComponentValues as c}from"@csstools/css-parser-algorithms";import{tokenize as l,isTokenFunction as p,TokenType as m}from"@csstools/css-tokenizer";const h=e("csstools-implicit-layer")[0];function collectCascadeLayerOrder(n){const r=new Map,s=new Map,o=[];n.walkAtRules((n=>{if("layer"!==n.name.toLowerCase())return;{let e=n.parent;for(;e;){if("atrule"!==e.type||"layer"!==e.name.toLowerCase()){if(e===n.root())break;return}e=e.parent}}let a;if(n.nodes)a=normalizeLayerName(n.params,1);else{if(!n.params.trim())return;a=n.params}let i=e(a);if(i?.length){{let e=n.parent;for(;e&&"atrule"===e.type&&"layer"===e.name.toLowerCase();){const t=s.get(e);t?(i=i.map((e=>t.concat(e))),e=e.parent):e=e.parent}}if(t(o,i),n.nodes){const e=i[0].concat(h);r.set(n,e),s.set(n,i[0])}}}));for(const e of r.values())t(o,[e]);const a=new WeakMap;for(const[e,t]of r)a.set(e,o.findIndex((e=>t.equal(e))));return a}function normalizeLayerName(e,t){return e.trim()?e:"csstools-anon-layer--"+t++}const f=new Set(["scope","container","layer"]),d=/^function$/i;function isProcessableRule(e){if(!d.test(e.name))return!1;if(!e.params||!e.params.includes("--"))return!1;if(!e.nodes?.length)return!1;let t=e.parent;for(;t;){if("atrule"===t.type&&!f.has(t.name.toLowerCase()))return!1;t=t.parent}return!0}function getCustomFunctions(e,t,r){const s=new Map,o=new Map,a=collectCascadeLayerOrder(e);return e.walkAtRules((e=>{if(!isProcessableRule(e))return;const i=e.params.trim(),u=n(i,{onParseError:n=>{e.warn(t,`Failed to parse custom function : "${e.params}" with message: "${n instanceof Error?n.message:n}"`)}});if(!u)return;const c=u.getName(),l=(m=a,(p=e).parent&&"atrule"===p.parent.type&&"layer"===p.parent.name.toLowerCase()?m.has(p.parent)?m.get(p.parent)+1:0:1e7);var p,m;const h=o.get(c)??-1;if(l&&l>=h&&(o.set(c,l),s.set(c,{node:e,function:u})),!r.preserve){const t=e.parent;e.remove(),removeEmptyAncestorBlocks(t)}})),s}function removeEmptyAncestorBlocks(e){if(!e)return;let t=e;for(;t;){if(t.nodes&&t.nodes.length>0)return;const e=t.parent;t.remove(),t=e}}const g=/--.*?\(/i,creator=e=>{const t=Object.assign({preserve:!1},e);return{postcssPlugin:"postcss-custom-functions",prepare(){let e=new Map;const n=[];return{postcssPlugin:"postcss-custom-functions",Once(n,{result:r}){e=getCustomFunctions(n,r,{preserve:t.preserve})},OnceExit(e){n.forEach((t=>{t.registrations.forEach((t=>{e.append(t)}))}))},Declaration(c,{atRule:h}){if(!g.test(c.value))return;const f=c.parent;if(!f)return;const d=l({css:c.value});if(!d.some((e=>p(e)&&e[4].value.startsWith("--"))))return;const y=r([s(d)],(t=>{if(!o(t))return;const r=t.getName();if(!r.startsWith("--"))return;const s=e.get(r);if(!s)return;const u=new CallingContext(f,f,c,t,s.function,s.node,h);return u.invalid?new a([m.Function,"var(",-1,-1,{value:"var"}],[m.CloseParen,")",-1,-1,void 0],[]):(f.before(u.argumentRule),f.before(u.bodyRule),n.push(u),new a([m.Function,"var(",-1,-1,{value:"var"}],[m.CloseParen,")",-1,-1,void 0],[new i([m.Ident,u.resultIdent,-1,-1,{value:u.resultIdent}])]))})),v=u(y);v!==c.value&&(c.cloneBefore({value:v}),t?.preserve||c.remove())}}}}};function generateDashedIdent(e,t,n){return`--csstools-${[e,n,t].filter((e=>!!e)).join("-")}`}creator.postcss=!0;class CallingContext{static counter=0;id;rootElement;element;property;parent=null;function;customFunction;customFunctionBody;registrations=[];argumentRule;bodyRule;resultIdent;varCounter=0;invalid=!1;constructor(e,t,n,r,s,o,a,i=null){this.id=(CallingContext.counter++).toString(36),this.rootElement=e,this.element=t,this.property=n,this.function=r,this.customFunction=s,this.customFunctionBody=o,this.parent=i;{const e=(++this.varCounter).toString(36);this.resultIdent=generateDashedIdent("custom-function-call",e,this.id);const t=c(this.function.value.flatMap((e=>e.tokens())));t.length>this.customFunction.parameters.length&&(this.invalid=!0),this.customFunction.parameters.forEach((e=>{const t=e.getName(),n=e.getArgumentType()||"*",r=a({name:"property",params:generateDashedIdent("function-argument",t,this.id),nodes:[this.property.clone({prop:"syntax",value:`"${n}"`}),this.property.clone({prop:"inherit",value:"false"})],source:this.property.source});this.registrations.push(r);const s=a({name:"property",params:generateDashedIdent("function-body",t,this.id),nodes:[this.property.clone({prop:"syntax",value:'"*"'}),this.property.clone({prop:"inherit",value:"false"})],source:this.property.source});this.registrations.push(s)}));const n=this.customFunction.getReturnType();if(n){const e=a({name:"property",params:generateDashedIdent("return-value","",this.id),nodes:[this.property.clone({prop:"syntax",value:`"${n}"`}),this.property.clone({prop:"inherit",value:"false"})],source:this.property.source});this.registrations.push(e)}this.argumentRule=this.element.clone({nodes:[]}),this.customFunction.parameters.forEach(((e,n)=>{const r=e.getName();e.getDefaultValue()&&this.argumentRule.append(this.property.clone({prop:generateDashedIdent("function-argument",r,this.id),value:e.getDefaultValue()}));const s=t[n];s&&this.argumentRule.append(this.property.clone({prop:generateDashedIdent("function-argument",r,this.id),value:u([s])}))})),this.bodyRule=this.element.clone({nodes:[...this.customFunctionBody.nodes?.map((e=>e.clone()))??[]]}),this.bodyRule.walkDecls(/^result$/i,(e=>{e.prop=this.resultIdent}))}}}export{creator as default};
