import e from"postcss-selector-parser";const s="js-focus-visible",o=":focus-visible",creator=l=>{const n=Object.assign({preserve:!0,replaceWith:".focus-visible",disablePolyfillReadyClass:!1},l),t=e().astSync(n.replaceWith);return{postcssPlugin:"postcss-focus-visible",Rule(l,{result:r}){if(!l.selector.toLowerCase().includes(o))return;const a=l.selectors.flatMap((a=>{if(!a.toLowerCase().includes(o))return[a];let i;try{i=e().astSync(a)}catch(e){return l.warn(r,`Failed to parse selector : "${a}" with message: "${e.message}"`),a}if(void 0===i)return[a];let c=!1;if(i.walkPseudos((e=>{e.value.toLowerCase()===o&&(e.nodes&&e.nodes.length||(c=!0,e.replaceWith(t.clone({}))))})),!c)return[a];const d=i.clone();if(!n.disablePolyfillReadyClass){var u,p,f,v,b;if(null!=(u=i.nodes)&&null!=(p=u[0])&&null!=(f=p.nodes)&&f.length)for(let o=0;o<i.nodes[0].nodes.length;o++){const l=i.nodes[0].nodes[o];if("combinator"===l.type||e.isPseudoElement(l)){i.nodes[0].insertBefore(l,e.className({value:s}));break}if(o===i.nodes[0].nodes.length-1){i.nodes[0].append(e.className({value:s}));break}}null!=(v=i.nodes)&&null!=(b=v[0])&&b.nodes&&(d.nodes[0].prepend(e.combinator({value:" "})),d.nodes[0].prepend(e.className({value:s})))}return[i.toString(),d.toString()]}));a.join(",")!==l.selectors.join(",")&&(l.cloneBefore({selectors:a}),n.preserve||l.remove())}}};creator.postcss=!0;export{creator as default};
