"use strict";var e=require("@csstools/css-color-parser"),s=require("@csstools/utilities"),t=require("@csstools/css-parser-algorithms"),r=require("@csstools/css-tokenizer");const o=/\bhwb\(/i,a=/^hwb$/i,n="(color: hwb(0 0% 0%))",postcssPlugin=l=>{const c="preserve"in Object(l)&&Boolean(l?.preserve);return{postcssPlugin:"postcss-hwb-function",Declaration:(l,{postcss:i})=>{const p=l.value;if(!o.test(p))return;if(s.hasSupportsAtRuleAncestor(l,o))return;if(s.hasFallback(l))return;const u=t.replaceComponentValues(t.parseCommaSeparatedListOfComponentValues(r.tokenize({css:p})),(s=>{if(!t.isFunctionNode(s)||!a.test(s.getName()))return;const r=e.color(s);return r&&!(r.syntaxFlags.has(e.SyntaxFlag.Experimental)||r.syntaxFlags.has(e.SyntaxFlag.HasNoneKeywords)||r.syntaxFlags.has(e.SyntaxFlag.RelativeColorSyntax))?e.serializeRGB(r):void 0})),f=t.stringify(u);if(f!==p)if(l.variable&&c&&l.parent){const e=l.parent,s=i.atRule({name:"supports",params:n,source:l.source}),t=e.clone();t.removeAll(),t.append(l.clone()),s.append(t),insertAtSupportsAfterCorrectRule(s,e,n),l.replaceWith(l.clone({value:f}))}else c?l.cloneBefore({value:f}):l.replaceWith(l.clone({value:f}))}}};function insertAtSupportsAfterCorrectRule(e,s,t){let r=s,o=s.next();for(;r&&o&&"atrule"===o.type&&"supports"===o.name.toLowerCase()&&o.params===t;)r=o,o=o.next();r.after(e)}postcssPlugin.postcss=!0,module.exports=postcssPlugin;
