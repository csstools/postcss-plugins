import{color as e,SyntaxFlag as t,serializeRGB as s}from"@csstools/css-color-parser";import{hasFallback as r}from"@csstools/utilities";import{replaceComponentValues as o,parseCommaSeparatedListOfComponentValues as a,isFunctionNode as n,stringify as l}from"@csstools/css-parser-algorithms";import{tokenize as p}from"@csstools/css-tokenizer";const c="(color: hwb(0 0% 0%))";function hasSupportsAtRuleAncestor(e){let t=e.parent;for(;t;)if("atrule"===t.type){if("supports"===t.name.toLowerCase()&&t.params.includes(c))return!0;t=t.parent}else t=t.parent;return!1}const u=/hwb\(/i,i=/^hwb$/i,postcssPlugin=f=>{const m="preserve"in Object(f)&&Boolean(f?.preserve);return{postcssPlugin:"postcss-hwb-function",Declaration:(f,{postcss:h})=>{const v=f.value;if(!u.test(v))return;if(m&&hasSupportsAtRuleAncestor(f))return;if(r(f))return;const A=o(a(p({css:v})),(r=>{if(!n(r)||!i.test(r.getName()))return;const o=e(r);return o&&!(o.syntaxFlags.has(t.Experimental)||o.syntaxFlags.has(t.HasNoneKeywords)||o.syntaxFlags.has(t.RelativeColorSyntax))?s(o):void 0})),x=l(A);if(x!==v)if(f.variable&&m&&f.parent){const e=f.parent,t=h.atRule({name:"supports",params:c,source:f.source}),s=e.clone();s.removeAll(),s.append(f.clone()),t.append(s),insertAtSupportsAfterCorrectRule(t,e,c),f.replaceWith(f.clone({value:x}))}else m?f.cloneBefore({value:x}):f.replaceWith(f.clone({value:x}))}}};function insertAtSupportsAfterCorrectRule(e,t,s){let r=t,o=t.next();for(;r&&o&&"atrule"===o.type&&"supports"===o.name.toLowerCase()&&o.params===s;)r=o,o=o.next();r.after(e)}postcssPlugin.postcss=!0;export{postcssPlugin as default};
