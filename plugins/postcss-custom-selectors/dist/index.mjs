import e from"postcss-selector-parser";function collectCascadeLayerOrder(e){const t=new Map,r=new Map,s=[];e.walkAtRules((e=>{if("layer"!==e.name.toLowerCase())return;{let t=e.parent;for(;t;){if("atrule"!==t.type||"layer"!==t.name.toLowerCase()){if(t===e.root())break;return}t=t.parent}}let o=[];if(e.nodes)o.push((n=e.params,a=1,n.trim()||"csstools-anon-layer--"+a++));else{if(!e.params.trim())return;o=e.params.split(",").map((e=>e.trim()))}var n,a;{let t=e.parent;for(;t&&"atrule"===t.type&&"layer"===t.name.toLowerCase();){const e=r.get(t);e?(o=o.map((t=>e+"."+t)),t=t.parent):t=t.parent}}if(addLayerToModel(s,o),e.nodes){const s=o[0]+".csstools-implicit-layer";t.set(e,s),r.set(e,o[0])}}));for(const e of t.values())addLayerToModel(s,[e]);const o=s.map((e=>e.join("."))),n=new WeakMap;for(const[e,r]of t)n.set(e,o.indexOf(r));return n}function addLayerToModel(e,t){return t.forEach((t=>{const r=t.split(".");e:for(let t=0;t<r.length;t++){const s=r.slice(0,t+1);let o=-1,n=0;for(let t=0;t<e.length;t++){const r=e[t];let a=0;t:for(let e=0;e<r.length;e++){const t=r[e],o=s[e];if(o===t&&e+1===s.length)continue e;if(o!==t){if(o!==t)break t}else a++}a>=n&&(o=t,n=a)}-1===o?e.push(s):e.splice(o+1,0,s)}})),e}const t=new Set(["scope","container","layer"]);function isProcessableCustomSelectorRule(e){if("atrule"!==e.type)return!1;if("custom-selector"!==e.name.toLowerCase())return!1;if(!e.params||!e.params.includes(":--"))return!1;if(e.nodes&&e.nodes.length>0)return!1;let r=e.parent;for(;r;){if("rule"===r.type)return!1;if("atrule"===r.type&&!t.has(r.name.toLowerCase()))return!1;r=r.parent}return!0}function getCustomSelectors(t,r,s){const o=new Map,n=new Map,a=collectCascadeLayerOrder(t);return t.walkAtRules((t=>{var l,c;if(isProcessableCustomSelectorRule(t))try{var p,u,i;const r=t.params.trim(),m=e().astSync(r),f=null==m||null==(p=m.nodes)||null==(u=p[0])||null==(i=u.nodes)?void 0:i[0];if(!f||"pseudo"!==f.type||!f.value.startsWith(":--"))return;const d=f.toString(),y=(c=a,(l=t).parent&&"atrule"===l.parent.type&&"layer"===l.parent.name.toLowerCase()?c.has(l.parent)?c.get(l.parent):-1:1/0);if(y>=(n.get(d)??-1)&&(n.set(d,y),o.set(d,e().astSync(r.slice(d.length).trim()))),!s.preserve){const e=t.parent;t.remove(),removeEmptyAncestorBlocks(e)}}catch(e){t.warn(r,`Failed to parse custom selector : "${t.params}" with message: "${e.message}"`)}})),o}function removeEmptyAncestorBlocks(e){let t=e;for(;t;){if(t.nodes&&t.nodes.length>0)return;const e=t.parent;t.remove(),t=e}}var transformRule=(t,r,s,o)=>{let n=t.selector;try{n=e((t=>{t.walkPseudos((t=>{if(!s.has(t.value))return;const r=e.pseudo({value:":is",nodes:[]});s.get(t.value).each((e=>{r.append(e.clone({}))})),t.replaceWith(r)}))})).processSync(t.selector)}catch(e){return void t.warn(r,`Failed to parse selector : "${n}" with message: "${e.message}"`)}n!==t.selector&&(t.cloneBefore({selector:n}),o.preserve||t.remove())};const creator=e=>{const t=Boolean(Object(e).preserve);if("importFrom"in Object(e))throw new Error('[postcss-custom-selectors] "importFrom" is no longer supported');if("exportTo"in Object(e))throw new Error('[postcss-custom-selectors] "exportTo" is no longer supported');return{postcssPlugin:"postcss-custom-selectors",prepare(){let e=new Map;return{Once:(r,{result:s})=>{e=getCustomSelectors(r,s,{preserve:t})},Rule:(r,{result:s})=>{r.selector.includes(":--")&&transformRule(r,s,e,{preserve:t})}}}}};creator.postcss=!0;export{creator as default};
