"use strict";var e=require("postcss-selector-parser");const s=[" ",">","~",":","+","@","#","(",")"];function isValidReplacement(e){let n=!0;for(let t=0,l=s.length;t<l&&n;t++)e.indexOf(s[t])>-1&&(n=!1);return n}const n="js-focus-within",t=":focus-within",creator=s=>{const l=Object.assign({preserve:!0,replaceWith:"[focus-within]",disablePolyfillReadyClass:!1},s),o=e().astSync(l.replaceWith);return isValidReplacement(l.replaceWith)?{postcssPlugin:"postcss-focus-within",Rule(s,{result:r}){if(!s.selector.toLowerCase().includes(t))return;const i=s.selectors.flatMap((i=>{if(!i.toLowerCase().includes(t))return[i];let a;try{a=e().astSync(i)}catch(e){return s.warn(r,`Failed to parse selector : "${i}" with message: "${e.message}"`),i}if(void 0===a)return[i];let c=!1;if(a.walkPseudos((e=>{e.value.toLowerCase()===t&&(e.nodes&&e.nodes.length||(c=!0,e.replaceWith(o.clone({}))))})),!c)return[i];const u=a.clone();if(!l.disablePolyfillReadyClass){var d,p,f,h,m;if(null!=(d=a.nodes)&&null!=(p=d[0])&&null!=(f=p.nodes)&&f.length)for(let s=0;s<a.nodes[0].nodes.length;s++){const t=a.nodes[0].nodes[s];if("combinator"===t.type||e.isPseudoElement(t)){a.nodes[0].insertBefore(t,e.className({value:n}));break}if(s===a.nodes[0].nodes.length-1){a.nodes[0].append(e.className({value:n}));break}}null!=(h=a.nodes)&&null!=(m=h[0])&&m.nodes&&(u.nodes[0].prepend(e.combinator({value:" "})),u.nodes[0].prepend(e.className({value:n})))}return[a.toString(),u.toString()]}));i.join(",")!==s.selectors.join(",")&&(s.cloneBefore({selectors:i}),l.preserve||s.remove())}}:{postcssPlugin:"postcss-focus-within",Once:(e,{result:s})=>{e.warn(s,`${l.replaceWith} is not a valid replacement since it can't be applied to single elements.`)}}};creator.postcss=!0,module.exports=creator;
