import{TokenType as e,NumberType as n,isToken as t,tokenizer as u,stringify as i}from"@csstools/css-tokenizer";import{isTokenNode as r,TokenNode as a,isCommentNode as o,isWhitespaceNode as l,isSimpleBlockNode as s,isFunctionNode as c,FunctionNode as v,WhitespaceNode as m,parseCommaSeparatedListOfComponentValues as f}from"@csstools/css-parser-algorithms";function isCalculation(e){return"inputs"in e&&Array.isArray(e.inputs)&&"operation"in e}function solve(e){if(-1===e)return-1;const n=[];for(let t=0;t<e.inputs.length;t++){const u=e.inputs[t];if(r(u)){n.push(u);continue}const i=solve(u);if(-1===i)return-1;n.push(i)}return e.operation(n)}function unary(n){if(1!==n.length)return-1;const t=n[0].value;return t[0]===e.Number||t[0]===e.Dimension||t[0]===e.Percentage?n[0]:-1}function multiplication(t){if(2!==t.length)return-1;const u=t[0].value,i=t[1].value;if(u[0]===e.Number&&i[0]===e.Number){const t=u[4].value*i[4].value;return new a([e.Number,t.toString(),u[2],i[3],{value:t,type:u[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(u[0]===e.Percentage&&i[0]===e.Number){const n=u[4].value*i[4].value;return new a([e.Percentage,n.toString()+"%",u[2],i[3],{value:n}])}if(u[0]===e.Number&&i[0]===e.Percentage){const n=u[4].value*i[4].value;return new a([e.Percentage,n.toString()+"%",u[2],i[3],{value:n}])}if(u[0]===e.Dimension&&i[0]===e.Number){const t=u[4].value*i[4].value;return new a([e.Dimension,t.toString()+u[4].unit,u[2],i[3],{value:t,type:u[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:u[4].unit}])}if(u[0]===e.Number&&i[0]===e.Dimension){const t=u[4].value*i[4].value;return new a([e.Dimension,t.toString()+i[4].unit,u[2],i[3],{value:t,type:u[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:i[4].unit}])}return-1}function division(t){if(2!==t.length)return-1;const u=t[0].value,i=t[1].value;if(u[0]===e.Number&&i[0]===e.Number){const t=u[4].value/i[4].value;return new a([e.Number,t.toString(),u[2],i[3],{value:t,type:Number.isInteger(t)?n.Integer:n.Number}])}if(u[0]===e.Percentage&&i[0]===e.Number){const n=u[4].value/i[4].value;return new a([e.Percentage,n.toString()+"%",u[2],i[3],{value:n}])}if(u[0]===e.Dimension&&i[0]===e.Number){const t=u[4].value/i[4].value;return new a([e.Dimension,t.toString()+u[4].unit,u[2],i[3],{value:t,type:Number.isInteger(t)?n.Integer:n.Number,unit:u[4].unit}])}return-1}const p=new Map([["cm",e=>e],["mm",e=>10*e],["q",e=>40*e],["in",e=>e/2.54],["pc",e=>e/2.54*6],["pt",e=>e/2.54*72],["px",e=>e/2.54*96]]),g=new Map([["deg",e=>e],["grad",e=>e/.9],["rad",e=>e/180*Math.PI],["turn",e=>e/360]]),N=new Map([["deg",e=>.9*e],["grad",e=>e],["rad",e=>.9*e/180*Math.PI],["turn",e=>.9*e/360]]),b=new Map([["hz",e=>e],["khz",e=>e/1e3]]),w=new Map([["cm",e=>2.54*e],["mm",e=>25.4*e],["q",e=>25.4*e*4],["in",e=>e],["pc",e=>6*e],["pt",e=>72*e],["px",e=>96*e]]),h=new Map([["hz",e=>1e3*e],["khz",e=>e]]),d=new Map([["cm",e=>e/10],["mm",e=>e],["q",e=>4*e],["in",e=>e/25.4],["pc",e=>e/25.4*6],["pt",e=>e/25.4*72],["px",e=>e/25.4*96]]),I=new Map([["ms",e=>e],["s",e=>e/1e3]]),C=new Map([["cm",e=>e/6*2.54],["mm",e=>e/6*25.4],["q",e=>e/6*25.4*4],["in",e=>e/6],["pc",e=>e],["pt",e=>e/6*72],["px",e=>e/6*96]]),P=new Map([["cm",e=>e/72*2.54],["mm",e=>e/72*25.4],["q",e=>e/72*25.4*4],["in",e=>e/72],["pc",e=>e/72*6],["pt",e=>e],["px",e=>e/72*96]]),y=new Map([["cm",e=>e/96*2.54],["mm",e=>e/96*25.4],["q",e=>e/96*25.4*4],["in",e=>e/96],["pc",e=>e/96*6],["pt",e=>e/96*72],["px",e=>e]]),M=new Map([["cm",e=>e/4/10],["mm",e=>e/4],["q",e=>e],["in",e=>e/4/25.4],["pc",e=>e/4/25.4*6],["pt",e=>e/4/25.4*72],["px",e=>e/4/25.4*96]]),D=new Map([["deg",e=>180*e/Math.PI],["grad",e=>180*e/Math.PI/.9],["rad",e=>e],["turn",e=>180*e/Math.PI/360]]),F=new Map([["ms",e=>1e3*e],["s",e=>e]]),S=new Map([["deg",e=>360*e],["grad",e=>360*e/.9],["rad",e=>360*e/180*Math.PI],["turn",e=>e]]),k=new Map([["cm",p],["mm",d],["q",M],["in",w],["pc",C],["pt",P],["px",y],["ms",I],["s",F],["deg",g],["grad",N],["rad",D],["turn",S],["hz",b],["khz",h]]);function convertUnit(t,u){if(t[0]!==e.Dimension)return u;if(u[0]!==e.Dimension)return u;const i=t[4].unit.toLowerCase(),r=u[4].unit.toLowerCase();if(i===r)return u;const a=k.get(r);if(!a)return u;const o=a.get(i);if(!o)return u;const l=o(u[4].value);return[e.Dimension,l.toString()+t[4].unit,u[2],u[3],{value:l,unit:t[4].unit,type:Number.isInteger(l)?n.Integer:n.Number}]}function addition(t){if(2!==t.length)return-1;const u=t[0].value;let i=t[1].value;if(u[0]===e.Number&&i[0]===e.Number){const t=u[4].value+i[4].value;return new a([e.Number,t.toString(),u[2],i[3],{value:t,type:u[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(u[0]===e.Percentage&&i[0]===e.Percentage){const n=u[4].value+i[4].value;return new a([e.Percentage,n.toString()+"%",u[2],i[3],{value:n}])}if(u[0]===e.Dimension&&i[0]===e.Dimension&&(i=convertUnit(u,i),u[4].unit.toLowerCase()===i[4].unit.toLowerCase())){const t=u[4].value+i[4].value;return new a([e.Dimension,t.toString()+u[4].unit,u[2],i[3],{value:t,type:u[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:u[4].unit}])}return-1}function subtraction(t){if(2!==t.length)return-1;const u=t[0].value;let i=t[1].value;if(u[0]===e.Number&&i[0]===e.Number){const t=u[4].value-i[4].value;return new a([e.Number,t.toString(),u[2],i[3],{value:t,type:u[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(u[0]===e.Percentage&&i[0]===e.Percentage){const n=u[4].value-i[4].value;return new a([e.Percentage,n.toString()+"%",u[2],i[3],{value:n}])}if(u[0]===e.Dimension&&i[0]===e.Dimension&&(i=convertUnit(u,i),u[4].unit.toLowerCase()===i[4].unit.toLowerCase())){const t=u[4].value-i[4].value;return new a([e.Dimension,t.toString()+u[4].unit,u[2],i[3],{value:t,type:u[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:u[4].unit}])}return-1}function resultToCalculation(t,u,i){const r=t.tokens();return u[0]===e.Dimension?{inputs:[new a([e.Dimension,i.toString()+u[4].unit,r[0][2],r[r.length-1][3],{value:i,type:Number.isInteger(i)?n.Integer:n.Number,unit:u[4].unit}])],operation:unary}:u[0]===e.Percentage?{inputs:[new a([e.Percentage,i.toString()+"%",r[0][2],r[r.length-1][3],{value:i}])],operation:unary}:{inputs:[new a([e.Number,i.toString(),r[0][2],r[r.length-1][3],{value:i,type:Number.isInteger(i)?n.Integer:n.Number}])],operation:unary}}function solveMin(n,t){const u=t[0];if(!u||!r(u))return-1;if(1!==new Set(t.map((e=>e.type))).size)return-1;const i=t[0].value;if(i[0]!==e.Dimension&&i[0]!==e.Number&&i[0]!==e.Percentage)return-1;if(1!==new Set(t.map((e=>e.value[0]))).size)return-1;const a=t.map((e=>convertUnit(i,e.value)));if(1!==new Set(a.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const o=a.map((e=>e[4].value)),l=Math.min(...o);return resultToCalculation(n,i,l)}function solveMax(n,t){const u=t[0];if(!u||!r(u))return-1;if(1!==new Set(t.map((e=>e.type))).size)return-1;const i=t[0].value;if(i[0]!==e.Dimension&&i[0]!==e.Number&&i[0]!==e.Percentage)return-1;if(1!==new Set(t.map((e=>e.value[0]))).size)return-1;const a=t.map((e=>convertUnit(i,e.value)));if(1!==new Set(a.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const o=a.map((e=>e[4].value)),l=Math.max(...o);return resultToCalculation(n,i,l)}function solveClamp(n,t,u,i){if(!r(t)||!r(u)||!r(i))return-1;const a=t.value,o=convertUnit(a,u.value),l=convertUnit(a,i.value);if(a[0]!==e.Dimension&&a[0]!==e.Number&&a[0]!==e.Percentage)return-1;if(a[0]!==o[0])return-1;if(a[0]!==l[0])return-1;if(a[0]===e.Dimension){if(a[4].unit.toLowerCase()!==o[4].unit.toLowerCase())return-1;if(a[4].unit.toLowerCase()!==l[4].unit.toLowerCase())return-1}return resultToCalculation(n,a,Math.max(a[4].value,Math.min(o[4].value,l[4].value)))}function resolveGlobalsAndConstants(t,u){for(let i=0;i<t.length;i++){const o=t[i];if(!r(o))continue;const l=o.value;if(l[0]!==e.Ident)continue;const s=l[4].value.toLowerCase();switch(s){case"e":t.splice(i,1,new a([e.Number,Math.E.toString(),l[2],l[3],{value:Math.E,type:n.Number}]));break;case"pi":t.splice(i,1,new a([e.Number,Math.PI.toString(),l[2],l[3],{value:Math.PI,type:n.Number}]));break;case"infinity":t.splice(i,1,new a([e.Number,"infinity",l[2],l[3],{value:1/0,type:n.Number}]));break;case"-infinity":t.splice(i,1,new a([e.Number,"-infinity",l[2],l[3],{value:-1/0,type:n.Number}]));break;case"nan":t.splice(i,1,new a([e.Number,"NaN",l[2],l[3],{value:Number.NaN,type:n.Number}]));break;default:if(u.has(s)){const e=u.get(s);t.splice(i,1,new a(e))}}}return t}function solveRound(n,t,u,i){const r=u.value;if(r[0]!==e.Dimension&&r[0]!==e.Number&&r[0]!==e.Percentage)return-1;const a=convertUnit(r,i.value);if(r[0]!==a[0])return-1;if(r[0]===e.Dimension&&r[4].unit!==a[4].unit)return-1;let o;if(0===a[4].value)o=Number.NaN;else if(Number.isFinite(r[4].value)||Number.isFinite(a[4].value))if(!Number.isFinite(r[4].value)&&Number.isFinite(a[4].value))o=r[4].value;else if(Number.isFinite(r[4].value)&&!Number.isFinite(a[4].value))switch(t){case"down":o=r[4].value<0?-1/0:Object.is(-0,0*r[4].value)?-0:0;break;case"up":o=r[4].value>0?1/0:Object.is(0,0*r[4].value)?0:-0;break;default:o=Object.is(0,0*r[4].value)?0:-0}else if(Number.isFinite(a[4].value))switch(t){case"down":o=Math.floor(r[4].value/a[4].value)*a[4].value;break;case"up":o=Math.ceil(r[4].value/a[4].value)*a[4].value;break;case"to-zero":o=Math.trunc(r[4].value/a[4].value)*a[4].value;break;default:{let e=Math.floor(r[4].value/a[4].value)*a[4].value,n=Math.ceil(r[4].value/a[4].value)*a[4].value;if(e>n){const t=e;e=n,n=t}const t=Math.abs(r[4].value-e),u=Math.abs(r[4].value-n);t===u&&(o=n),o=t<u?e:n;break}}else o=r[4].value;else o=Number.NaN;return resultToCalculation(n,r,o)}function solveMod(n,t,u){const i=t.value;if(i[0]!==e.Dimension&&i[0]!==e.Number&&i[0]!==e.Percentage)return-1;const r=convertUnit(i,u.value);if(i[0]!==r[0])return-1;if(i[0]===e.Dimension&&i[4].unit!==r[4].unit)return-1;let a;return a=0===r[4].value?Number.NaN:Number.isFinite(i[4].value)&&(Number.isFinite(r[4].value)||(r[4].value!==Number.POSITIVE_INFINITY||i[4].value!==Number.NEGATIVE_INFINITY&&!Object.is(0*i[4].value,-0))&&(r[4].value!==Number.NEGATIVE_INFINITY||i[4].value!==Number.POSITIVE_INFINITY&&!Object.is(0*i[4].value,0)))?Number.isFinite(r[4].value)?(i[4].value%r[4].value+r[4].value)%r[4].value:i[4].value:Number.NaN,resultToCalculation(n,i,a)}function solveRem(n,t,u){const i=t.value;if(i[0]!==e.Dimension&&i[0]!==e.Number&&i[0]!==e.Percentage)return-1;const r=convertUnit(i,u.value);if(i[0]!==r[0])return-1;if(i[0]===e.Dimension&&i[4].unit!==r[4].unit)return-1;let a;return a=0===r[4].value?Number.NaN:Number.isFinite(i[4].value)?Number.isFinite(r[4].value)?i[4].value%r[4].value:i[4].value:Number.NaN,resultToCalculation(n,i,a)}function solveAbs(n,t){const u=t.value;if(u[0]!==e.Dimension&&u[0]!==e.Number)return-1;return resultToCalculation(n,u,Math.abs(u[4].value))}function solveSign(t,u){const i=u.value;if(i[0]!==e.Dimension&&i[0]!==e.Number)return-1;const r=Math.sign(i[4].value),o=t.tokens();return{inputs:[new a([e.Number,r.toString(),o[0][2],o[o.length-1][3],{value:r,type:Number.isInteger(r)?n.Integer:n.Number}])],operation:unary}}const T=new Map([["abs",abs],["calc",calc],["clamp",clamp],["max",max],["min",min],["mod",mod],["rem",rem],["round",round],["sign",sign]]);function calc(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t);if(1===u.length&&r(u[0]))return{inputs:[u[0]],operation:unary};let i=0;for(;i<u.length;){const n=u[i];if(s(n)&&n.startToken[0]===e.OpenParen){const e=calc(n,t);if(-1===e)return-1;u.splice(i,1,e)}else if(c(n)){const e=T.get(n.getName().toLowerCase());if(!e)return-1;{const r=e(n,t);if(-1===r)return-1;u.splice(i,1,r)}}else i++}if(i=0,1===u.length&&isCalculation(u[0]))return u[0];for(;i<u.length;){const n=u[i];if(!n||!r(n)&&!isCalculation(n)){i++;continue}const t=u[i+1];if(!t||!r(t)){i++;continue}const a=t.value;if(a[0]!==e.Delim||"*"!==a[4].value&&"/"!==a[4].value){i++;continue}const o=u[i+2];if(!o||!r(o)&&!isCalculation(o))return-1;"*"!==a[4].value?"/"!==a[4].value?i++:u.splice(i,3,{inputs:[n,o],operation:division}):u.splice(i,3,{inputs:[n,o],operation:multiplication})}if(i=0,1===u.length&&isCalculation(u[0]))return u[0];for(;i<u.length;){const n=u[i];if(!n||!r(n)&&!isCalculation(n)){i++;continue}const t=u[i+1];if(!t||!r(t)){i++;continue}const a=t.value;if(a[0]!==e.Delim||"+"!==a[4].value&&"-"!==a[4].value){i++;continue}const o=u[i+2];if(!o||!r(o)&&!isCalculation(o))return-1;"+"!==a[4].value?"-"!==a[4].value?i++:u.splice(i,3,{inputs:[n,o],operation:subtraction}):u.splice(i,3,{inputs:[n,o],operation:addition})}return 1===u.length&&isCalculation(u[0])?u[0]:-1}function clamp(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),i=[],a=[],s=[];{let n=i;for(let t=0;t<u.length;t++){const o=u[t];if(r(o)&&o.value[0]===e.Comma){if(n===s)return-1;if(n===a){n=s;continue}if(n===i){n=a;continue}return-1}n.push(o)}}const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));if(-1===c)return-1;const m=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));if(-1===m)return-1;const f=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],s),t));return-1===f?-1:solveClamp(n,c,m,f)}function max(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),i=[];{const n=[];let a=[];for(let t=0;t<u.length;t++){const i=u[t];r(i)&&i.value[0]===e.Comma?(n.push(a),a=[]):a.push(i)}n.push(a);for(let u=0;u<n.length;u++){if(0===n[u].length)return-1;const r=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[u]),t));if(-1===r)return-1;i.push(r)}}return solveMax(n,i)}function min(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),i=[];{const n=[];let a=[];for(let t=0;t<u.length;t++){const i=u[t];r(i)&&i.value[0]===e.Comma?(n.push(a),a=[]):a.push(i)}n.push(a);for(let u=0;u<n.length;u++){if(0===n[u].length)return-1;const r=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[u]),t));if(-1===r)return-1;i.push(r)}}return solveMin(n,i)}const x=new Set(["nearest","up","down","to-zero"]);function round(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t);let i="";const a=[],s=[];{let n=a;for(let t=0;t<u.length;t++){const o=u[t];if(!i&&0===a.length&&0===s.length&&r(o)&&o.value[0]===e.Ident){const e=o.value;if(x.has(e[4].value.toLowerCase())){i=e[4].value.toLowerCase();continue}}if(r(o)&&o.value[0]===e.Comma){if(n===s)return-1;if(n===a&&i&&0===a.length)continue;if(n===a){n=s;continue}return-1}n.push(o)}}const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));if(-1===c)return-1;const m=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],s),t));return-1===m?-1:(i||(i="nearest"),solveRound(n,i,c,m))}function mod(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),i=[],a=[];{let n=i;for(let t=0;t<u.length;t++){const o=u[t];if(r(o)&&o.value[0]===e.Comma){if(n===a)return-1;if(n===i){n=a;continue}return-1}n.push(o)}}const s=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));if(-1===s)return-1;const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===c?-1:solveMod(n,s,c)}function rem(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),i=[],a=[];{let n=i;for(let t=0;t<u.length;t++){const o=u[t];if(r(o)&&o.value[0]===e.Comma){if(n===a)return-1;if(n===i){n=a;continue}return-1}n.push(o)}}const s=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));if(-1===s)return-1;const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===c?-1:solveRem(n,s,c)}function abs(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),i=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],u),t));return-1===i?-1:solveAbs(n,i)}function sign(n,t){const u=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),i=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],u),t));return-1===i?-1:solveSign(n,i)}function tokenizeGlobals(n){const i=new Map;if(!n)return i;for(const[r,a]of n)if(t(a))i.set(r,a);else if("string"!=typeof a);else{const n=u({css:a}),t=n.nextToken();if(n.nextToken(),!n.endOfFile())continue;if(t[0]!==e.Number&&t[0]!==e.Dimension&&t[0]!==e.Percentage)continue;i.set(r,t)}return i}function patchNaN(t){if(-1===t)return-1;if(c(t))return t;const u=t.value;return u[0]!==e.Number&&u[0]!==e.Percentage&&u[0]!==e.Dimension?t:Number.isNaN(u[4].value)?u[0]===e.Number?new v([e.Function,"calc(",u[2],u[3],{value:"calc"}],[e.CloseParen,")",u[2],u[3],void 0],[new a([e.Ident,"NaN",u[2],u[3],{value:"NaN"}])]):u[0]===e.Dimension?new v([e.Function,"calc(",u[2],u[3],{value:"calc"}],[e.CloseParen,")",u[2],u[3],void 0],[new a([e.Ident,"NaN",u[2],u[3],{value:"NaN"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Delim,"*",u[2],u[3],{value:"*"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Dimension,"1"+u[4].unit,u[2],u[3],{value:1,type:n.Integer,unit:u[4].unit}])]):u[0]===e.Percentage?new v([e.Function,"calc(",u[2],u[3],{value:"calc"}],[e.CloseParen,")",u[2],u[3],void 0],[new a([e.Ident,"NaN",u[2],u[3],{value:"NaN"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Delim,"*",u[2],u[3],{value:"*"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Percentage,"1%",u[2],u[3],{value:1}])]):-1:t}function patchInfinity(t){if(-1===t)return-1;if(c(t))return t;const u=t.value;if(u[0]!==e.Number&&u[0]!==e.Percentage&&u[0]!==e.Dimension)return t;if(Number.isFinite(u[4].value))return t;let i="";return Number.NEGATIVE_INFINITY===u[4].value&&(i="-"),u[0]===e.Number?new v([e.Function,"calc(",u[2],u[3],{value:"calc"}],[e.CloseParen,")",u[2],u[3],void 0],[new a([e.Ident,i+"infinity",u[2],u[3],{value:i+"infinity"}])]):u[0]===e.Dimension?new v([e.Function,"calc(",u[2],u[3],{value:"calc"}],[e.CloseParen,")",u[2],u[3],void 0],[new a([e.Ident,i+"infinity",u[2],u[3],{value:i+"infinity"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Delim,"*",u[2],u[3],{value:"*"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Dimension,"1"+u[4].unit,u[2],u[3],{value:1,type:n.Integer,unit:u[4].unit}])]):u[0]===e.Percentage?new v([e.Function,"calc(",u[2],u[3],{value:"calc"}],[e.CloseParen,")",u[2],u[3],void 0],[new a([e.Ident,i+"infinity",u[2],u[3],{value:i+"infinity"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Delim,"*",u[2],u[3],{value:"*"}]),new m([[e.Whitespace," ",u[2],u[3],void 0]]),new a([e.Percentage,"1%",u[2],u[3],{value:1}])]):-1}function patchMinusZero(n){if(-1===n)return-1;if(c(n))return n;const t=n.value;return t[0]!==e.Number&&t[0]!==e.Percentage&&t[0]!==e.Dimension?n:Object.is(-0,t[4].value)?("-0"===t[1]||(t[1]="-0"),n):n}function patchCalcResult(e){return patchMinusZero(patchInfinity(patchNaN(e)))}const L=new Map([["abs",abs],["calc",calc],["clamp",clamp],["max",max],["min",min],["mod",mod],["rem",rem],["round",round],["sign",sign]]);function convert(e,n){const t=tokenizeGlobals(n),r=u({css:e}),a=[];for(;!r.endOfFile();)a.push(r.nextToken());a.push(r.nextToken());const o=f(a,{});for(let e=0;e<o.length;e++){const n=o[e];for(let e=0;e<n.length;e++){const u=n[e];if(c(u)){const i=L.get(u.getName().toLowerCase());if(i){const r=patchCalcResult(solve(i(u,t)));if(-1!==r){n.splice(e,1,r);continue}}}(s(u)||c(u))&&u.walk(((e,n)=>{if("number"!=typeof n)return;const u=e.node;if(c(u)){const i=L.get(u.getName().toLowerCase());if(!i)return;const r=patchCalcResult(solve(i(u,t)));if(-1!==r)return void e.parent.value.splice(n,1,r)}}))}}return o.map((e=>e.map((e=>i(...e.tokens()))).join(""))).join(",")}export{convert};
