import{TokenType as e,NumberType as n,isToken as t,tokenizer as a,stringify as u}from"@csstools/css-tokenizer";import{isTokenNode as r,TokenNode as i,isCommentNode as o,isWhitespaceNode as l,isSimpleBlockNode as s,isFunctionNode as c,FunctionNode as v,WhitespaceNode as m,parseCommaSeparatedListOfComponentValues as f}from"@csstools/css-parser-algorithms";function isCalculation(e){return"inputs"in e&&Array.isArray(e.inputs)&&"operation"in e}function solve(e){if(-1===e)return-1;const n=[];for(let t=0;t<e.inputs.length;t++){const a=e.inputs[t];if(r(a)){n.push(a);continue}const u=solve(a);if(-1===u)return-1;n.push(u)}return e.operation(n)}function unary(n){if(1!==n.length)return-1;const t=n[0].value;return t[0]===e.Number||t[0]===e.Dimension||t[0]===e.Percentage?n[0]:-1}function multiplication(t){if(2!==t.length)return-1;const a=t[0].value,u=t[1].value;if(a[0]===e.Number&&u[0]===e.Number){const t=a[4].value*u[4].value;return new i([e.Number,t.toString(),a[2],u[3],{value:t,type:a[4].type===n.Integer&&u[4].type===n.Integer?n.Integer:n.Number}])}if(a[0]===e.Percentage&&u[0]===e.Number){const n=a[4].value*u[4].value;return new i([e.Percentage,n.toString()+"%",a[2],u[3],{value:n}])}if(a[0]===e.Number&&u[0]===e.Percentage){const n=a[4].value*u[4].value;return new i([e.Percentage,n.toString()+"%",a[2],u[3],{value:n}])}if(a[0]===e.Dimension&&u[0]===e.Number){const t=a[4].value*u[4].value;return new i([e.Dimension,t.toString()+a[4].unit,a[2],u[3],{value:t,type:a[4].type===n.Integer&&u[4].type===n.Integer?n.Integer:n.Number,unit:a[4].unit}])}if(a[0]===e.Number&&u[0]===e.Dimension){const t=a[4].value*u[4].value;return new i([e.Dimension,t.toString()+u[4].unit,a[2],u[3],{value:t,type:a[4].type===n.Integer&&u[4].type===n.Integer?n.Integer:n.Number,unit:u[4].unit}])}return-1}function division(t){if(2!==t.length)return-1;const a=t[0].value,u=t[1].value;if(a[0]===e.Number&&u[0]===e.Number){const t=a[4].value/u[4].value;return new i([e.Number,t.toString(),a[2],u[3],{value:t,type:Number.isInteger(t)?n.Integer:n.Number}])}if(a[0]===e.Percentage&&u[0]===e.Number){const n=a[4].value/u[4].value;return new i([e.Percentage,n.toString()+"%",a[2],u[3],{value:n}])}if(a[0]===e.Dimension&&u[0]===e.Number){const t=a[4].value/u[4].value;return new i([e.Dimension,t.toString()+a[4].unit,a[2],u[3],{value:t,type:Number.isInteger(t)?n.Integer:n.Number,unit:a[4].unit}])}return-1}const p={cm:"px",in:"px",mm:"px",pc:"px",pt:"px",px:"px",q:"px",deg:"deg",grad:"deg",rad:"deg",turn:"deg",ms:"s",s:"s",hz:"hz",khz:"khz"},g=new Map([["cm",e=>e],["mm",e=>10*e],["q",e=>40*e],["in",e=>e/2.54],["pc",e=>e/2.54*6],["pt",e=>e/2.54*72],["px",e=>e/2.54*96]]),b=new Map([["deg",e=>e],["grad",e=>e/.9],["rad",e=>e/180*Math.PI],["turn",e=>e/360]]),N=new Map([["deg",e=>.9*e],["grad",e=>e],["rad",e=>.9*e/180*Math.PI],["turn",e=>.9*e/360]]),d=new Map([["hz",e=>e],["khz",e=>e/1e3]]),w=new Map([["cm",e=>2.54*e],["mm",e=>25.4*e],["q",e=>25.4*e*4],["in",e=>e],["pc",e=>6*e],["pt",e=>72*e],["px",e=>96*e]]),h=new Map([["hz",e=>1e3*e],["khz",e=>e]]),C=new Map([["cm",e=>e/10],["mm",e=>e],["q",e=>4*e],["in",e=>e/25.4],["pc",e=>e/25.4*6],["pt",e=>e/25.4*72],["px",e=>e/25.4*96]]),I=new Map([["ms",e=>e],["s",e=>e/1e3]]),y=new Map([["cm",e=>e/6*2.54],["mm",e=>e/6*25.4],["q",e=>e/6*25.4*4],["in",e=>e/6],["pc",e=>e],["pt",e=>e/6*72],["px",e=>e/6*96]]),P=new Map([["cm",e=>e/72*2.54],["mm",e=>e/72*25.4],["q",e=>e/72*25.4*4],["in",e=>e/72],["pc",e=>e/72*6],["pt",e=>e],["px",e=>e/72*96]]),D=new Map([["cm",e=>e/96*2.54],["mm",e=>e/96*25.4],["q",e=>e/96*25.4*4],["in",e=>e/96],["pc",e=>e/96*6],["pt",e=>e/96*72],["px",e=>e]]),M=new Map([["cm",e=>e/4/10],["mm",e=>e/4],["q",e=>e],["in",e=>e/4/25.4],["pc",e=>e/4/25.4*6],["pt",e=>e/4/25.4*72],["px",e=>e/4/25.4*96]]),F=new Map([["deg",e=>180*e/Math.PI],["grad",e=>180*e/Math.PI/.9],["rad",e=>e],["turn",e=>180*e/Math.PI/360]]),k=new Map([["ms",e=>1e3*e],["s",e=>e]]),S=new Map([["deg",e=>360*e],["grad",e=>360*e/.9],["rad",e=>360*e/180*Math.PI],["turn",e=>e]]),A=new Map([["cm",g],["mm",C],["q",M],["in",w],["pc",y],["pt",P],["px",D],["ms",I],["s",k],["deg",b],["grad",N],["rad",F],["turn",S],["hz",d],["khz",h]]);function convertUnit(t,a){if(t[0]!==e.Dimension)return a;if(a[0]!==e.Dimension)return a;const u=t[4].unit.toLowerCase(),r=a[4].unit.toLowerCase();if(u===r)return a;const i=A.get(r);if(!i)return a;const o=i.get(u);if(!o)return a;const l=o(a[4].value);return[e.Dimension,l.toString()+t[4].unit,a[2],a[3],{value:l,unit:t[4].unit,type:Number.isInteger(l)?n.Integer:n.Number}]}function toCanonicalUnit(t){if(t[0]!==e.Dimension)return t;const a=t[4].unit.toLowerCase(),u=p[a];if(a===u)return t;const r=A.get(a);if(!r)return t;const i=r.get(u);if(!i)return t;const o=i(t[4].value);return[e.Dimension,o.toString()+u,t[2],t[3],{value:o,unit:u,type:Number.isInteger(o)?n.Integer:n.Number}]}function addition(t){if(2!==t.length)return-1;const a=t[0].value;let u=t[1].value;if(a[0]===e.Number&&u[0]===e.Number){const t=a[4].value+u[4].value;return new i([e.Number,t.toString(),a[2],u[3],{value:t,type:a[4].type===n.Integer&&u[4].type===n.Integer?n.Integer:n.Number}])}if(a[0]===e.Percentage&&u[0]===e.Percentage){const n=a[4].value+u[4].value;return new i([e.Percentage,n.toString()+"%",a[2],u[3],{value:n}])}if(a[0]===e.Dimension&&u[0]===e.Dimension&&(u=convertUnit(a,u),a[4].unit.toLowerCase()===u[4].unit.toLowerCase())){const t=a[4].value+u[4].value;return new i([e.Dimension,t.toString()+a[4].unit,a[2],u[3],{value:t,type:a[4].type===n.Integer&&u[4].type===n.Integer?n.Integer:n.Number,unit:a[4].unit}])}return-1}function subtraction(t){if(2!==t.length)return-1;const a=t[0].value;let u=t[1].value;if(a[0]===e.Number&&u[0]===e.Number){const t=a[4].value-u[4].value;return new i([e.Number,t.toString(),a[2],u[3],{value:t,type:a[4].type===n.Integer&&u[4].type===n.Integer?n.Integer:n.Number}])}if(a[0]===e.Percentage&&u[0]===e.Percentage){const n=a[4].value-u[4].value;return new i([e.Percentage,n.toString()+"%",a[2],u[3],{value:n}])}if(a[0]===e.Dimension&&u[0]===e.Dimension&&(u=convertUnit(a,u),a[4].unit.toLowerCase()===u[4].unit.toLowerCase())){const t=a[4].value-u[4].value;return new i([e.Dimension,t.toString()+a[4].unit,a[2],u[3],{value:t,type:a[4].type===n.Integer&&u[4].type===n.Integer?n.Integer:n.Number,unit:a[4].unit}])}return-1}function resultToCalculation(t,a,u){const r=t.tokens();return a[0]===e.Dimension?{inputs:[new i([e.Dimension,u.toString()+a[4].unit,r[0][2],r[r.length-1][3],{value:u,type:Number.isInteger(u)?n.Integer:n.Number,unit:a[4].unit}])],operation:unary}:a[0]===e.Percentage?{inputs:[new i([e.Percentage,u.toString()+"%",r[0][2],r[r.length-1][3],{value:u}])],operation:unary}:{inputs:[new i([e.Number,u.toString(),r[0][2],r[r.length-1][3],{value:u,type:Number.isInteger(u)?n.Integer:n.Number}])],operation:unary}}function solveMin(n,t){const a=t[0];if(!a||!r(a))return-1;if(1!==new Set(t.map((e=>e.type))).size)return-1;const u=t[0].value;if(u[0]!==e.Dimension&&u[0]!==e.Number&&u[0]!==e.Percentage)return-1;if(1!==new Set(t.map((e=>e.value[0]))).size)return-1;const i=t.map((e=>convertUnit(u,e.value)));if(1!==new Set(i.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const o=i.map((e=>e[4].value)),l=Math.min(...o);return resultToCalculation(n,u,l)}function solveMax(n,t){const a=t[0];if(!a||!r(a))return-1;if(1!==new Set(t.map((e=>e.type))).size)return-1;const u=t[0].value;if(u[0]!==e.Dimension&&u[0]!==e.Number&&u[0]!==e.Percentage)return-1;if(1!==new Set(t.map((e=>e.value[0]))).size)return-1;const i=t.map((e=>convertUnit(u,e.value)));if(1!==new Set(i.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const o=i.map((e=>e[4].value)),l=Math.max(...o);return resultToCalculation(n,u,l)}function solveClamp(n,t,a,u){if(!r(t)||!r(a)||!r(u))return-1;const i=t.value,o=convertUnit(i,a.value),l=convertUnit(i,u.value);if(i[0]!==e.Dimension&&i[0]!==e.Number&&i[0]!==e.Percentage)return-1;if(i[0]!==o[0])return-1;if(i[0]!==l[0])return-1;if(i[0]===e.Dimension){if(i[4].unit.toLowerCase()!==o[4].unit.toLowerCase())return-1;if(i[4].unit.toLowerCase()!==l[4].unit.toLowerCase())return-1}return resultToCalculation(n,i,Math.max(i[4].value,Math.min(o[4].value,l[4].value)))}function resolveGlobalsAndConstants(t,a){for(let u=0;u<t.length;u++){const o=t[u];if(!r(o))continue;const l=o.value;if(l[0]!==e.Ident)continue;const s=l[4].value.toLowerCase();switch(s){case"e":t.splice(u,1,new i([e.Number,Math.E.toString(),l[2],l[3],{value:Math.E,type:n.Number}]));break;case"pi":t.splice(u,1,new i([e.Number,Math.PI.toString(),l[2],l[3],{value:Math.PI,type:n.Number}]));break;case"infinity":t.splice(u,1,new i([e.Number,"infinity",l[2],l[3],{value:1/0,type:n.Number}]));break;case"-infinity":t.splice(u,1,new i([e.Number,"-infinity",l[2],l[3],{value:-1/0,type:n.Number}]));break;case"nan":t.splice(u,1,new i([e.Number,"NaN",l[2],l[3],{value:Number.NaN,type:n.Number}]));break;default:if(a.has(s)){const e=a.get(s);t.splice(u,1,new i(e))}}}return t}function solveRound(n,t,a,u){const r=a.value;if(r[0]!==e.Dimension&&r[0]!==e.Number&&r[0]!==e.Percentage)return-1;const i=convertUnit(r,u.value);if(r[0]!==i[0])return-1;if(r[0]===e.Dimension&&r[4].unit!==i[4].unit)return-1;let o;if(0===i[4].value)o=Number.NaN;else if(Number.isFinite(r[4].value)||Number.isFinite(i[4].value))if(!Number.isFinite(r[4].value)&&Number.isFinite(i[4].value))o=r[4].value;else if(Number.isFinite(r[4].value)&&!Number.isFinite(i[4].value))switch(t){case"down":o=r[4].value<0?-1/0:Object.is(-0,0*r[4].value)?-0:0;break;case"up":o=r[4].value>0?1/0:Object.is(0,0*r[4].value)?0:-0;break;default:o=Object.is(0,0*r[4].value)?0:-0}else if(Number.isFinite(i[4].value))switch(t){case"down":o=Math.floor(r[4].value/i[4].value)*i[4].value;break;case"up":o=Math.ceil(r[4].value/i[4].value)*i[4].value;break;case"to-zero":o=Math.trunc(r[4].value/i[4].value)*i[4].value;break;default:{let e=Math.floor(r[4].value/i[4].value)*i[4].value,n=Math.ceil(r[4].value/i[4].value)*i[4].value;if(e>n){const t=e;e=n,n=t}const t=Math.abs(r[4].value-e),a=Math.abs(r[4].value-n);t===a&&(o=n),o=t<a?e:n;break}}else o=r[4].value;else o=Number.NaN;return resultToCalculation(n,r,o)}function solveMod(n,t,a){const u=t.value;if(u[0]!==e.Dimension&&u[0]!==e.Number&&u[0]!==e.Percentage)return-1;const r=convertUnit(u,a.value);if(u[0]!==r[0])return-1;if(u[0]===e.Dimension&&u[4].unit!==r[4].unit)return-1;let i;return i=0===r[4].value?Number.NaN:Number.isFinite(u[4].value)&&(Number.isFinite(r[4].value)||(r[4].value!==Number.POSITIVE_INFINITY||u[4].value!==Number.NEGATIVE_INFINITY&&!Object.is(0*u[4].value,-0))&&(r[4].value!==Number.NEGATIVE_INFINITY||u[4].value!==Number.POSITIVE_INFINITY&&!Object.is(0*u[4].value,0)))?Number.isFinite(r[4].value)?(u[4].value%r[4].value+r[4].value)%r[4].value:u[4].value:Number.NaN,resultToCalculation(n,u,i)}function solveRem(n,t,a){const u=t.value;if(u[0]!==e.Dimension&&u[0]!==e.Number&&u[0]!==e.Percentage)return-1;const r=convertUnit(u,a.value);if(u[0]!==r[0])return-1;if(u[0]===e.Dimension&&u[4].unit!==r[4].unit)return-1;let i;return i=0===r[4].value?Number.NaN:Number.isFinite(u[4].value)?Number.isFinite(r[4].value)?u[4].value%r[4].value:u[4].value:Number.NaN,resultToCalculation(n,u,i)}function solveAbs(n,t){const a=t.value;if(a[0]!==e.Dimension&&a[0]!==e.Number)return-1;return resultToCalculation(n,a,Math.abs(a[4].value))}function solveSign(t,a){const u=a.value;if(u[0]!==e.Dimension&&u[0]!==e.Number)return-1;const r=Math.sign(u[4].value),o=t.tokens();return{inputs:[new i([e.Number,r.toString(),o[0][2],o[o.length-1][3],{value:r,type:Number.isInteger(r)?n.Integer:n.Number}])],operation:unary}}function solveSin(t,a){const u=a.value;if(u[0]!==e.Dimension&&u[0]!==e.Number)return-1;if(u[0]===e.Dimension)switch(u[4].unit.toLowerCase()){case"rad":break;case"deg":u[4].value=b.get("rad")(u[4].value);break;case"grad":u[4].value=N.get("rad")(u[4].value);break;case"turn":u[4].value=S.get("rad")(u[4].value);break;default:return-1}const r=Math.sin(u[4].value),o=t.tokens();return{inputs:[new i([e.Number,r.toString(),o[0][2],o[o.length-1][3],{value:r,type:Number.isInteger(r)?n.Integer:n.Number}])],operation:unary}}function solveCos(t,a){const u=a.value;if(u[0]!==e.Dimension&&u[0]!==e.Number)return-1;if(u[0]===e.Dimension)switch(u[4].unit.toLowerCase()){case"rad":break;case"deg":u[4].value=b.get("rad")(u[4].value);break;case"grad":u[4].value=N.get("rad")(u[4].value);break;case"turn":u[4].value=S.get("rad")(u[4].value);break;default:return-1}const r=Math.cos(u[4].value),o=t.tokens();return{inputs:[new i([e.Number,r.toString(),o[0][2],o[o.length-1][3],{value:r,type:Number.isInteger(r)?n.Integer:n.Number}])],operation:unary}}function solveTan(t,a){const u=a.value;if(u[0]!==e.Dimension&&u[0]!==e.Number)return-1;const r=u[4].value;let o=0;if(u[0]===e.Dimension)switch(u[4].unit.toLowerCase()){case"rad":o=F.get("deg")(r);break;case"deg":o=r,u[4].value=b.get("rad")(r);break;case"grad":o=N.get("deg")(r),u[4].value=N.get("rad")(r);break;case"turn":o=S.get("deg")(r),u[4].value=S.get("rad")(r);break;default:return-1}const l=o/90;let s;s=o%90==0&&l%2!=0?l>0?1/0:-1/0:Math.tan(u[4].value);const c=t.tokens();return{inputs:[new i([e.Number,s.toString(),c[0][2],c[c.length-1][3],{value:s,type:Number.isInteger(s)?n.Integer:n.Number}])],operation:unary}}function solveASin(t,a){const u=a.value;if(u[0]!==e.Number)return-1;const r=Math.asin(u[4].value),o=t.tokens();return{inputs:[new i([e.Dimension,r.toString()+"rad",o[0][2],o[o.length-1][3],{value:r,type:Number.isInteger(r)?n.Integer:n.Number,unit:"rad"}])],operation:unary}}function solveACos(t,a){const u=a.value;if(u[0]!==e.Number)return-1;const r=Math.acos(u[4].value),o=t.tokens();return{inputs:[new i([e.Dimension,r.toString()+"rad",o[0][2],o[o.length-1][3],{value:r,type:Number.isInteger(r)?n.Integer:n.Number,unit:"rad"}])],operation:unary}}function solveATan(t,a){const u=a.value;if(u[0]!==e.Number)return-1;const r=Math.atan(u[4].value),o=t.tokens();return{inputs:[new i([e.Dimension,r.toString()+"rad",o[0][2],o[o.length-1][3],{value:r,type:Number.isInteger(r)?n.Integer:n.Number,unit:"rad"}])],operation:unary}}function solveATan2(t,a,u){const r=a.value;if(r[0]!==e.Dimension&&r[0]!==e.Number&&r[0]!==e.Percentage)return-1;const o=convertUnit(r,u.value);if(r[0]!==o[0])return-1;if(r[0]===e.Dimension&&r[4].unit!==o[4].unit)return-1;const l=Math.atan2(r[4].value,o[4].value),s=t.tokens();return{inputs:[new i([e.Dimension,l.toString()+"rad",s[0][2],s[s.length-1][3],{value:l,type:Number.isInteger(l)?n.Integer:n.Number,unit:"rad"}])],operation:unary}}const x=new Map([["abs",abs],["acos",acos],["asin",asin],["atan",atan],["atan2",atan2],["calc",calc],["clamp",clamp],["cos",cos],["max",max],["min",min],["mod",mod],["rem",rem],["round",round],["sign",sign],["sin",sin],["tan",tan]]);function calc(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t);if(1===a.length&&r(a[0]))return{inputs:[a[0]],operation:unary};let u=0;for(;u<a.length;){const n=a[u];if(s(n)&&n.startToken[0]===e.OpenParen){const e=calc(n,t);if(-1===e)return-1;a.splice(u,1,e)}else if(c(n)){const e=x.get(n.getName().toLowerCase());if(!e)return-1;{const r=e(n,t);if(-1===r)return-1;a.splice(u,1,r)}}else u++}if(u=0,1===a.length&&isCalculation(a[0]))return a[0];for(;u<a.length;){const n=a[u];if(!n||!r(n)&&!isCalculation(n)){u++;continue}const t=a[u+1];if(!t||!r(t)){u++;continue}const i=t.value;if(i[0]!==e.Delim||"*"!==i[4].value&&"/"!==i[4].value){u++;continue}const o=a[u+2];if(!o||!r(o)&&!isCalculation(o))return-1;"*"!==i[4].value?"/"!==i[4].value?u++:a.splice(u,3,{inputs:[n,o],operation:division}):a.splice(u,3,{inputs:[n,o],operation:multiplication})}if(u=0,1===a.length&&isCalculation(a[0]))return a[0];for(;u<a.length;){const n=a[u];if(!n||!r(n)&&!isCalculation(n)){u++;continue}const t=a[u+1];if(!t||!r(t)){u++;continue}const i=t.value;if(i[0]!==e.Delim||"+"!==i[4].value&&"-"!==i[4].value){u++;continue}const o=a[u+2];if(!o||!r(o)&&!isCalculation(o))return-1;"+"!==i[4].value?"-"!==i[4].value?u++:a.splice(u,3,{inputs:[n,o],operation:subtraction}):a.splice(u,3,{inputs:[n,o],operation:addition})}return 1===a.length&&isCalculation(a[0])?a[0]:-1}function clamp(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=[],i=[],s=[];{let n=u;for(let t=0;t<a.length;t++){const o=a[t];if(r(o)&&o.value[0]===e.Comma){if(n===s)return-1;if(n===i){n=s;continue}if(n===u){n=i;continue}return-1}n.push(o)}}const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],u),t));if(-1===c)return-1;const m=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));if(-1===m)return-1;const f=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],s),t));return-1===f?-1:solveClamp(n,c,m,f)}function max(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=[];{const n=[];let i=[];for(let t=0;t<a.length;t++){const u=a[t];r(u)&&u.value[0]===e.Comma?(n.push(i),i=[]):i.push(u)}n.push(i);for(let a=0;a<n.length;a++){if(0===n[a].length)return-1;const r=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[a]),t));if(-1===r)return-1;u.push(r)}}return solveMax(n,u)}function min(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=[];{const n=[];let i=[];for(let t=0;t<a.length;t++){const u=a[t];r(u)&&u.value[0]===e.Comma?(n.push(i),i=[]):i.push(u)}n.push(i);for(let a=0;a<n.length;a++){if(0===n[a].length)return-1;const r=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[a]),t));if(-1===r)return-1;u.push(r)}}return solveMin(n,u)}const T=new Set(["nearest","up","down","to-zero"]);function round(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t);let u="";const i=[],s=[];{let n=i;for(let t=0;t<a.length;t++){const o=a[t];if(!u&&0===i.length&&0===s.length&&r(o)&&o.value[0]===e.Ident){const e=o.value;if(T.has(e[4].value.toLowerCase())){u=e[4].value.toLowerCase();continue}}if(r(o)&&o.value[0]===e.Comma){if(n===s)return-1;if(n===i&&u&&0===i.length)continue;if(n===i){n=s;continue}return-1}n.push(o)}}const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));if(-1===c)return-1;const m=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],s),t));return-1===m?-1:(u||(u="nearest"),solveRound(n,u,c,m))}function mod(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=[],i=[];{let n=u;for(let t=0;t<a.length;t++){const o=a[t];if(r(o)&&o.value[0]===e.Comma){if(n===i)return-1;if(n===u){n=i;continue}return-1}n.push(o)}}const s=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],u),t));if(-1===s)return-1;const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));return-1===c?-1:solveMod(n,s,c)}function rem(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=[],i=[];{let n=u;for(let t=0;t<a.length;t++){const o=a[t];if(r(o)&&o.value[0]===e.Comma){if(n===i)return-1;if(n===u){n=i;continue}return-1}n.push(o)}}const s=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],u),t));if(-1===s)return-1;const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));return-1===c?-1:solveRem(n,s,c)}function abs(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveAbs(n,u)}function sign(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveSign(n,u)}function sin(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveSin(n,u)}function cos(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveCos(n,u)}function tan(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveTan(n,u)}function asin(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveASin(n,u)}function acos(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveACos(n,u)}function atan(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));return-1===u?-1:solveATan(n,u)}function atan2(n,t){const a=resolveGlobalsAndConstants([...n.value.filter((e=>!o(e)&&!l(e)))],t),u=[],i=[];{let n=u;for(let t=0;t<a.length;t++){const o=a[t];if(r(o)&&o.value[0]===e.Comma){if(n===i)return-1;if(n===u){n=i;continue}return-1}n.push(o)}}const s=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],u),t));if(-1===s)return-1;const c=solve(calc(new v([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));return-1===c?-1:solveATan2(n,s,c)}function tokenizeGlobals(n){const u=new Map;if(!n)return u;for(const[r,i]of n)if(t(i))u.set(r,i);else if("string"!=typeof i);else{const n=a({css:i}),t=n.nextToken();if(n.nextToken(),!n.endOfFile())continue;if(t[0]!==e.Number&&t[0]!==e.Dimension&&t[0]!==e.Percentage)continue;u.set(r,t)}return u}function patchNaN(t){if(-1===t)return-1;if(c(t))return t;const a=t.value;return a[0]!==e.Number&&a[0]!==e.Percentage&&a[0]!==e.Dimension?t:Number.isNaN(a[4].value)?a[0]===e.Number?new v([e.Function,"calc(",a[2],a[3],{value:"calc"}],[e.CloseParen,")",a[2],a[3],void 0],[new i([e.Ident,"NaN",a[2],a[3],{value:"NaN"}])]):a[0]===e.Dimension?new v([e.Function,"calc(",a[2],a[3],{value:"calc"}],[e.CloseParen,")",a[2],a[3],void 0],[new i([e.Ident,"NaN",a[2],a[3],{value:"NaN"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Delim,"*",a[2],a[3],{value:"*"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Dimension,"1"+a[4].unit,a[2],a[3],{value:1,type:n.Integer,unit:a[4].unit}])]):a[0]===e.Percentage?new v([e.Function,"calc(",a[2],a[3],{value:"calc"}],[e.CloseParen,")",a[2],a[3],void 0],[new i([e.Ident,"NaN",a[2],a[3],{value:"NaN"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Delim,"*",a[2],a[3],{value:"*"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Percentage,"1%",a[2],a[3],{value:1}])]):-1:t}function patchInfinity(t){if(-1===t)return-1;if(c(t))return t;const a=t.value;if(a[0]!==e.Number&&a[0]!==e.Percentage&&a[0]!==e.Dimension)return t;if(Number.isFinite(a[4].value))return t;let u="";return Number.NEGATIVE_INFINITY===a[4].value&&(u="-"),a[0]===e.Number?new v([e.Function,"calc(",a[2],a[3],{value:"calc"}],[e.CloseParen,")",a[2],a[3],void 0],[new i([e.Ident,u+"infinity",a[2],a[3],{value:u+"infinity"}])]):a[0]===e.Dimension?new v([e.Function,"calc(",a[2],a[3],{value:"calc"}],[e.CloseParen,")",a[2],a[3],void 0],[new i([e.Ident,u+"infinity",a[2],a[3],{value:u+"infinity"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Delim,"*",a[2],a[3],{value:"*"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Dimension,"1"+a[4].unit,a[2],a[3],{value:1,type:n.Integer,unit:a[4].unit}])]):a[0]===e.Percentage?new v([e.Function,"calc(",a[2],a[3],{value:"calc"}],[e.CloseParen,")",a[2],a[3],void 0],[new i([e.Ident,u+"infinity",a[2],a[3],{value:u+"infinity"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Delim,"*",a[2],a[3],{value:"*"}]),new m([[e.Whitespace," ",a[2],a[3],void 0]]),new i([e.Percentage,"1%",a[2],a[3],{value:1}])]):-1}function patchMinusZero(n){if(-1===n)return-1;if(c(n))return n;const t=n.value;return t[0]!==e.Number&&t[0]!==e.Percentage&&t[0]!==e.Dimension?n:Object.is(-0,t[4].value)?("-0"===t[1]||(t[1]="-0"),n):n}function patchPrecision(n,t=13){if(-1===n)return-1;if(c(n))return n;const a=n.value;if(a[0]!==e.Number&&a[0]!==e.Percentage&&a[0]!==e.Dimension)return n;if(Number.isInteger(a[4].value))return n;const u=Number(a[4].value.toFixed(t)).toString();return a[0]===e.Number?a[1]=u:a[0]===e.Percentage?a[1]=u+"%":a[0]===e.Dimension&&(a[1]=u+a[4].unit),n}function patchCanonicalUnit(n){return-1===n?-1:(c(n)||n.value[0]!==e.Dimension||(n.value=toCanonicalUnit(n.value)),n)}function patchCalcResult(e,n){let t=e;return t=patchNaN(e),t=patchInfinity(t),null!=n&&n.toCanonicalUnits&&(t=patchCanonicalUnit(t)),t=patchPrecision(t,null==n?void 0:n.precision),t=patchMinusZero(t),t}const G=new Map([["abs",abs],["acos",acos],["asin",asin],["atan",atan],["atan2",atan2],["calc",calc],["clamp",clamp],["cos",cos],["max",max],["min",min],["mod",mod],["rem",rem],["round",round],["sign",sign],["sin",sin],["tan",tan]]);function convert(e,n){const t=tokenizeGlobals(null==n?void 0:n.globals),r=a({css:e}),i=[];for(;!r.endOfFile();)i.push(r.nextToken());i.push(r.nextToken());const o=f(i,{});for(let e=0;e<o.length;e++){const a=o[e];for(let e=0;e<a.length;e++){const u=a[e];if(c(u)){const r=G.get(u.getName().toLowerCase());if(r){const i=patchCalcResult(solve(r(u,t)),n);if(-1!==i){a.splice(e,1,i);continue}}}(s(u)||c(u))&&u.walk(((e,a)=>{if("number"!=typeof a)return;const u=e.node;if(c(u)){const r=G.get(u.getName().toLowerCase());if(!r)return;const i=patchCalcResult(solve(r(u,t)),n);if(-1!==i)return void e.parent.value.splice(a,1,i)}}))}}return o.map((e=>e.map((e=>u(...e.tokens()))).join(""))).join(",")}export{convert};
