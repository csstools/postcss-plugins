import{TokenType as e,NumberType as n,tokenizer as t}from"@csstools/css-tokenizer";import{isTokenNode as r,TokenNode as u,parseComponentValue as i,isFunctionNode as o,isCommentNode as a,isWhitespaceNode as l,isSimpleBlockNode as s}from"@csstools/css-parser-algorithms";function isCalculation(e){return"inputs"in e&&Array.isArray(e.inputs)&&"operation"in e}function solve(e){const n=[];for(let t=0;t<e.inputs.length;t++){const u=e.inputs[t];if(r(u)){n.push(u);continue}const i=solve(u);if(-1===i)return-1;n.push(i)}return e.operation(n)}function unary(n){if(1!==n.length)return-1;const t=n[0].value;return t[0]===e.Number||t[0]===e.Dimension||t[0]===e.Percentage?n[0]:-1}function multiplication(t){if(2!==t.length)return-1;const r=t[0].value,i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value*i[4].value;return new u([e.Number,t.toString(),r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Number){const n=r[4].value*i[4].value;return new u([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Number&&i[0]===e.Percentage){const n=r[4].value*i[4].value;return new u([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Number){const t=r[4].value*i[4].value;return new u([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}if(r[0]===e.Number&&i[0]===e.Dimension){const t=r[4].value*i[4].value;return new u([e.Dimension,t.toString()+i[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:i[4].unit}])}return-1}function division(t){if(2!==t.length)return-1;const r=t[0].value,i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value/i[4].value;return NaN_Token(t,r,i)??new u([e.Number,t.toString(),r[2],i[3],{value:t,type:Number.isInteger(t)?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Number){const n=r[4].value*i[4].value;return NaN_Token(n,r,i)??new u([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Number){const t=r[4].value/i[4].value;return NaN_Token(t,r,i)??new u([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}return-1}function NaN_Token(n,t,r){if(Number.isNaN(n))return new u([e.Ident,"NaN",t[2],r[3],{value:"NaN"}])}function addition(t){if(2!==t.length)return-1;const r=t[0].value,i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value+i[4].value;return new u([e.Number,t.toString(),r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Percentage){const n=r[4].value+i[4].value;return new u([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Dimension&&r[4].unit===i[4].unit){const t=r[4].value+i[4].value;return new u([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}return-1}function subtraction(t){if(2!==t.length)return-1;const r=t[0].value,i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value-i[4].value;return new u([e.Number,t.toString(),r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Percentage){const n=r[4].value-i[4].value;return new u([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Dimension&&r[4].unit===i[4].unit){const t=r[4].value-i[4].value;return new u([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}return-1}function convert(e,n){const r=t({css:e}),u=[];for(;!r.endOfFile();)u.push(r.nextToken());u.push(r.nextToken());const a=i(u,{onParseError:e=>{throw e}});if("walk"in a){if(o(a)&&"calc"===a.getName().toLowerCase()){const e=calcHandler(a);-1!==e&&console.log(solve(e))}a.walk((e=>{const n=e.node;o(n)&&n.getName().toLowerCase()}))}}function calcHandler(n){const t=[...n.value.filter((e=>!a(e)&&!l(e)))];if(1===t.length&&r(t[0]))return{inputs:[t[0]],operation:unary};for(let n=0;n<t.length;n++){const r=t[n];if(s(r)&&r.startToken[0]===e.OpenParen){const e=calcHandler(r);if(-1===e)return-1;t.splice(n,1,e)}else if(o(r))switch(r.getName().toLowerCase()){case"calc":{const e=calcHandler(r);if(-1===e)return-1;t.splice(n,1,e);break}default:return-1}else;}if(1===t.length&&isCalculation(t[0]))return t[0];for(let n=0;n<t.length;n++){const u=t[n];if(!u||!r(u)&&!isCalculation(u))return-1;const i=t[n+1];if(!i)break;if(!r(i))return-1;const o=t[n+2];if(!o||!r(o)&&!isCalculation(o))return-1;const a=i.value;a[0]!==e.Delim||"*"!==a[4].value?a[0]!==e.Delim||"/"!==a[4].value||(t.splice(n,3,{inputs:[u,o],operation:division}),n--):(t.splice(n,3,{inputs:[u,o],operation:multiplication}),n--)}if(1===t.length&&isCalculation(t[0]))return t[0];for(let n=0;n<t.length;n++){const u=t[n];if(!u||!r(u)&&!isCalculation(u))return-1;const i=t[n+1];if(!i)break;if(!r(i))return-1;const o=t[n+2];if(!o||!r(o)&&!isCalculation(o))return-1;const a=i.value;a[0]!==e.Delim||"+"!==a[4].value?a[0]!==e.Delim||"-"!==a[4].value||(t.splice(n,3,{inputs:[u,o],operation:subtraction}),n--):(t.splice(n,3,{inputs:[u,o],operation:addition}),n--)}return 1===t.length&&isCalculation(t[0])?t[0]:-1}export{convert};
