import{TokenType as e,NumberType as n,isToken as t,tokenizer as i,stringify as r}from"@csstools/css-tokenizer";import{isTokenNode as u,TokenNode as a,isCommentNode as o,isWhitespaceNode as c,isSimpleBlockNode as l,isFunctionNode as s,FunctionNode as p,WhitespaceNode as m,parseCommaSeparatedListOfComponentValues as v}from"@csstools/css-parser-algorithms";function isCalculation(e){return"inputs"in e&&Array.isArray(e.inputs)&&"operation"in e}function solve(e){if(-1===e)return-1;const n=[];for(let t=0;t<e.inputs.length;t++){const i=e.inputs[t];if(u(i)){n.push(i);continue}const r=solve(i);if(-1===r)return-1;n.push(r)}return e.operation(n)}function unary(n){if(1!==n.length)return-1;const t=n[0].value;return t[0]===e.Number||t[0]===e.Dimension||t[0]===e.Percentage?n[0]:-1}function multiplication(t){if(2!==t.length)return-1;const i=t[0].value,r=t[1].value;if(i[0]===e.Number&&r[0]===e.Number){const t=i[4].value*r[4].value;return new a([e.Number,t.toString(),i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number}])}if(i[0]===e.Percentage&&r[0]===e.Number){const n=i[4].value*r[4].value;return new a([e.Percentage,n.toString()+"%",i[2],r[3],{value:n}])}if(i[0]===e.Number&&r[0]===e.Percentage){const n=i[4].value*r[4].value;return new a([e.Percentage,n.toString()+"%",i[2],r[3],{value:n}])}if(i[0]===e.Dimension&&r[0]===e.Number){const t=i[4].value*r[4].value;return new a([e.Dimension,t.toString()+i[4].unit,i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number,unit:i[4].unit}])}if(i[0]===e.Number&&r[0]===e.Dimension){const t=i[4].value*r[4].value;return new a([e.Dimension,t.toString()+r[4].unit,i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}return-1}function division(t){if(2!==t.length)return-1;const i=t[0].value,r=t[1].value;if(i[0]===e.Number&&r[0]===e.Number){const t=i[4].value/r[4].value;return new a([e.Number,t.toString(),i[2],r[3],{value:t,type:Number.isInteger(t)?n.Integer:n.Number}])}if(i[0]===e.Percentage&&r[0]===e.Number){const n=i[4].value/r[4].value;return new a([e.Percentage,n.toString()+"%",i[2],r[3],{value:n}])}if(i[0]===e.Dimension&&r[0]===e.Number){const t=i[4].value/r[4].value;return new a([e.Dimension,t.toString()+i[4].unit,i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number,unit:i[4].unit}])}return-1}const f=new Map([["cm",e=>e],["mm",e=>10*e],["q",e=>40*e],["in",e=>e/2.54],["pc",e=>e/2.54*6],["pt",e=>e/2.54*72],["px",e=>e/2.54*96]]),g=new Map([["deg",e=>e],["grad",e=>e/.9],["rad",e=>e/180*Math.PI],["turn",e=>e/360]]),w=new Map([["deg",e=>.9*e],["grad",e=>e],["rad",e=>.9*e/180*Math.PI],["turn",e=>.9*e/360]]),N=new Map([["cm",e=>2.54*e],["mm",e=>25.4*e],["q",e=>25.4*e*4],["in",e=>e],["pc",e=>6*e],["pt",e=>72*e],["px",e=>96*e]]),h=new Map([["cm",e=>e/10],["mm",e=>e],["q",e=>4*e],["in",e=>e/25.4],["pc",e=>e/25.4*6],["pt",e=>e/25.4*72],["px",e=>e/25.4*96]]),b=new Map([["ms",e=>e],["s",e=>e/1e3]]),I=new Map([["cm",e=>e/6*2.54],["mm",e=>e/6*25.4],["q",e=>e/6*25.4*4],["in",e=>e/6],["pc",e=>e],["pt",e=>e/6*72],["px",e=>e/6*96]]),y=new Map([["cm",e=>e/72*2.54],["mm",e=>e/72*25.4],["q",e=>e/72*25.4*4],["in",e=>e/72],["pc",e=>e/72*6],["pt",e=>e],["px",e=>e/72*96]]),d=new Map([["cm",e=>e/96*2.54],["mm",e=>e/96*25.4],["q",e=>e/96*25.4*4],["in",e=>e/96],["pc",e=>e/96*6],["pt",e=>e/96*72],["px",e=>e]]),P=new Map([["cm",e=>e/4/10],["mm",e=>e/4],["q",e=>e],["in",e=>e/4/25.4],["pc",e=>e/4/25.4*6],["pt",e=>e/4/25.4*72],["px",e=>e/4/25.4*96]]),C=new Map([["deg",e=>180*e/Math.PI],["grad",e=>180*e/Math.PI/.9],["rad",e=>e],["turn",e=>180*e/Math.PI/360]]),D=new Map([["ms",e=>1e3*e],["s",e=>e]]),M=new Map([["deg",e=>360*e],["grad",e=>360*e/.9],["rad",e=>360*e/180*Math.PI],["turn",e=>e]]),S=new Map([["cm",f],["mm",h],["q",P],["in",N],["pc",I],["pt",y],["px",d],["ms",b],["s",D],["deg",g],["grad",w],["rad",C],["turn",M]]);function convertUnit(t,i){if(t[0]!==e.Dimension)return i;if(i[0]!==e.Dimension)return i;const r=t[4].unit.toLowerCase(),u=i[4].unit.toLowerCase();if(r===u)return i;const a=S.get(u);if(!a)return i;const o=a.get(r);if(!o)return i;const c=o(i[4].value);return[e.Dimension,c.toString()+t[4].unit,i[2],i[3],{value:c,unit:t[4].unit,type:Number.isInteger(c)?n.Integer:n.Number}]}function addition(t){if(2!==t.length)return-1;const i=t[0].value;let r=t[1].value;if(i[0]===e.Number&&r[0]===e.Number){const t=i[4].value+r[4].value;return new a([e.Number,t.toString(),i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number}])}if(i[0]===e.Percentage&&r[0]===e.Percentage){const n=i[4].value+r[4].value;return new a([e.Percentage,n.toString()+"%",i[2],r[3],{value:n}])}if(i[0]===e.Dimension&&r[0]===e.Dimension&&(r=convertUnit(i,r),i[4].unit.toLowerCase()===r[4].unit.toLowerCase())){const t=i[4].value+r[4].value;return new a([e.Dimension,t.toString()+i[4].unit,i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number,unit:i[4].unit}])}return-1}function subtraction(t){if(2!==t.length)return-1;const i=t[0].value;let r=t[1].value;if(i[0]===e.Number&&r[0]===e.Number){const t=i[4].value-r[4].value;return new a([e.Number,t.toString(),i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number}])}if(i[0]===e.Percentage&&r[0]===e.Percentage){const n=i[4].value-r[4].value;return new a([e.Percentage,n.toString()+"%",i[2],r[3],{value:n}])}if(i[0]===e.Dimension&&r[0]===e.Dimension&&(r=convertUnit(i,r),i[4].unit.toLowerCase()===r[4].unit.toLowerCase())){const t=i[4].value-r[4].value;return new a([e.Dimension,t.toString()+i[4].unit,i[2],r[3],{value:t,type:i[4].type===n.Integer&&r[4].type===n.Integer?n.Integer:n.Number,unit:i[4].unit}])}return-1}function solveMin(t,i){const r=i[0];if(!r||!u(r))return-1;if(1!==new Set(i.map((e=>e.type))).size)return-1;const o=i[0].value;if(o[0]!==e.Dimension&&o[0]!==e.Number&&o[0]!==e.Percentage)return-1;if(1!==new Set(i.map((e=>e.value[0]))).size)return-1;const c=i.map((e=>convertUnit(o,e.value)));if(1!==new Set(c.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const l=c.map((e=>e[4].value)),s=Math.min(...l),p=t.tokens();return o[0]===e.Dimension?{inputs:[new a([e.Dimension,s.toString()+o[4].unit,p[0][2],p[p.length-1][3],{value:s,type:Number.isInteger(s)?n.Integer:n.Number,unit:o[4].unit}])],operation:unary}:o[0]===e.Percentage?{inputs:[new a([e.Percentage,s.toString()+"%",p[0][2],p[p.length-1][3],{value:s}])],operation:unary}:{inputs:[new a([e.Number,s.toString(),p[0][2],p[p.length-1][3],{value:s,type:Number.isInteger(s)?n.Integer:n.Number}])],operation:unary}}function solveMax(t,i){const r=i[0];if(!r||!u(r))return-1;if(1!==new Set(i.map((e=>e.type))).size)return-1;const o=i[0].value;if(o[0]!==e.Dimension&&o[0]!==e.Number&&o[0]!==e.Percentage)return-1;if(1!==new Set(i.map((e=>e.value[0]))).size)return-1;const c=i.map((e=>convertUnit(o,e.value)));if(1!==new Set(c.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const l=c.map((e=>e[4].value)),s=Math.max(...l),p=t.tokens();return o[0]===e.Dimension?{inputs:[new a([e.Dimension,s.toString()+o[4].unit,p[0][2],p[p.length-1][3],{value:s,type:Number.isInteger(s)?n.Integer:n.Number,unit:o[4].unit}])],operation:unary}:o[0]===e.Percentage?{inputs:[new a([e.Percentage,s.toString()+"%",p[0][2],p[p.length-1][3],{value:s}])],operation:unary}:{inputs:[new a([e.Number,s.toString(),p[0][2],p[p.length-1][3],{value:s,type:Number.isInteger(s)?n.Integer:n.Number}])],operation:unary}}function solveClamp(t,i,r,o){if(!u(i)||!u(r)||!u(o))return-1;const c=i.value,l=convertUnit(c,r.value),s=convertUnit(c,o.value);if(c[0]!==e.Dimension&&c[0]!==e.Number&&c[0]!==e.Percentage)return-1;if(c[0]!==l[0])return-1;if(c[0]!==s[0])return-1;if(c[0]===e.Dimension){if(c[4].unit.toLowerCase()!==l[4].unit.toLowerCase())return-1;if(c[4].unit.toLowerCase()!==s[4].unit.toLowerCase())return-1}const p=Math.max(c[4].value,Math.min(l[4].value,s[4].value)),m=t.tokens();return c[0]===e.Dimension?{inputs:[new a([e.Dimension,p.toString()+c[4].unit,m[0][2],m[m.length-1][3],{value:p,type:Number.isInteger(p)?n.Integer:n.Number,unit:c[4].unit}])],operation:unary}:c[0]===e.Percentage?{inputs:[new a([e.Percentage,p.toString()+"%",m[0][2],m[m.length-1][3],{value:p}])],operation:unary}:{inputs:[new a([e.Number,p.toString(),m[0][2],m[m.length-1][3],{value:p,type:Number.isInteger(p)?n.Integer:n.Number}])],operation:unary}}function calc(t,i){const r=[...t.value.filter((e=>!o(e)&&!c(e)))];for(let t=0;t<r.length;t++){const o=r[t];if(!u(o))continue;const c=o.value;if(c[0]!==e.Ident)continue;const l=c[4].value.toLowerCase();switch(l){case"e":r.splice(t,1,new a([e.Number,Math.E.toString(),c[2],c[3],{value:Math.E,type:n.Number}]));break;case"pi":r.splice(t,1,new a([e.Number,Math.PI.toString(),c[2],c[3],{value:Math.PI,type:n.Number}]));break;default:if(i.has(l)){const e=i.get(l);r.splice(t,1,new a(e))}}}if(1===r.length&&u(r[0]))return{inputs:[r[0]],operation:unary};let p=0;for(;p<r.length;){const n=r[p];if(l(n)&&n.startToken[0]===e.OpenParen){const e=calc(n,i);if(-1===e)return-1;r.splice(p,1,e)}else if(s(n))switch(n.getName().toLowerCase()){case"calc":{const e=calc(n,i);if(-1===e)return-1;r.splice(p,1,e);break}case"clamp":{const e=clamp(n,i);if(-1===e)return-1;r.splice(p,1,e);break}case"min":{const e=min(n,i);if(-1===e)return-1;r.splice(p,1,e);break}case"max":{const e=max(n,i);if(-1===e)return-1;r.splice(p,1,e);break}default:return-1}else p++}if(p=0,1===r.length&&isCalculation(r[0]))return r[0];for(;p<r.length;){const n=r[p];if(!n||!u(n)&&!isCalculation(n)){p++;continue}const t=r[p+1];if(!t||!u(t)){p++;continue}const i=t.value;if(i[0]!==e.Delim||"*"!==i[4].value&&"/"!==i[4].value){p++;continue}const a=r[p+2];if(!a||!u(a)&&!isCalculation(a))return-1;"*"!==i[4].value?"/"!==i[4].value?p++:r.splice(p,3,{inputs:[n,a],operation:division}):r.splice(p,3,{inputs:[n,a],operation:multiplication})}if(p=0,1===r.length&&isCalculation(r[0]))return r[0];for(;p<r.length;){const n=r[p];if(!n||!u(n)&&!isCalculation(n)){p++;continue}const t=r[p+1];if(!t||!u(t)){p++;continue}const i=t.value;if(i[0]!==e.Delim||"+"!==i[4].value&&"-"!==i[4].value){p++;continue}const a=r[p+2];if(!a||!u(a)&&!isCalculation(a))return-1;"+"!==i[4].value?"-"!==i[4].value?p++:r.splice(p,3,{inputs:[n,a],operation:subtraction}):r.splice(p,3,{inputs:[n,a],operation:addition})}return 1===r.length&&isCalculation(r[0])?r[0]:-1}function clamp(n,t){const i=[...n.value.filter((e=>!o(e)&&!c(e)))],r=[],a=[],l=[];{let n=r;for(let t=0;t<i.length;t++){const o=i[t];if(u(o)&&o.value[0]===e.Comma){if(n===l)return-1;if(n===a){n=l;continue}if(n===r){n=a;continue}return-1}n.push(o)}}const s=solve(calc(new p([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],r),t));if(-1===s)return-1;const m=solve(calc(new p([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],a),t));if(-1===m)return-1;const v=solve(calc(new p([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],l),t));return-1===v?-1:solveClamp(n,s,m,v)}function max(n,t){const i=[...n.value.filter((e=>!o(e)&&!c(e)))],r=[];{const n=[];let a=[];for(let t=0;t<i.length;t++){const r=i[t];u(r)&&r.value[0]===e.Comma?(n.push(a),a=[]):a.push(r)}n.push(a);for(let i=0;i<n.length;i++){const u=solve(calc(new p([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[i]),t));if(-1===u)return-1;r.push(u)}}return solveMax(n,r)}function min(n,t){const i=[...n.value.filter((e=>!o(e)&&!c(e)))],r=[];{const n=[];let a=[];for(let t=0;t<i.length;t++){const r=i[t];u(r)&&r.value[0]===e.Comma?(n.push(a),a=[]):a.push(r)}n.push(a);for(let i=0;i<n.length;i++){const u=solve(calc(new p([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[i]),t));if(-1===u)return-1;r.push(u)}}return solveMin(n,r)}function tokenizeGlobals(n){const r=new Map;if(!n)return r;for(const[u,a]of n)if(t(a))r.set(u,a);else if("string"!=typeof a);else{const n=i({css:a}),t=n.nextToken();if(n.nextToken(),!n.endOfFile())continue;if(t[0]!==e.Number&&t[0]!==e.Dimension&&t[0]!==e.Percentage)continue;r.set(u,t)}return r}function patchNaN(t){if(-1===t)return-1;if(s(t))return t;const i=t.value;return i[0]!==e.Number&&i[0]!==e.Percentage&&i[0]!==e.Dimension?t:Number.isNaN(i[4].value)?i[0]===e.Number?new p([e.Function,"calc(",i[2],i[3],{value:"calc"}],[e.CloseParen,")",i[2],i[3],void 0],[new a([e.Ident,"NaN",i[2],i[3],{value:"NaN"}])]):i[0]===e.Dimension?new p([e.Function,"calc(",i[2],i[3],{value:"calc"}],[e.CloseParen,")",i[2],i[3],void 0],[new a([e.Ident,"NaN",i[2],i[3],{value:"NaN"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Delim,"*",i[2],i[3],{value:"*"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Dimension,"1"+i[4].unit,i[2],i[3],{value:1,type:n.Integer,unit:i[4].unit}])]):i[0]===e.Percentage?new p([e.Function,"calc(",i[2],i[3],{value:"calc"}],[e.CloseParen,")",i[2],i[3],void 0],[new a([e.Ident,"NaN",i[2],i[3],{value:"NaN"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Delim,"*",i[2],i[3],{value:"*"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Percentage,"1%",i[2],i[3],{value:1}])]):-1:t}function patchInfinity(t){if(-1===t)return-1;if(s(t))return t;const i=t.value;if(i[0]!==e.Number&&i[0]!==e.Percentage&&i[0]!==e.Dimension)return t;if(Number.isFinite(i[4].value))return t;let r="";return Number.NEGATIVE_INFINITY===i[4].value&&(r="-"),i[0]===e.Number?new p([e.Function,"calc(",i[2],i[3],{value:"calc"}],[e.CloseParen,")",i[2],i[3],void 0],[new a([e.Ident,r+"infinity",i[2],i[3],{value:r+"infinity"}])]):i[0]===e.Dimension?new p([e.Function,"calc(",i[2],i[3],{value:"calc"}],[e.CloseParen,")",i[2],i[3],void 0],[new a([e.Ident,r+"infinity",i[2],i[3],{value:r+"infinity"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Delim,"*",i[2],i[3],{value:"*"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Dimension,"1"+i[4].unit,i[2],i[3],{value:1,type:n.Integer,unit:i[4].unit}])]):i[0]===e.Percentage?new p([e.Function,"calc(",i[2],i[3],{value:"calc"}],[e.CloseParen,")",i[2],i[3],void 0],[new a([e.Ident,r+"infinity",i[2],i[3],{value:r+"infinity"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Delim,"*",i[2],i[3],{value:"*"}]),new m([[e.Whitespace," ",i[2],i[3],void 0]]),new a([e.Percentage,"1%",i[2],i[3],{value:1}])]):-1}function convert(e,n){const t=tokenizeGlobals(n),u=i({css:e}),a=[];for(;!u.endOfFile();)a.push(u.nextToken());a.push(u.nextToken());const o=v(a,{});for(let e=0;e<o.length;e++){const n=o[e];for(let e=0;e<n.length;e++){const i=n[e];if(s(i))if("calc"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(calc(i,t))));if(-1!==r){n.splice(e,1,r);continue}}else if("clamp"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(clamp(i,t))));if(-1!==r){n.splice(e,1,r);continue}}else if("min"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(min(i,t))));if(-1!==r){n.splice(e,1,r);continue}}else if("max"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(max(i,t))));if(-1!==r){n.splice(e,1,r);continue}}(l(i)||s(i))&&i.walk(((e,n)=>{if("number"!=typeof n)return;const i=e.node;if(s(i))if("calc"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(calc(i,t))));if(-1!==r)return void e.parent.value.splice(n,1,r)}else if("clamp"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(clamp(i,t))));if(-1!==r)return void e.parent.value.splice(n,1,r)}else if("min"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(min(i,t))));if(-1!==r)return void e.parent.value.splice(n,1,r)}else if("max"===i.getName().toLowerCase()){const r=patchInfinity(patchNaN(solve(max(i,t))));if(-1!==r)return void e.parent.value.splice(n,1,r)}}))}}return o.map((e=>e.map((e=>r(...e.tokens()))).join(""))).join(",")}export{convert};
