import{TokenType as e,NumberType as n,isToken as t,tokenizer as r,stringify as i}from"@csstools/css-tokenizer";import{isTokenNode as u,TokenNode as o,isCommentNode as a,isWhitespaceNode as s,isSimpleBlockNode as l,isFunctionNode as c,FunctionNode as m,parseCommaSeparatedListOfComponentValues as p}from"@csstools/css-parser-algorithms";function isCalculation(e){return"inputs"in e&&Array.isArray(e.inputs)&&"operation"in e}function solve(e){if(-1===e)return-1;const n=[];for(let t=0;t<e.inputs.length;t++){const r=e.inputs[t];if(u(r)){n.push(r);continue}const i=solve(r);if(-1===i)return-1;n.push(i)}return e.operation(n)}function unary(n){if(1!==n.length)return-1;const t=n[0].value;return t[0]===e.Number||t[0]===e.Dimension||t[0]===e.Percentage?n[0]:-1}function multiplication(t){if(2!==t.length)return-1;const r=t[0].value,i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value*i[4].value;return new o([e.Number,t.toString(),r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Number){const n=r[4].value*i[4].value;return new o([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Number&&i[0]===e.Percentage){const n=r[4].value*i[4].value;return new o([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Number){const t=r[4].value*i[4].value;return new o([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}if(r[0]===e.Number&&i[0]===e.Dimension){const t=r[4].value*i[4].value;return new o([e.Dimension,t.toString()+i[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:i[4].unit}])}return-1}function Infinity_Token(t,r,i){if(!Number.isFinite(t)){let u="",a=Number.POSITIVE_INFINITY;if(Number.NEGATIVE_INFINITY===t&&(u="-",a=Number.NEGATIVE_INFINITY),r[0]===e.Number)return new o([r[0],u+Number.MAX_SAFE_INTEGER.toString(),r[2],i[3],{value:a,type:n.Integer}]);if(r[0]===e.Percentage)return new o([r[0],u+Number.MAX_SAFE_INTEGER.toString()+"%",r[2],i[3],{value:a}]);if(r[0]===e.Dimension)return new o([r[0],u+Number.MAX_SAFE_INTEGER.toString()+r[4].unit,r[2],i[3],{value:a,unit:r[4].unit,type:n.Integer}])}}function NaN_Token(n,t,r){if(Number.isNaN(n))return new o([e.Ident,"NaN",t[2],r[3],{value:"NaN"}])}function division(t){if(2!==t.length)return-1;const r=t[0].value,i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value/i[4].value;return NaN_Token(t,r,i)??Infinity_Token(t,r,i)??new o([e.Number,t.toString(),r[2],i[3],{value:t,type:Number.isInteger(t)?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Number){const n=r[4].value/i[4].value;return NaN_Token(n,r,i)??Infinity_Token(n,r,i)??new o([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Number){const t=r[4].value/i[4].value;return NaN_Token(t,r,i)??Infinity_Token(t,r,i)??new o([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}return-1}const f=new Map([["cm",e=>e],["mm",e=>10*e],["q",e=>40*e],["in",e=>e/2.54],["pc",e=>e/2.54*6],["pt",e=>e/2.54*72],["px",e=>e/2.54*96]]),v=new Map([["deg",e=>e],["grad",e=>e/.9],["rad",e=>e/180*Math.PI],["turn",e=>e/360]]),g=new Map([["deg",e=>.9*e],["grad",e=>e],["rad",e=>.9*e/180*Math.PI],["turn",e=>.9*e/360]]),N=new Map([["cm",e=>2.54*e],["mm",e=>25.4*e],["q",e=>25.4*e*4],["in",e=>e],["pc",e=>6*e],["pt",e=>72*e],["px",e=>96*e]]),w=new Map([["cm",e=>e/10],["mm",e=>e],["q",e=>4*e],["in",e=>e/25.4],["pc",e=>e/25.4*6],["pt",e=>e/25.4*72],["px",e=>e/25.4*96]]),b=new Map([["ms",e=>e],["s",e=>e/1e3]]),I=new Map([["deg",e=>180*e/Math.PI],["grad",e=>180*e/Math.PI/.9],["rad",e=>e],["turn",e=>180*e/Math.PI/360]]),h=new Map([["ms",e=>1e3*e],["s",e=>e]]),y=new Map([["deg",e=>360*e],["grad",e=>360*e/.9],["rad",e=>360*e/180*Math.PI],["turn",e=>e]]),C=new Map([["cm",f],["mm",w],["in",N],["ms",b],["s",h],["deg",v],["grad",g],["rad",I],["turn",y]]);function convertUnit(t,r){if(t[0]!==e.Dimension)return r;if(r[0]!==e.Dimension)return r;const i=t[4].unit.toLowerCase(),u=r[4].unit.toLowerCase();if(i===u)return r;const o=C.get(u);if(!o)return r;const a=o.get(i);if(!a)return r;const s=a(r[4].value);return[e.Dimension,s.toString()+t[4].unit,r[2],r[3],{value:s,unit:t[4].unit,type:Number.isInteger(s)?n.Integer:n.Number}]}function addition(t){if(2!==t.length)return-1;const r=t[0].value;let i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value+i[4].value;return new o([e.Number,t.toString(),r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Percentage){const n=r[4].value+i[4].value;return new o([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Dimension&&(i=convertUnit(r,i),r[4].unit.toLowerCase()===i[4].unit.toLowerCase())){const t=r[4].value+i[4].value;return new o([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}return-1}function subtraction(t){if(2!==t.length)return-1;const r=t[0].value;let i=t[1].value;if(r[0]===e.Number&&i[0]===e.Number){const t=r[4].value-i[4].value;return new o([e.Number,t.toString(),r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number}])}if(r[0]===e.Percentage&&i[0]===e.Percentage){const n=r[4].value-i[4].value;return new o([e.Percentage,n.toString()+"%",r[2],i[3],{value:n}])}if(r[0]===e.Dimension&&i[0]===e.Dimension&&(i=convertUnit(r,i),r[4].unit.toLowerCase()===i[4].unit.toLowerCase())){const t=r[4].value-i[4].value;return new o([e.Dimension,t.toString()+r[4].unit,r[2],i[3],{value:t,type:r[4].type===n.Integer&&i[4].type===n.Integer?n.Integer:n.Number,unit:r[4].unit}])}return-1}function solveMin(t,r){const i=r[0];if(!i||!u(i))return-1;if(1!==new Set(r.map((e=>e.type))).size)return-1;const a=r[0].value;if(a[0]!==e.Dimension&&a[0]!==e.Number&&a[0]!==e.Percentage)return-1;if(1!==new Set(r.map((e=>e.value[0]))).size)return-1;const s=r.map((e=>convertUnit(a,e.value)));if(1!==new Set(s.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const l=s.map((e=>e[4].value)),c=Math.min(...l),m=t.tokens();return a[0]===e.Dimension?{inputs:[new o([e.Dimension,c.toString()+a[4].unit,m[0][2],m[m.length-1][3],{value:c,type:Number.isInteger(c)?n.Integer:n.Number,unit:a[4].unit}])],operation:unary}:a[0]===e.Percentage?{inputs:[new o([e.Percentage,c.toString()+"%",m[0][2],m[m.length-1][3],{value:c}])],operation:unary}:{inputs:[new o([e.Number,c.toString(),m[0][2],m[m.length-1][3],{value:c,type:Number.isInteger(c)?n.Integer:n.Number}])],operation:unary}}function solveMax(t,r){const i=r[0];if(!i||!u(i))return-1;if(1!==new Set(r.map((e=>e.type))).size)return-1;const a=r[0].value;if(a[0]!==e.Dimension&&a[0]!==e.Number&&a[0]!==e.Percentage)return-1;if(1!==new Set(r.map((e=>e.value[0]))).size)return-1;const s=r.map((e=>convertUnit(a,e.value)));if(1!==new Set(s.map((e=>(e[4].unit??"").toLowerCase()))).size)return-1;const l=s.map((e=>e[4].value)),c=Math.max(...l),m=t.tokens();return a[0]===e.Dimension?{inputs:[new o([e.Dimension,c.toString()+a[4].unit,m[0][2],m[m.length-1][3],{value:c,type:Number.isInteger(c)?n.Integer:n.Number,unit:a[4].unit}])],operation:unary}:a[0]===e.Percentage?{inputs:[new o([e.Percentage,c.toString()+"%",m[0][2],m[m.length-1][3],{value:c}])],operation:unary}:{inputs:[new o([e.Number,c.toString(),m[0][2],m[m.length-1][3],{value:c,type:Number.isInteger(c)?n.Integer:n.Number}])],operation:unary}}function solveClamp(t,r,i,a){if(!u(r)||!u(i)||!u(a))return-1;const s=r.value,l=convertUnit(s,i.value),c=convertUnit(s,a.value);if(s[0]!==e.Dimension&&s[0]!==e.Number&&s[0]!==e.Percentage)return-1;if(s[0]!==l[0])return-1;if(s[0]!==c[0])return-1;if(s[0]===e.Dimension){if(s[4].unit.toLowerCase()!==l[4].unit.toLowerCase())return-1;if(s[4].unit.toLowerCase()!==c[4].unit.toLowerCase())return-1}const m=Math.max(s[4].value,Math.min(l[4].value,c[4].value)),p=t.tokens();return s[0]===e.Dimension?{inputs:[new o([e.Dimension,m.toString()+s[4].unit,p[0][2],p[p.length-1][3],{value:m,type:Number.isInteger(m)?n.Integer:n.Number,unit:s[4].unit}])],operation:unary}:s[0]===e.Percentage?{inputs:[new o([e.Percentage,m.toString()+"%",p[0][2],p[p.length-1][3],{value:m}])],operation:unary}:{inputs:[new o([e.Number,m.toString(),p[0][2],p[p.length-1][3],{value:m,type:Number.isInteger(m)?n.Integer:n.Number}])],operation:unary}}function calc(t,r){const i=[...t.value.filter((e=>!a(e)&&!s(e)))];for(let t=0;t<i.length;t++){const a=i[t];if(!u(a))continue;const s=a.value;if(s[0]!==e.Ident)continue;const l=s[4].value.toLowerCase();switch(l){case"e":i.splice(t,1,new o([e.Number,Math.E.toString(),s[2],s[3],{value:Math.E,type:n.Number}]));break;case"pi":i.splice(t,1,new o([e.Number,Math.PI.toString(),s[2],s[3],{value:Math.PI,type:n.Number}]));break;default:if(r.has(l)){const e=r.get(l);i.splice(t,1,new o(e))}}}if(1===i.length&&u(i[0]))return{inputs:[i[0]],operation:unary};let m=0;for(;m<i.length;){const n=i[m];if(l(n)&&n.startToken[0]===e.OpenParen){const e=calc(n,r);if(-1===e)return-1;i.splice(m,1,e)}else if(c(n))switch(n.getName().toLowerCase()){case"calc":{const e=calc(n,r);if(-1===e)return-1;i.splice(m,1,e);break}case"clamp":{const e=clamp(n,r);if(-1===e)return-1;i.splice(m,1,e);break}case"min":{const e=min(n,r);if(-1===e)return-1;i.splice(m,1,e);break}case"max":{const e=max(n,r);if(-1===e)return-1;i.splice(m,1,e);break}default:return-1}else m++}if(m=0,1===i.length&&isCalculation(i[0]))return i[0];for(;m<i.length;){const n=i[m];if(!n||!u(n)&&!isCalculation(n)){m++;continue}const t=i[m+1];if(!t||!u(t)){m++;continue}const r=t.value;if(r[0]!==e.Delim||"*"!==r[4].value&&"/"!==r[4].value){m++;continue}const o=i[m+2];if(!o||!u(o)&&!isCalculation(o))return-1;"*"!==r[4].value?"/"!==r[4].value?m++:i.splice(m,3,{inputs:[n,o],operation:division}):i.splice(m,3,{inputs:[n,o],operation:multiplication})}if(m=0,1===i.length&&isCalculation(i[0]))return i[0];for(;m<i.length;){const n=i[m];if(!n||!u(n)&&!isCalculation(n)){m++;continue}const t=i[m+1];if(!t||!u(t)){m++;continue}const r=t.value;if(r[0]!==e.Delim||"+"!==r[4].value&&"-"!==r[4].value){m++;continue}const o=i[m+2];if(!o||!u(o)&&!isCalculation(o))return-1;"+"!==r[4].value?"-"!==r[4].value?m++:i.splice(m,3,{inputs:[n,o],operation:subtraction}):i.splice(m,3,{inputs:[n,o],operation:addition})}return 1===i.length&&isCalculation(i[0])?i[0]:-1}function clamp(n,t){const r=[...n.value.filter((e=>!a(e)&&!s(e)))],i=[],o=[],l=[];{let n=i;for(let t=0;t<r.length;t++){const a=r[t];if(u(a)&&a.value[0]===e.Comma){if(n===l)return-1;if(n===o){n=l;continue}if(n===i){n=o;continue}return-1}n.push(a)}}const c=solve(calc(new m([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],i),t));if(-1===c)return-1;const p=solve(calc(new m([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],o),t));if(-1===p)return-1;const f=solve(calc(new m([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],l),t));return-1===f?-1:solveClamp(n,c,p,f)}function max(n,t){const r=[...n.value.filter((e=>!a(e)&&!s(e)))],i=[];{const n=[];let o=[];for(let t=0;t<r.length;t++){const i=r[t];u(i)&&i.value[0]===e.Comma?(n.push(o),o=[]):o.push(i)}n.push(o);for(let r=0;r<n.length;r++){const u=solve(calc(new m([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[r]),t));if(-1===u)return-1;i.push(u)}}return solveMax(n,i)}function min(n,t){const r=[...n.value.filter((e=>!a(e)&&!s(e)))],i=[];{const n=[];let o=[];for(let t=0;t<r.length;t++){const i=r[t];u(i)&&i.value[0]===e.Comma?(n.push(o),o=[]):o.push(i)}n.push(o);for(let r=0;r<n.length;r++){const u=solve(calc(new m([e.Function,"calc(",-1,-1,{value:"calc"}],[e.CloseParen,")",-1,-1,void 0],n[r]),t));if(-1===u)return-1;i.push(u)}}return solveMin(n,i)}function tokenizeGlobals(n){const i=new Map;if(!n)return i;for(const[u,o]of n)if(t(o))i.set(u,o);else if("string"!=typeof o);else{const n=r({css:o}),t=n.nextToken();if(n.nextToken(),!n.endOfFile())continue;if(t[0]!==e.Number&&t[0]!==e.Dimension&&t[0]!==e.Percentage)continue;i.set(u,t)}return i}function convert(e,n){const t=tokenizeGlobals(n),u=r({css:e}),o=[];for(;!u.endOfFile();)o.push(u.nextToken());o.push(u.nextToken());const a=p(o,{});for(let e=0;e<a.length;e++){const n=a[e];for(let e=0;e<n.length;e++){const r=n[e];if(c(r))if("calc"===r.getName().toLowerCase()){const i=solve(calc(r,t));if(-1!==i){n.splice(e,1,i);continue}}else if("clamp"===r.getName().toLowerCase()){const i=solve(clamp(r,t));if(-1!==i){n.splice(e,1,i);continue}}else if("min"===r.getName().toLowerCase()){const i=solve(min(r,t));if(-1!==i){n.splice(e,1,i);continue}}else if("max"===r.getName().toLowerCase()){const i=solve(max(r,t));if(-1!==i){n.splice(e,1,i);continue}}(l(r)||c(r))&&r.walk(((e,n)=>{if("number"!=typeof n)return;const r=e.node;if(c(r))if("calc"===r.getName().toLowerCase()){const i=solve(calc(r,t));if(-1!==i)return void e.parent.value.splice(n,1,i)}else if("clamp"===r.getName().toLowerCase()){const i=solve(clamp(r,t));if(-1!==i)return void e.parent.value.splice(n,1,i)}else if("min"===r.getName().toLowerCase()){const i=solve(min(r,t));if(-1!==i)return void e.parent.value.splice(n,1,i)}else if("max"===r.getName().toLowerCase()){const i=solve(max(r,t));if(-1!==i)return void e.parent.value.splice(n,1,i)}}))}}return a.map((e=>e.map((e=>i(...e.tokens()))).join(""))).join(",")}export{convert};
