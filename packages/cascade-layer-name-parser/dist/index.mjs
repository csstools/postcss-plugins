import{parseCommaSeparatedListOfComponentValues as e,isTokenNode as t,isCommentNode as r,isWhitespaceNode as n}from"@csstools/css-parser-algorithms";import{TokenType as s,stringify as a,tokenizer as o}from"@csstools/css-tokenizer";class LayerName{parts;constructor(e){this.parts=e}tokens(){return[...this.parts]}segments(){return this.parts.filter((e=>e[0]===s.Ident)).map((e=>e[4].value))}name(){return this.parts.filter((e=>e[0]===s.Ident||e[0]===s.Delim)).map((e=>e[1])).join("")}toString(){return a(...this.parts)}toJSON(){return{parts:this.parts,segments:this.segments(),name:this.name()}}}function parseFromTokens(a,o){const i=e(a,{onParseError:null==o?void 0:o.onParseError}),m=(null==o?void 0:o.onParseError)??(()=>{}),genericError=e=>({message:`Invalid cascade layer name. ${e}`,start:a[0][2],end:a[a.length-1][3],state:["6.4.2. Layer Naming and Nesting","Layer name syntax","<layer-name> = <ident> [ '.' <ident> ]*"]}),l=[];for(let e=0;e<i.length;e++){const a=i[e];for(let e=0;e<a.length;e++){const s=a[e];if(!t(s)&&!r(s)&&!n(s))return m(genericError(`Invalid layer name part "${s.toString()}"`)),[]}const o=a.flatMap((e=>e.tokens()));let p,u=!1,c=!1;for(let e=0;e<o.length;e++){const t=o[e];if(t[0]!==s.Comment&&t[0]!==s.Whitespace&&t[0]!==s.Ident&&(t[0]!==s.Delim||"."!==t[4].value))return m(genericError(`Invalid character "${t[1]}"`)),[];if(!u&&t[0]===s.Delim)return m(genericError("Layer names can not start with a dot.")),[];if(u){if(t[0]===s.Whitespace){c=!0;continue}if(c)return m(genericError("Encountered unexpected whitespace between layer name parts.")),[];if(p[0]===s.Ident&&t[0]===s.Ident)return m(genericError("Layer name parts must be separated by dots.")),[];if(p[0]===s.Delim&&t[0]===s.Delim)return m(genericError("Layer name parts must not be empty.")),[]}t[0]===s.Ident&&(u=!0),t[0]!==s.Ident&&t[0]!==s.Delim||(p=t)}if(!p)return m(genericError("Empty layer name.")),[];if(p[0]===s.Delim)return m(genericError("Layer name must not end with a dot.")),[];l.push(new LayerName(o))}return l}function parse(e,t){const r=o({css:e},{commentsAreTokens:!0,onParseError:null==t?void 0:t.onParseError}),n=[];for(;!r.endOfFile();)n.push(r.nextToken());return n.push(r.nextToken()),parseFromTokens(n,t)}export{LayerName,parse,parseFromTokens};
